<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript添加删除记录练习</title>
      <link href="/archives/eec7840a.html"/>
      <url>/archives/eec7840a.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript添加删除记录练习"><a href="#JavaScript添加删除记录练习" class="headerlink" title="JavaScript添加删除记录练习"></a>JavaScript添加删除记录练习</h1><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281225422.gif" alt="在这里插入图片描述"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>添加删除记录练习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.w</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">940px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#employeeTable</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#employeeTable</span> <span class="selector-tag">td</span>,<span class="selector-tag">th</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*    1.confirm()用于删除一个带有确认和取消按钮的提示框</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        需要一个字符串作为参数，该字符串将会作为提示文字显示出来</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        如果用户点击确认则会返回true 点击取消则会返回false */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">delA</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//点击超链接以后，删除一个员工信息    </span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取所有超链接</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> allA = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;a&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//为每一个超链接绑定一个单击响应函数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allA.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// alert(&quot;for循环正在执行&quot;+i);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                allA[i].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//alert(&quot;响应函数正在执行&quot;+i);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//点击超链接以后需要删除超链接所在的那一行</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//这里我们点击哪个超链接this就是谁</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//获取当前tr，即a节点父亲的父亲</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">var</span> tr = <span class="variable language_">this</span>.<span class="property">parentNode</span>.<span class="property">parentNode</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                        for循环会在页面加载完成之后立即执行，</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                         而响应函数会在超链接被点击时菜执行</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                        当响应函数执行时，for循环早已执行完毕</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    */</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// alert(allA[i] == this);//false</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// alert(allA[i]);//undefined</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// alert(i);//allA.length的值</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//获取要删除员工的名字，即tr的第一个子节点</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">var</span> name = tr.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;td&quot;</span>)[<span class="number">0</span>].<span class="property">innerHTML</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//var name=tr.children[0].innerHTML;  </span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//与上面的方法一样，如果我们要用firstElementChild获取当前元素的第一个子元素也是一样的；</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//删除之间弹出一个提示框</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                        confirm()用于弹出一个带有确认和取消按钮的提示框</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                            需要一个字符串作为参数，该字符串会作为提示文字显示出来</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    */</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">var</span> flag = <span class="title function_">confirm</span>(<span class="string">&quot;确认删除&quot;</span> + name + <span class="string">&quot;吗？&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (flag) &#123;</span></span><br><span class="line"><span class="language-javascript">                        tr.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(tr);<span class="comment">//点击确认删除</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                        点击超链接后，超链接会跳转页面，这是超链接的默认行为</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                        但是我们此时不希望出现默认行为，可以在响应函数最后写returnfalse</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    */</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                点击超链接以后，删除一个员工信息    </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            */</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取所有超链接</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> allA = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;a&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//为每一个超链接绑定一个单击响应函数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allA.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                allA[i].<span class="property">onclick</span> = delA;     <span class="comment">//在调用函数时，加括号会返回一个值，并立即执行   </span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//不加括号表示把函数名fun这个指针拷贝一份给变量a，用于传参，</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//此时不是得到函数的结果，因为不会运行函数体代码。</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//它只是传递了函数体所在的地址位置。这样做的好处是可以在需要的时候找到函数并执行。 </span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                添加员工的功能  </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    点击按钮以后，将员工信息添加到表格中</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            */</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//为提交按钮绑定一个单击响应函数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> addEmpButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;addEmpButton&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            addEmpButton.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取用户添加的员工信息</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取员工的名字</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> name = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;empName&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取其他信息email和salary</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> email = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;email&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> salary = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;salary&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//alert(name+&quot;,&quot;+email+&quot;,&quot;+salary);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//需要将获取到的信息保存到tr中  格式如下</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                &lt;tr&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    &lt;td&gt;Bom&lt;/td&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    &lt;td&gt;Bom@Bom.com&lt;/td&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    &lt;td&gt;10000&lt;/td&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    &lt;td&gt;&lt;a href=&quot;javascript:;&quot;&gt;Delete&lt;/a&gt;&lt;/td&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                &lt;/tr&gt;    </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//以下方法创建有些复杂，但是便于我们理解DOM对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//创建一个tr</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> tr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;tr&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//创建四个td</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> nameTD = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;td&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> emailTD = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;td&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> salaryTD = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;td&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> aTD = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;td&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//创建一个a元素</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//创建文本节点</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> nameText = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(name);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> emailText = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(email);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> salaryText = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(salary);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> delText = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;Delete&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//将文本添加到td中</span></span></span><br><span class="line"><span class="language-javascript">                nameTD.<span class="title function_">appendChild</span>(nameText);</span></span><br><span class="line"><span class="language-javascript">                emailTD.<span class="title function_">appendChild</span>(emailText);</span></span><br><span class="line"><span class="language-javascript">                salaryTD.<span class="title function_">appendChild</span>(salaryText);</span></span><br><span class="line"><span class="language-javascript">                a.<span class="title function_">appendChild</span>(delText);</span></span><br><span class="line"><span class="language-javascript">                aTD.<span class="title function_">appendChild</span>(a);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//将td添加到tr中</span></span></span><br><span class="line"><span class="language-javascript">                tr.<span class="title function_">appendChild</span>(nameTD);</span></span><br><span class="line"><span class="language-javascript">                tr.<span class="title function_">appendChild</span>(emailTD);</span></span><br><span class="line"><span class="language-javascript">                tr.<span class="title function_">appendChild</span>(salaryTD);</span></span><br><span class="line"><span class="language-javascript">                tr.<span class="title function_">appendChild</span>(aTD);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//向a中添加属性href</span></span></span><br><span class="line"><span class="language-javascript">                a.<span class="property">href</span> = <span class="string">&quot;javascript:;&quot;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//为新添的a再绑定一次单击响应函数</span></span></span><br><span class="line"><span class="language-javascript">                a.<span class="property">onclick</span> = delA;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//下面几行代码与上面的作用一样，很便捷</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//var tr =document.createElement(&quot;tr&quot;);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//设置tr里面的内容</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">/*tr.innerHTML=&quot;&lt;td&gt;&quot;+name+&quot;&lt;/td&gt;&quot;+</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                            &quot;&lt;td&gt;&quot;+email+&quot;&lt;/td&gt;&quot;+</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                            &quot;&lt;td&gt;&quot;+salary+&quot;&lt;/td&gt;&quot;+</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                            &quot;&lt;td&gt;&lt;a href=&#x27;javascript:;&#x27;&gt;Delete&lt;/a&gt;&lt;/td&gt;&quot;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                var a = tr.getElementsByTagName(&quot;a&quot;)[0];</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                a.οnclick=delA;    */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取table</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> employeeTable = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;employeeTable&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取employeeTable中的tbody</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> tbody = employeeTable.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;tbody&quot;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//将tr添加到table中</span></span></span><br><span class="line"><span class="language-javascript">                tbody.<span class="title function_">appendChild</span>(tr);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;employeeTable&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Salary<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span> <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tom<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>tom@tom.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>5000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jerry<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>jerry@jerry.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>8000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;deleteEmp?id=002&quot;</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bom<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bom@Bom.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>10000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;deleteEmp?id=003&quot;</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;formDiv&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>添加新员工<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;word&quot;</span>&gt;</span>name:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;inp&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">id</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;word&quot;</span>&gt;</span>email:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;inp&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;word&quot;</span>&gt;</span>salary:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;inp&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;salary&quot;</span> <span class="attr">id</span>=<span class="string">&quot;salary&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;addEmpButton&quot;</span> <span class="attr">value</span>=<span class="string">&quot;abc&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript实现鼠标拖拽div练习</title>
      <link href="/archives/fcf87c98.html"/>
      <url>/archives/fcf87c98.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript实现鼠标拖拽div练习"><a href="#JavaScript实现鼠标拖拽div练习" class="headerlink" title="JavaScript实现鼠标拖拽div练习"></a>JavaScript实现鼠标拖拽div练习</h1><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281224214.gif" alt="img"></p><p><strong>如何实现拖拽的效果呢？</strong></p><p>我们需要用到三个函数： <code>onmousedown</code>、<code>onmousemove</code>、<code>onmouseup</code>，分别表示鼠标按下、鼠标移动、鼠标抬起</p><p>在鼠标按下的回调函数中，我们需要通过<code>clientX</code>和<code>clientY</code>获取鼠标的初始位置，通过<code>offsetLeft</code>和<code>offsetTop</code>获取盒子的初始位置，然后计算鼠标初始位置和盒子初始位置的差值；</p><p>在鼠标移动的回调函数中，我们需要根据鼠标的位置和之前计算得到的差值来获取盒子现在的位置，然后改变其left和top值，不要忘记将position设置为absolute（因为我就忘记了。。。)</p><p>在鼠标抬起的回调函数中，我们需要清除鼠标移动和鼠标抬起，通过将<code>onmousemove</code>和<code>onmouseup</code>值设置为null即可</p><p>还要<strong>注意！！！</strong></p><p>鼠标移动函数和抬起函数均要写在鼠标按下函数中，因为我们是要在鼠标按下这个动作之后来设计之后的行为，而且<strong>很重要的一点是：</strong></p><p><strong>鼠标按下函数是div的，鼠标移动和鼠标抬起是document的</strong></p><p>因为我们的意思并不是鼠标在div中移动，而是在整个页面移动</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#box</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aquamarine;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 好家伙 都没设置定位  就想移动 改变left。。。 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> box=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        box.<span class="property">onmousedown</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//此处不是box.onmousemove，是document.onmousemove</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">onmousemove</span>=<span class="keyword">function</span>(<span class="params">event</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                event = event || <span class="variable language_">window</span>.<span class="property">event</span>;</span></span><br><span class="line"><span class="language-javascript">                </span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取鼠标的坐标</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> left = event.<span class="property">clientX</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> top = event.<span class="property">clientY</span>;</span></span><br><span class="line"><span class="language-javascript">                </span></span><br><span class="line"><span class="language-javascript">                box.<span class="property">style</span>.<span class="property">left</span>=left+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                box.<span class="property">style</span>.<span class="property">top</span>=top+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//要写在ommousedown里面</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">onmouseup</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//这俩都要置为null</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="property">onmousemove</span>=<span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">                </span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//注意，需要将onmouseup也设置为null，否则不在div内松开鼠标仍会执行onmouseup函数</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="property">onmouseup</span>=<span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>初步实现之后，发现鼠标在div内点击时，鼠标总是出现在div的左上角，现在我们需要实现这样的功能，鼠标在哪点击，并进行拖动，那么在拖动过程中鼠标与div的相对位置保持不变。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> box=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">onmousedown</span>=<span class="keyword">function</span>(<span class="params">event</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        event = event || <span class="variable language_">window</span>.<span class="property">event</span>;</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//div的偏移量  鼠标.clientX - 元素.offsetLeft;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//div的偏移量  鼠标.clientY - 元素.offsetTop;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> disx=event.<span class="property">clientX</span>-box.<span class="property">offsetLeft</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> disy=event.<span class="property">clientY</span>-box.<span class="property">offsetTop</span>;</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//此处不是box.onmousemove，是document.onmousemove</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">onmousemove</span>=<span class="keyword">function</span>(<span class="params">event</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            box.<span class="property">style</span>.<span class="property">left</span>=event.<span class="property">clientX</span>-disx+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            box.<span class="property">style</span>.<span class="property">top</span>=event.<span class="property">clientY</span>-disy+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//要写在ommousedown里面</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">onmouseup</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//这俩都要置为null</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">onmousemove</span>=<span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">onmouseup</span>=<span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//当我们拖拽网页中的内容时，浏览器会默认去搜索引擎中搜索内容</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//此时会导致拖拽功能的异常，这个是浏览器提供的默认行为</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//如果不希望发生这个行为，则可以通过return false来取消默认行为</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>将上述功能制作成一个函数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> box1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box1&quot;</span>);  </span><br><span class="line">    <span class="keyword">var</span> box2 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box2&quot;</span>);  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//开启box1的拖拽</span></span><br><span class="line">    <span class="title function_">drag</span>(box1);</span><br><span class="line">    <span class="comment">//开启box2的拖拽</span></span><br><span class="line">    <span class="title function_">drag</span>(box2);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//obj：开启拖拽的元素</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">drag</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">    obj.<span class="property">onmousedown</span>=<span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">    event = event || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//div的偏移量  鼠标.clientX - 元素.offsetLeft;</span></span><br><span class="line">    <span class="comment">//div的偏移量  鼠标.clientY - 元素.offsetTop;</span></span><br><span class="line">    <span class="keyword">var</span> disx=event.<span class="property">clientX</span>-obj.<span class="property">offsetLeft</span>;</span><br><span class="line">    <span class="keyword">var</span> disy=event.<span class="property">clientY</span>-obj.<span class="property">offsetTop</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此处不是box.onmousemove，是document.onmousemove</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onmousemove</span>=<span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">        obj.<span class="property">style</span>.<span class="property">left</span>=event.<span class="property">clientX</span>-disx+<span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        obj.<span class="property">style</span>.<span class="property">top</span>=event.<span class="property">clientY</span>-disy+<span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//要写在ommousedown里面</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onmouseup</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">//这俩都要置为null</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">onmousemove</span>=<span class="literal">null</span>; </span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">onmouseup</span>=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//当我们拖拽网页中的内容时，浏览器会默认去搜索引擎中搜索内容</span></span><br><span class="line">        <span class="comment">//此时会导致拖拽功能的异常，这个是浏览器提供的默认行为</span></span><br><span class="line">        <span class="comment">//如果不希望发生这个行为，则可以通过return false来取消默认行为</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript全选练习</title>
      <link href="/archives/6b9e115c.html"/>
      <url>/archives/6b9e115c.html</url>
      
        <content type="html"><![CDATA[<h1 id="Javascript全选练习"><a href="#Javascript全选练习" class="headerlink" title="Javascript全选练习"></a>Javascript全选练习</h1><p>结果：<br>全选：<br><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281224121.png" alt="在这里插入图片描述"><br>全不选：<br><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281224761.png" alt="在这里插入图片描述"><br>反选：<br><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281224384.png" alt="在这里插入图片描述"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html <span class="variable constant_">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;全选练习&lt;/title&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">window.onload = function()&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//获取四个多选框items</span><br><span class="line">var items = document.getElementsByName(&quot;items&quot;);</span><br><span class="line">//获取全选/全不选的多选框</span><br><span class="line">var checkedAllBox = document.getElementById(&quot;checkedAllBox&quot;);</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 全选按钮</span><br><span class="line"> * - 点击按钮以后，四个多选框全都被选中</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">//1.#checkedAllBtn</span><br><span class="line">//为id为checkedAllBtn的按钮绑定一个单击响应函数</span><br><span class="line">var checkedAllBtn = document.getElementById(&quot;checkedAllBtn&quot;);</span><br><span class="line">checkedAllBtn.onclick = function()&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//遍历items</span><br><span class="line">for(var i=0 ; i&lt;items.length ; i++)&#123;</span><br><span class="line"></span><br><span class="line">//通过多选框的checked属性可以来获取或设置多选框的选中状态</span><br><span class="line">//alert(items[i].checked);</span><br><span class="line"></span><br><span class="line">//设置四个多选框变成选中状态</span><br><span class="line">items[i].checked = true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//将全选/全不选设置为选中</span><br><span class="line">checkedAllBox.checked = true;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 全不选按钮</span><br><span class="line"> * - 点击按钮以后，四个多选框都变成没选中的状态</span><br><span class="line"> */</span><br><span class="line">//2.#checkedNoBtn</span><br><span class="line">//为id为checkedNoBtn的按钮绑定一个单击响应函数</span><br><span class="line">var checkedNoBtn = document.getElementById(&quot;checkedNoBtn&quot;);</span><br><span class="line">checkedNoBtn.onclick = function()&#123;</span><br><span class="line"></span><br><span class="line">for(var i=0; i&lt;items.length ; i++)&#123;</span><br><span class="line">//将四个多选框设置为没选中的状态</span><br><span class="line">items[i].checked = false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//将全选/全不选设置为不选中</span><br><span class="line">checkedAllBox.checked = false;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 反选按钮</span><br><span class="line"> * - 点击按钮以后，选中的变成没选中，没选中的变成选中</span><br><span class="line"> */</span><br><span class="line">//3.#checkedRevBtn</span><br><span class="line">var checkedRevBtn = document.getElementById(&quot;checkedRevBtn&quot;);</span><br><span class="line">checkedRevBtn.onclick = function()&#123;</span><br><span class="line"></span><br><span class="line">//将checkedAllBox设置为选中状态</span><br><span class="line">checkedAllBox.checked = true;</span><br><span class="line"></span><br><span class="line">for(var i=0; i&lt;items.length ; i++)&#123;</span><br><span class="line"></span><br><span class="line">//判断多选框状态</span><br><span class="line">/*if(items[i].checked)&#123;</span><br><span class="line">//证明多选框已选中，则设置为没选中状态</span><br><span class="line">items[i].checked = false;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">//证明多选框没选中，则设置为选中状态</span><br><span class="line">items[i].checked = true;</span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line">items[i].checked = !items[i].checked;</span><br><span class="line"></span><br><span class="line">//判断四个多选框是否全选</span><br><span class="line">//只要有一个没选中则就不是全选</span><br><span class="line">if(!items[i].checked)&#123;</span><br><span class="line">//一旦进入判断，则证明不是全选状态</span><br><span class="line">//将checkedAllBox设置为没选中状态</span><br><span class="line">checkedAllBox.checked = false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//在反选时也需要判断四个多选框是否全都选中</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 提交按钮：</span><br><span class="line"> * - 点击按钮以后，将所有选中的多选框的value属性值弹出</span><br><span class="line"> */</span><br><span class="line">//4.#sendBtn</span><br><span class="line">//为sendBtn绑定单击响应函数</span><br><span class="line">var sendBtn = document.getElementById(&quot;sendBtn&quot;);</span><br><span class="line">sendBtn.onclick = function()&#123;</span><br><span class="line">//遍历items</span><br><span class="line">for(var i=0 ; i&lt;items.length ; i++)&#123;</span><br><span class="line">//判断多选框是否选中</span><br><span class="line">if(items[i].checked)&#123;</span><br><span class="line">alert(items[i].value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//5.#checkedAllBox</span><br><span class="line">/*</span><br><span class="line"> * 全选/全不选 多选框</span><br><span class="line"> * - 当它选中时，其余的也选中，当它取消时其余的也取消</span><br><span class="line"> * </span><br><span class="line"> * 在事件的响应函数中，响应函数是给谁绑定的this就是谁</span><br><span class="line"> */</span><br><span class="line">//为checkedAllBox绑定单击响应函数</span><br><span class="line">checkedAllBox.onclick = function()&#123;</span><br><span class="line"></span><br><span class="line">//alert(this === checkedAllBox);</span><br><span class="line"></span><br><span class="line">//设置多选框的选中状态</span><br><span class="line">for(var i=0; i &lt;items.length ; i++)&#123;</span><br><span class="line">items[i].checked = this.checked;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//6.items</span><br><span class="line">/*</span><br><span class="line"> * 如果四个多选框全都选中，则checkedAllBox也应该选中</span><br><span class="line"> * 如果四个多选框没都选中，则checkedAllBox也不应该选中</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">//为四个多选框分别绑定点击响应函数</span><br><span class="line">for(var i=0 ; i&lt;items.length ; i++)&#123;</span><br><span class="line">items[i].onclick = function()&#123;</span><br><span class="line"></span><br><span class="line">//将checkedAllBox设置为选中状态</span><br><span class="line">checkedAllBox.checked = true;</span><br><span class="line"></span><br><span class="line">for(var j=0 ; j&lt;items.length ; j++)&#123;</span><br><span class="line">//判断四个多选框是否全选</span><br><span class="line">//只要有一个没选中则就不是全选</span><br><span class="line">if(!items[j].checked)&#123;</span><br><span class="line">//一旦进入判断，则证明不是全选状态</span><br><span class="line">//将checkedAllBox设置为没选中状态</span><br><span class="line">checkedAllBox.checked = false;</span><br><span class="line">//一旦进入判断，则已经得出结果，不用再继续执行循环</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form method=&quot;post&quot; action=&quot;&quot;&gt;</span><br><span class="line">你喜欢的大学是？&lt;input type=&quot;checkbox&quot; id=&quot;checkedAllBox&quot; /&gt;全选/全不选 </span><br><span class="line"></span><br><span class="line">&lt;br /&gt;</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;items&quot; value=&quot;哈佛大学&quot; /&gt;哈佛大学</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;items&quot; value=&quot;牛津大学&quot; /&gt;牛津大学</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;items&quot; value=&quot;剑桥大学&quot; /&gt;剑桥大学</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;items&quot; value=&quot;西点军校&quot; /&gt;西点军校</span><br><span class="line">&lt;br /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; id=&quot;checkedAllBtn&quot; value=&quot;全　选&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; id=&quot;checkedNoBtn&quot; value=&quot;全不选&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; id=&quot;checkedRevBtn&quot; value=&quot;反　选&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; id=&quot;sendBtn&quot; value=&quot;提　交&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础知识&lt;一&gt;</title>
      <link href="/archives/5fc5329d.html"/>
      <url>/archives/5fc5329d.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript基础知识-lt-一-gt"><a href="#JavaScript基础知识-lt-一-gt" class="headerlink" title="JavaScript基础知识&lt;一&gt;"></a>JavaScript基础知识&lt;一&gt;</h1><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281639094.png" alt="image-20230128163935681"></p><h2 id="一、JavaScript简介"><a href="#一、JavaScript简介" class="headerlink" title="一、JavaScript简介"></a>一、JavaScript简介</h2><p><strong>解释型语言</strong></p><p>JavaScript是一门解释型语言，所谓解释型值语言是指不需要被编译为机器码在执行，而是直接执行。由于少了编译这一步骤，所以解释型语言开发起来尤为轻松，但是解释型语言运行较慢也是它的劣势。不过解释型语言中使用了JIT技术，使得运行速度得以改善。</p><p><strong>动态语言</strong></p><p>JavaScript是一门动态语言，所谓的动态语言可以暂时理解为在语言中的一切内容都是不确定的。比如一个变量，这一时刻是个整型，下一时刻可能会变成字符串了。当然这个问题我们以后再谈。不过在补充一句动态语言相比静态语言性能上要差一些，不过由于JavaScript中应用的JIT技术，所以JavaScript可能是运行速度最快的动态语言了。</p><p><strong>类似于 C 和 Java 的语法结构</strong></p><p>JavaScript的语法结构与C和Java很像，向for、if、while等语句和Java的基本上是一模一样的。所以有过C和Java基础的同学学习起来会轻松很多。不过JavaScript和与Java的关系也仅仅是看起来像而已。</p><p><strong>严格区分大小写</strong></p><p>JavaScript是严格区分大小写的，也就是abc和Abc会被解析器认为是两个不同的东西。</p><h2 id="二、JavaScript的使用"><a href="#二、JavaScript的使用" class="headerlink" title="二、JavaScript的使用"></a>二、JavaScript的使用</h2><h3 id="1、标签引用"><a href="#1、标签引用" class="headerlink" title="1、标签引用"></a>1、标签引用</h3><p>在HTML中在script标签中就可以编写JavaScript代码，以下是一个简单演示。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&quot;Hello,World!&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、文件引用"><a href="#2、文件引用" class="headerlink" title="2、文件引用"></a>2、文件引用</h3><p>在一个单独的js文件中也可以编写JavaScript代码，然后在HTML文件中使用script标签进行引用，以下是一个简单演示。</p><p>main.html</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;main.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;Hello,World!&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="3、JavaScript的输出"><a href="#3、JavaScript的输出" class="headerlink" title="3、JavaScript的输出"></a>3、JavaScript的输出</h3><h4 id="1）页面输出"><a href="#1）页面输出" class="headerlink" title="1）页面输出"></a>1）页面输出</h4><p>如何使用JavaScript向页面输出一句话，请参考以下代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello,World!&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="1）控制台输出"><a href="#1）控制台输出" class="headerlink" title="1）控制台输出"></a>1）控制台输出</h4><p>如何使用JavaScript向控制台输出一句话，请参考以下代码。</p><blockquote><p>注意：页面按F12弹出控制台</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;输出一条日志&quot;</span>);<span class="comment">//最常用</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;输出一条信息&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;输出一条警告&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;输出一条错误&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281223383.png" alt="image-20201025103100826"></p><h4 id="3）弹出窗口输出"><a href="#3）弹出窗口输出" class="headerlink" title="3）弹出窗口输出"></a>3）弹出窗口输出</h4><p>如何使用JavaScript向弹出窗口输出一句话，请参考以下代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;Hello,World!&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="4、JavaScript的注释"><a href="#4、JavaScript的注释" class="headerlink" title="4、JavaScript的注释"></a>4、JavaScript的注释</h3><p>注释中的内容不会被解析器解析执行，但是会在源码中显示，我们一般会使用注释对程序中的内容进行解释。</p><p>JS中的注释和Java的的一致，分为两种：</p><ul><li>单行注释：<code>// 注释内容</code></li><li>多行注释：<code>/* 注释内容 */</code></li></ul><h4 id="1）单行注释"><a href="#1）单行注释" class="headerlink" title="1）单行注释"></a>1）单行注释</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 这是注释内容</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello,World!&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="2）多行注释"><a href="#2）多行注释" class="headerlink" title="2）多行注释"></a>2）多行注释</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这是注释内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello,World!&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="三、JavaScript的基础语法"><a href="#三、JavaScript的基础语法" class="headerlink" title="三、JavaScript的基础语法"></a>三、JavaScript的基础语法</h2><h3 id="1、变量"><a href="#1、变量" class="headerlink" title="1、变量"></a>1、变量</h3><p><strong>变量的声明：</strong> 使用var关键字声明一个变量。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br></pre></td></tr></table></figure><p><strong>变量的赋值：</strong> 使用=为变量赋值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><p><strong>声明和赋值同时进行：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><p>在较老的脚本中，你也可能发现另一个关键字  let：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> message = <span class="string">&#x27;Hello!&#x27;</span>; <span class="comment">// 定义变量，并且赋值</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(message); <span class="comment">// Hello!</span></span><br></pre></td></tr></table></figure><p><strong>声明一个常数（不变）变量，可以使用 const</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myBirthday = <span class="string">&#x27;18.04.1982&#x27;</span>;</span><br></pre></td></tr></table></figure><ol><li><p>重点：javascript是一种弱类型编程语言。</p></li><li><p>在JS当中,当一个变量没有手动赋值的时候,系统默认赋值undefined</p></li><li><p> 一个变量没有声明/定义,直接访问?</p></li></ol><p>alert(age); //语法错误：age is not defined (变量age不存在。不能这样写。)</p><h3 id="2、数据类型"><a href="#2、数据类型" class="headerlink" title="2、数据类型"></a>2、数据类型</h3><h4 id="1）类型分类"><a href="#1）类型分类" class="headerlink" title="1）类型分类"></a>1）类型分类</h4><p>数据类型决定了一个数据的特征，比如：123和”123”，直观上看这两个数据都是123，但实际上前者是一个数字，而后者是一个字符串。</p><p>对于不同的数据类型我们在进行操作时会有很大的不同。</p><p>JavaScript中一共有5种基本数据类型：</p><ul><li>字符串型（String）</li><li>数值型（Number）</li><li>布尔型（Boolean）</li><li>undefined型（Undefined）</li><li>null型（Null）</li></ul><p>这5种之外的类型都称为Object，所以总的来看JavaScript中共有六种数据类型。</p><h4 id="2）typeof运算符"><a href="#2）typeof运算符" class="headerlink" title="2）typeof运算符"></a>2）typeof运算符</h4><p>使用typeof操作符可以用来检查一个变量的数据类型。</p><p><strong>使用方式：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typeof 数据</span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="number">123</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="string">&quot;Hello,World!&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">true</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">undefined</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281223143.png" alt="image-20201013080324458"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span> <span class="comment">// &quot;undefined&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">0</span> <span class="comment">// &quot;number&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">10n</span> <span class="comment">// &quot;bigint&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">true</span> <span class="comment">// &quot;boolean&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="string">&quot;foo&quot;</span> <span class="comment">// &quot;string&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="title class_">Symbol</span>(<span class="string">&quot;id&quot;</span>) <span class="comment">// &quot;symbol&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="title class_">Math</span> <span class="comment">// &quot;object&quot;  (1)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span> <span class="comment">// &quot;object&quot;  (2)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> alert <span class="comment">// &quot;function&quot;  (3)</span></span><br></pre></td></tr></table></figure><p><strong>注意:typeof(x)。它与 typeof x 相同。</strong></p><h3 id="number类型"><a href="#number类型" class="headerlink" title="number类型"></a>number类型</h3><p> <strong>类型代表整数和浮点数。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="number">123</span>;</span><br><span class="line">n = <span class="number">12.345</span>;</span><br></pre></td></tr></table></figure><p><strong>Infinity 代表数学概念中的 无穷大∞。是一个比任何数字都大的特殊值。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>( <span class="number">1</span> / <span class="number">0</span> ); <span class="comment">// Infinity</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//或者在代码中直接使用它：</span></span><br><span class="line"><span class="title function_">alert</span>( <span class="title class_">Infinity</span> ); <span class="comment">// Infinity</span></span><br></pre></td></tr></table></figure><p><strong>NaN 代表一个计算错误。它是一个不正确的数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>( <span class="string">&quot;not a number&quot;</span> / <span class="number">2</span> ); <span class="comment">// NaN，这样的除法是错误的</span></span><br></pre></td></tr></table></figure><ul><li>二进制：0b 开头表示二进制，但是，并不是所有的浏览器都支持</li><li>八进制：0 开头表示八进制</li><li>十六进制：0x 开头表示十六进制</li></ul><blockquote><p>注意：使用typeof检查一个Number类型的数据时（包括NaN 和 Infinity），会返回”number”。</p></blockquote><h3 id="BigInt"><a href="#BigInt" class="headerlink" title="BigInt"></a>BigInt</h3><p>有时我们需要很大的数字，例如用于加密或微秒精度的时间戳。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 尾部的 &quot;n&quot; 表示这是一个 BigInt 类型</span></span><br><span class="line"><span class="keyword">const</span> bigInt = <span class="number">1234567890123456789012345678901234567890n</span>;</span><br></pre></td></tr></table></figure><h3 id="Boolean类型"><a href="#Boolean类型" class="headerlink" title="Boolean类型"></a>Boolean类型</h3><p>布尔型也被称为逻辑值类型或者真假值类型。</p><p>布尔型只能够取真（true）和假（false）两种数值。除此以外， 其它的值都不被支持。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> isGreater = <span class="number">4</span> &gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( isGreater ); <span class="comment">// true（比较的结果是 &quot;yes&quot;）</span></span><br></pre></td></tr></table></figure><h3 id="Undefined类型"><a href="#Undefined类型" class="headerlink" title="Undefined类型"></a>Undefined类型</h3><p>Undefined 类型只有一个值，即特殊的 undefined。</p><p>在使用 var 声明变量但未对其加以初始化时，这个变量的值就是 undefined。</p><blockquote><p>注意：使用typeof对没有初始化和没有声明的变量，会返回“undefined”。</p></blockquote><h3 id="Null类型"><a href="#Null类型" class="headerlink" title="Null类型"></a>Null类型</h3><p>Null 类型是第二个只有一个值的数据类型，这个特殊的值是 null。</p><p>undefined值实际上是由null值衍生出来的，所以如果比较undefined和null是否相等，会返回true。</p><blockquote><p>注意：从语义上看null表示的是一个空的对象，所以使用typeof检查null会返回一个Object。</p></blockquote><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><p>String用于表示一个字符序列，即字符串。字符串需要使用 <strong>单引号</strong> 或 <strong>双引号</strong> 括起来。</p><p><strong>转义字符：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281223740.png" alt="image-20201013085608008"></p><blockquote><p>注意：使用typeof运算符检查字符串时，会返回”string”。</p></blockquote><h3 id="object-类型和-symbol-类型"><a href="#object-类型和-symbol-类型" class="headerlink" title="object 类型和 symbol 类型"></a>object 类型和 symbol 类型</h3><p>在对象中专门讲解</p><p>object 用于储存数据集合和更复杂的实体。</p><p>symbol 类型用于创建对象的唯一标识符。</p><h3 id="转换为String类型"><a href="#转换为String类型" class="headerlink" title="转换为String类型"></a>转换为String类型</h3><p>将其它数值转换为字符串有三种方式：toString()、String()、 拼串。</p><ul><li>方式一：调用被转换数据类型的toString()方法，该方法不会影响到原变量，它会将转换的结果返回，但是注意：null和undefined这两个值没有toString()方法，如果调用它们的方法，会报错。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line">a = a.<span class="title function_">toString</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);</span><br></pre></td></tr></table></figure><ul><li>方式二：调用String()函数，并将被转换的数据作为参数传递给函数，使用String()函数做强制类型转换时，对于Number和Boolean实际上就是调用的toString()方法，==但是对于null和undefined，就不会调用toString()方法，它会将 null 直接转换为 “null”，将 undefined 直接转换为 “undefined”。==</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line">a = <span class="title class_">String</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = <span class="literal">undefined</span>;</span><br><span class="line">b = <span class="title class_">String</span>(b);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c = <span class="literal">null</span>;</span><br><span class="line">c = <span class="title class_">String</span>(c);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> c);</span><br></pre></td></tr></table></figure><ul><li>方式三：为任意的数据类型 <code>+&quot;&quot;</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line">a = a + <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);</span><br></pre></td></tr></table></figure><h3 id="转换为Number类型"><a href="#转换为Number类型" class="headerlink" title="转换为Number类型"></a>转换为Number类型</h3><p>有三个函数可以把非数值转换为数值：Number()、parseInt() 和parseFloat()。Number()可以用来转换任意类型的数据，而后两者只能用于转换字符串。parseInt()只会将字符串转换为整数，而parseFloat()可以将字符串转换为浮点数。</p><ul><li><p>方式一：使用Number()函数</p><ul><li><p>字符串 –&gt; 数字</p><ul><li>如果是纯数字的字符串，则直接将其转换为数字</li><li>如果字符串中有非数字的内容，则转换为NaN</li><li>如果字符串是一个空串或者是一个全是空格的字符串，则转换为0</li></ul></li><li><p> 布尔 –&gt; 数字</p></li><li><p>true 转成 1</p></li><li><p>false 转成 0</p></li><li><p>null –&gt; 数字</p><ul><li>null 转成 0</li></ul></li><li><p>undefined –&gt; 数字</p><ul><li>undefined 转成 NaN</li></ul></li></ul></li><li><p>方式二：这种方式专门用来对付字符串，parseInt() 把一个字符串转换为一个整数</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">a = <span class="built_in">parseInt</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);</span><br></pre></td></tr></table></figure><ul><li>方式三：这种方式专门用来对付字符串，parseFloat() 把一个字符串转换为一个浮点数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;123.456&quot;</span>;</span><br><span class="line">a = <span class="built_in">parseFloat</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);</span><br></pre></td></tr></table></figure><blockquote><p>注意：如果对非String使用parseInt()或parseFloat()，它会先将其转换为String然后在操作</p></blockquote><h3 id="转换为Boolean类型"><a href="#转换为Boolean类型" class="headerlink" title="转换为Boolean类型"></a>转换为Boolean类型</h3><p>将其它的数据类型转换为Boolean，只能使用Boolean()函数。</p><ul><li><p>使用Boolean()函数</p><ul><li><p>数字 —&gt; 布尔</p><ul><li>除了0和NaN，其余的都是true</li></ul></li><li><p>字符串 —&gt; 布尔</p><ul><li>除了空串，其余的都是true</li></ul></li><li><p>null和undefined都会转换为false</p></li><li><p>对象也会转换为true</p></li></ul></li></ul><h2 id="四、JavaScript的对象"><a href="#四、JavaScript的对象" class="headerlink" title="四、JavaScript的对象"></a>四、JavaScript的对象</h2><h3 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h3><p>Object类型，我们也称为一个对象，是JavaScript中的引用数据类型。它是一种复合值，它将很多值聚合到一起，可以通过名字访问这些值。对象也可以看做是属性的无序集合，每个属性都是一个名/值对。对象除了可以创建自有属性，还可以通过从一个名为原型的对象那里继承属性。除了字符串、数字、true、false、null和undefined之外，JavaScript中的值都是对象。</p><h3 id="2、创建对象"><a href="#2、创建对象" class="headerlink" title="2、创建对象"></a>2、创建对象</h3><p>创建对象有两种方式：</p><ul><li>第一种方式：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">person.<span class="property">name</span> = <span class="string">&quot;孙悟空&quot;</span>;</span><br><span class="line">person.<span class="property">age</span> = <span class="number">18</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br></pre></td></tr></table></figure><ul><li>第二种方式：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;孙悟空&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br></pre></td></tr></table></figure><h3 id="3、访问属性"><a href="#3、访问属性" class="headerlink" title="3、访问属性"></a>3、访问属性</h3><p>访问属性的两种方式：</p><ul><li><p>第一种方式：使用 . 来访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象.属性名</span><br></pre></td></tr></table></figure></li><li><p>第二种方式：使用 [] 来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象[‘属性名’]</span><br></pre></td></tr></table></figure></li></ul><h3 id="4、删除属性"><a href="#4、删除属性" class="headerlink" title="4、删除属性"></a>4、删除属性</h3><p>删除对象的属性可以使用delete关键字，格式如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> 对象.属性名</span><br></pre></td></tr></table></figure><p>案例演示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">person.<span class="property">name</span> = <span class="string">&quot;孙悟空&quot;</span>;</span><br><span class="line">person.<span class="property">age</span> = <span class="number">18</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> person.<span class="property">name</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br></pre></td></tr></table></figure><h3 id="5、遍历对象"><a href="#5、遍历对象" class="headerlink" title="5、遍历对象"></a>5、遍历对象</h3><p>枚举遍历对象中的属性，可以使用for … in语句循环，对象中有几个属性，循环体就会执行几次。</p><p>语法格式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> 变量 <span class="keyword">in</span> 对象) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;zhangsan&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> personKey <span class="keyword">in</span> person) &#123;</span><br><span class="line">    <span class="keyword">var</span> personVal = person[personKey];</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(personKey + <span class="string">&quot;:&quot;</span> + personVal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6、数据类型梳理"><a href="#6、数据类型梳理" class="headerlink" title="6、数据类型梳理"></a>6、数据类型梳理</h3><h4 id="1）基本数据类型"><a href="#1）基本数据类型" class="headerlink" title="1）基本数据类型"></a>1）基本数据类型</h4><p>JavaScript中的变量可能包含两种不同数据类型的值：基本数据类型和引用数据类型。</p><p>JavaScript中一共有5种基本数据类型：String、Number、 Boolean、Undefined、Null。</p><p>基本数据类型的值是无法修改的，是不可变的。</p><p>基本数据类型的比较是值的比较，也就是只要两个变量的值相等，我们就认为这两个变量相等。</p><h4 id="2）引用数据类型"><a href="#2）引用数据类型" class="headerlink" title="2）引用数据类型"></a>2）引用数据类型</h4><p>引用类型的值是保存在内存中的对象。</p><p>当一个变量是一个对象时，实际上变量中保存的并不是对象本身，而是对象的引用。</p><p>当从一个变量向另一个变量复制引用类型的值时，会将对象的引用复制到变量中，并不是创建一个新的对象。</p><p>这时，两个变量指向的是同一个对象。因此，改变其中一个变量会影响另一个。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础知识&lt;五&gt;</title>
      <link href="/archives/72ef31a6.html"/>
      <url>/archives/72ef31a6.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript基础知识-lt-五-gt"><a href="#JavaScript基础知识-lt-五-gt" class="headerlink" title="JavaScript基础知识&lt;五&gt;"></a>JavaScript基础知识&lt;五&gt;</h1><h2 id="使用dom操作css样式"><a href="#使用dom操作css样式" class="headerlink" title="使用dom操作css样式"></a>使用dom操作css样式</h2><p><strong>通过js修改元素的样式</strong></p><blockquote><p>语法：元素.style.样式名 = 样式值</p><p>注意：如果css的样式名中含有’ - ‘，</p><p>​        这种名称在JS中是不合法的   比如box.style.background-color</p><p>​        需要将这种样式名修改为驼峰命名法</p><p>​        去掉 - ，然后将 - 后的字母大写</p><p>​        border-top-width    :     borderTopWidth</p><p>我们通过style属性设置的样式都是内联样式</p><p>​        而内联样式有较高的优先级，所以通过js修改的样式往往会立即显示</p><p>但是如果在样式中写了  !important，则此时将会导致js修改样式失效</p><p>​        所以尽量不要为样式添加  !important</p><p><strong>通过style属性设置和读取的都是内联样式</strong></p><p>​        <strong>无法读取样式表中的数据</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line"></span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  box.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&quot;300px&quot;</span>;  </span><br><span class="line">    box.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&quot;300px&quot;</span>;</span><br><span class="line">    <span class="comment">//box.style.background-color = &quot;yellow&quot;;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>获取元素的当前显示的样式，即获取应用在标签上的，可能不是内联样式的样式</p><p>​        语法：元素.currentStyle.样式名</p><p>它可以用来读取当前元素正在显示的样式</p><p>​        如果当前元素没有设置该样式，则获取它的默认值</p><p><strong>只有IE浏览器支持！！！</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(box.<span class="property">currentStyle</span>.<span class="property">width</span>);</span><br></pre></td></tr></table></figure><blockquote><p>其他浏览器可以使用</p><p>​        getComputedStyle()这个方法来获取元素当前的样式</p><p>​        这个方法是window的方法，可以直接使用</p><p>需要两个参数</p><p>​        第一个：要获取样式的元素</p><p>​        第二个：可以传递一个伪元素，一般都传null</p><p>该方法返回一个对象，对象中封装了当前元素对应的样式</p><p>​        可以通过对象.样式名来读取样式</p><p>​        如果获取的样式没有设置，则会获取真实的值，而不是默认值</p><p>​        比如：没有设置width，他不会获取到auto，而是一个长度</p><p>但是该方法不支持IE8</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = <span class="title function_">getComputedStyle</span>(box,<span class="literal">null</span>);</span><br><span class="line"><span class="title function_">alert</span>(obj.<span class="property">width</span>);</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>通过currentStyle和getComputedStyle()读取到的样式都是只读的</strong></p><p>​        <strong>不能修改，如果要修改必须通过style属性</strong></p></blockquote><hr><blockquote><p>由于getComputedStyle()不支持IE8</p><p>且currentStylr只支持IE浏览器，所以现在需要自定义一个函数，来使得在不知道浏览器类别的情况下一定获取到样式。</p><p>定义一个函数，来获取指定元素的当前样式</p><p>参数：</p><p>​        obj：要获取样式的元素</p><p>​        name：要获取的样式名</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getStyle</span>(<span class="params">obj,name</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">getComputedStyle</span>)&#123;</span><br><span class="line"><span class="comment">//正常浏览器的方式</span></span><br><span class="line"><span class="keyword">return</span> <span class="title function_">getComputedStyle</span>(obj,<span class="literal">null</span>)[name];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//IE8的方式</span></span><br><span class="line"><span class="keyword">return</span> obj.<span class="property">currentStyle</span>[name];</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//return window.getComputedStyle ? getComputedStyle(obj,null)[name] : obj.currentStyle[name];</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> w = <span class="title function_">getStyle</span>(box,<span class="string">&quot;width&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础知识&lt;四&gt;</title>
      <link href="/archives/744466db.html"/>
      <url>/archives/744466db.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript基础知识-lt-四-gt"><a href="#JavaScript基础知识-lt-四-gt" class="headerlink" title="JavaScript基础知识&lt;四&gt;"></a>JavaScript基础知识&lt;四&gt;</h1><p><strong>页面加载完成之后再执行JavaScript代码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>window.onload = function(){}的作用是在页面加载完成之后再执行函数里面的代码</p><p>众所周知，html里面的代码是从上到下开始执行，所以在最上面的JavaScript代码会在页面还没加载完成就开始执行，这样js代码会没有任何效果，所以window.onload = function(){}才起到了这样的作用</p></blockquote><p><strong>单击响应函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>获取标签内部的html内容</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> bj = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;bj&quot;</span>);</span><br><span class="line">    <span class="title function_">alert</span>(bj.<span class="property">innerHTML</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>获取标签内部的文本内容</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var btn = document.getElementById(&quot;btn&quot;);</span><br><span class="line">btn.onclick = function()&#123;</span><br><span class="line">    var bj = document.getElementById(&quot;bj&quot;);</span><br><span class="line">    alert(bj.innerText);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>获取getElementsByTagName里面的所有数据</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">var</span> lis = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;li&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;lis.<span class="property">length</span>;i++)&#123;</span><br><span class="line"><span class="title function_">alert</span>(lis[i].<span class="property">innerHTML</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>获取input标签里面的value值</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">var</span> inputs = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;inputs.<span class="property">length</span>;i++)&#123;</span><br><span class="line"><span class="title function_">alert</span>(inputs[i].<span class="property">value</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>/&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>如果需要读取元素节点属性，直接使用  元素.属性名   即可获取</p></blockquote><p><strong>childNodes和children</strong></p><blockquote><p>childNodes属性可以获取当前元素的所有子节点，包括空白文本</p><p>children属性可以获取当前元素的所有子元素，不包括空白文本</p></blockquote><p><strong>firstChild和firstElementChild</strong></p><blockquote><p>firstChild可以获取到当前元素的第一个子节点（包括空白文本节点）</p><p>firstElementChild可以获取到当前元素的第一个子元素（不包括空白文本节点）</p><p>​        不支持IE8及其以下的浏览器</p></blockquote><p><strong>lastChild和lastElementChild</strong></p><blockquote><p>Child可以获取到当前元素的第一个子节点（包括空白文本节点）</p><p>firstElementChild可以获取到当前元素的第一个子元素（不包括空白文本节点）</p><p>​        不支持IE8及其以下的浏览器</p></blockquote><p><strong>当重复多次书写代码时，我们可以整合成一个函数进行调用</strong></p><blockquote><p>整合前</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var btn01 = document.getElementById(&quot;btn01&quot;);</span><br><span class="line">btn01.onclick = function()&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var btn02 = document.getElementById(&quot;btn02&quot;);</span><br><span class="line">btn02.onclick = function()&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>整合后</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myClick</span>(<span class="params">idStr , fun</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(idstr);</span><br><span class="line">btn.<span class="property">onclick</span> = fun;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">myClick</span>(<span class="string">&quot;btn01&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>parentNode，previousSibling，nextSibling</strong></p><blockquote><p>parentNode表示当前节点的父节点</p><p>previousSibling表示当前节点的前一个兄弟节点，可能会是空白文本，IE8及以下不支持</p><p>nextSibling表示当前节点的后一个兄弟节点，可能会是空白文本，IE8及以下不支持</p></blockquote><p><strong>获取body标签</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="comment">//方式一</span></span><br><span class="line"><span class="keyword">var</span> body1 = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;body&quot;</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式二</span></span><br><span class="line"><span class="keyword">var</span> body2 = <span class="variable language_">document</span>.<span class="property">body</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>查询class标签下的第一个div标签</strong></p><blockquote><p>==document.querySelector()==</p><p>可以根据一个CSS选择器来查询一个元素节点对象</p><p>使用该方法总会返回唯一的一个元素，如果满足条件的元素有多个，那么它只会返回第一个</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = docunment.<span class="title function_">querySelector</span>(<span class="string">&quot;.box div&quot;</span>);<span class="comment">//查询clss为box标签下的第一个div标签</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(div.<span class="property">innerHTML</span>);</span><br></pre></td></tr></table></figure><p><strong>查询class标签下的所有div标签</strong></p><blockquote><p>==document.querySelectorAll()==</p><p>可以根据一个CSS选择器来查询元素节点对象</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = docunment.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.box&quot;</span>);<span class="comment">//查询所有clss为box标签标签</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(div.<span class="property">innerHTML</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础知识&lt;三&gt;</title>
      <link href="/archives/8e0789d4.html"/>
      <url>/archives/8e0789d4.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript基础知识-lt-三-gt"><a href="#JavaScript基础知识-lt-三-gt" class="headerlink" title="JavaScript基础知识&lt;三&gt;"></a>JavaScript基础知识&lt;三&gt;</h1><h2 id="DOM文档事件"><a href="#DOM文档事件" class="headerlink" title="DOM文档事件"></a>DOM文档事件</h2><h3 id="HTML-DOM（文档对象模型）"><a href="#HTML-DOM（文档对象模型）" class="headerlink" title="HTML DOM（文档对象模型）"></a>HTML DOM（文档对象模型）</h3><p>当网页被加载时，浏览器会创建页面的文档对象模型（<em>D</em>ocument <em>O</em>bject <em>M</em>odel）。</p><p><em>HTML DOM</em> 模型被结构化为<em>对象树</em>：</p><h4 id="对象的-HTML-DOM-树"><a href="#对象的-HTML-DOM-树" class="headerlink" title="对象的 HTML DOM 树"></a>对象的 HTML DOM 树</h4><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281221560.gif" alt="DOM HTML 树"></p><p>通过这个对象模型，JavaScript 获得创建动态 HTML 的所有力量：</p><ul><li>JavaScript 能改变页面中的所有 HTML 元素</li><li>JavaScript 能改变页面中的所有 HTML 属性</li><li>JavaScript 能改变页面中的所有 CSS 样式</li><li>JavaScript 能删除已有的 HTML 元素和属性</li><li>JavaScript 能添加新的 HTML 元素和属性</li><li>JavaScript 能对页面中所有已有的 HTML 事件作出反应</li><li>JavaScript 能在页面中创建新的 HTML 事件</li></ul><hr><h3 id="什么是-DOM？"><a href="#什么是-DOM？" class="headerlink" title="什么是 DOM？"></a>什么是 DOM？</h3><p>DOM 是一项 W3C (World Wide Web Consortium) 标准。</p><p>DOM 定义了访问文档的标准：</p><blockquote><p>“W3C 文档对象模型（DOM）是中立于平台和语言的接口，它允许程序和脚本动态地访问、更新文档的内容、结构和样式。”</p></blockquote><p>W3C DOM 标准被分为 3 个不同的部分：</p><ul><li>Core DOM - 所有文档类型的标准模型</li><li>XML DOM - XML 文档的标准模型</li><li>HTML DOM - HTML 文档的标准模型</li></ul><hr><h3 id="DOM-编程界面"><a href="#DOM-编程界面" class="headerlink" title="DOM 编程界面"></a>DOM 编程界面</h3><p>HTML DOM 能够通过 JavaScript 进行访问（也可以通过其他编程语言）。</p><p>在 DOM 中，所有 HTML 元素都被定义为<em>对象</em>。</p><p>编程界面是每个对象的属性和方法。</p><p><em>属性</em>是您能够获取或设置的值（就比如改变 HTML 元素的内容）。</p><p><em>方法</em>是您能够完成的动作（比如添加或删除 HTML 元素）。</p><hr><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><p>下面的例子改变了 id=”demo” 的 <p> 元素的内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;Hello World!&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的例子中，<code>getElementById</code> 是<em>方法</em>，而 <code>innerHTML</code> 是<em>属性</em>。</p><hr><h3 id="getElementById-方法"><a href="#getElementById-方法" class="headerlink" title="getElementById 方法"></a>getElementById 方法</h3><p>访问 HTML 元素最常用的方法是使用元素的 id。</p><p>在上面的例子中，<code>getElementById</code> 方法使用 id=”demo” 来查找元素。</p><hr><h3 id="innerHTML-属性"><a href="#innerHTML-属性" class="headerlink" title="innerHTML 属性"></a>innerHTML 属性</h3><p>获取元素内容最简单的方法是使用 <code>innerHTML</code> 属性。</p><p><code>innerHTML</code> 属性可用于获取或替换 HTML 元素的内容。</p><p><code>innerHTML</code> 属性可用于获取或改变任何 HTML 元素，包括 <code>&lt;html&gt;</code> 和 <code>&lt;body&gt;</code>。</p><hr><h3 id="HTML-DOM-Document-对象"><a href="#HTML-DOM-Document-对象" class="headerlink" title="HTML DOM Document 对象"></a>HTML DOM Document 对象</h3><p>文档对象代表您的网页。</p><p>如果您希望访问 HTML 页面中的任何元素，那么您总是从访问 document 对象开始。</p><p>下面是一些如何使用 document 对象来访问和操作 HTML 的实例。</p><hr><h3 id="查找-HTML-元素"><a href="#查找-HTML-元素" class="headerlink" title="查找 HTML 元素"></a>查找 HTML 元素</h3><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">document.getElementById(<em>id</em>)</td><td align="left">通过元素 id 来查找元素</td></tr><tr><td align="left">document.getElementsByTagName(<em>name</em>)</td><td align="left">通过标签名来查找元素</td></tr><tr><td align="left">document.getElementsByClassName(<em>name</em>)</td><td align="left">通过类名来查找元素</td></tr></tbody></table><h3 id="改变-HTML-元素"><a href="#改变-HTML-元素" class="headerlink" title="改变 HTML 元素"></a>改变 HTML 元素</h3><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">element.innerHTML = <em>new html content</em></td><td align="left">改变元素的 inner HTML</td></tr><tr><td align="left">element.attribute = <em>new value</em></td><td align="left">改变 HTML 元素的属性值</td></tr><tr><td align="left">element.setAttribute(<em>attribute</em>, <em>value</em>)</td><td align="left">改变 HTML 元素的属性值</td></tr><tr><td align="left">element.style.property = <em>new style</em></td><td align="left">改变 HTML 元素的样式</td></tr></tbody></table><h3 id="添加和删除元素"><a href="#添加和删除元素" class="headerlink" title="添加和删除元素"></a>添加和删除元素</h3><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">document.createElement(<em>element</em>)</td><td align="left">创建 HTML 元素</td></tr><tr><td align="left">document.removeChild(<em>element</em>)</td><td align="left">删除 HTML 元素</td></tr><tr><td align="left">document.appendChild(<em>element</em>)</td><td align="left">添加 HTML 元素</td></tr><tr><td align="left">document.replaceChild(<em>element</em>)</td><td align="left">替换 HTML 元素</td></tr><tr><td align="left">document.write(<em>text</em>)</td><td align="left">写入 HTML 输出流</td></tr></tbody></table><h3 id="添加事件处理程序"><a href="#添加事件处理程序" class="headerlink" title="添加事件处理程序"></a>添加事件处理程序</h3><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">document.getElementById(id).onclick = function(){<em>code</em>}</td><td align="left">向 onclick 事件添加事件处理程序</td></tr></tbody></table><h3 id="查找-HTML-对象"><a href="#查找-HTML-对象" class="headerlink" title="查找 HTML 对象"></a>查找 HTML 对象</h3><p>首个 HTML DOM Level 1 (1998)，定义了 11 个 HTML 对象、对象集合和属性。它们在 HTML5 中仍然有效。</p><p>后来，在 HTML DOM Level 3，加入了更多对象、集合和属性。</p><table><thead><tr><th align="left">属性</th><th align="left">描述</th><th align="left">DOM</th></tr></thead><tbody><tr><td align="left">document.anchors</td><td align="left">返回拥有 name 属性的所有 <a> 元素。</td><td align="left">1</td></tr><tr><td align="left">document.applets</td><td align="left">返回所有 <applet> 元素（HTML5 不建议使用）</td><td align="left">1</td></tr><tr><td align="left">document.baseURI</td><td align="left">返回文档的绝对基准 URI</td><td align="left">3</td></tr><tr><td align="left">document.body</td><td align="left">返回 <body> 元素</td><td align="left">1</td></tr><tr><td align="left">document.cookie</td><td align="left">返回文档的 cookie</td><td align="left">1</td></tr><tr><td align="left">document.doctype</td><td align="left">返回文档的 doctype</td><td align="left">3</td></tr><tr><td align="left">document.documentElement</td><td align="left">返回 <html> 元素</td><td align="left">3</td></tr><tr><td align="left">document.documentMode</td><td align="left">返回浏览器使用的模式</td><td align="left">3</td></tr><tr><td align="left">document.documentURI</td><td align="left">返回文档的 URI</td><td align="left">3</td></tr><tr><td align="left">document.domain</td><td align="left">返回文档服务器的域名</td><td align="left">1</td></tr><tr><td align="left">document.domConfig</td><td align="left">废弃。返回 DOM 配置</td><td align="left">3</td></tr><tr><td align="left">document.embeds</td><td align="left">返回所有 <embed> 元素</td><td align="left">3</td></tr><tr><td align="left">==document.forms==</td><td align="left">返回所有 <form> 元素</td><td align="left">1</td></tr><tr><td align="left">document.head</td><td align="left">返回 <head> 元素</td><td align="left">3</td></tr><tr><td align="left">document.images</td><td align="left">返回所有 <img> 元素</td><td align="left">1</td></tr><tr><td align="left">document.implementation</td><td align="left">返回 DOM 实现</td><td align="left">3</td></tr><tr><td align="left">document.inputEncoding</td><td align="left">返回文档的编码（字符集）</td><td align="left">3</td></tr><tr><td align="left">document.lastModified</td><td align="left">返回文档更新的日期和时间</td><td align="left">3</td></tr><tr><td align="left">document.links</td><td align="left">返回拥有 href 属性的所有 <area> 和 <a> 元素</td><td align="left">1</td></tr><tr><td align="left">document.readyState</td><td align="left">返回文档的（加载）状态</td><td align="left">3</td></tr><tr><td align="left">document.referrer</td><td align="left">返回引用的 URI（链接文档）</td><td align="left">1</td></tr><tr><td align="left">document.scripts</td><td align="left">返回所有 <script> 元素</td><td align="left">3</td></tr><tr><td align="left">document.strictErrorChecking</td><td align="left">返回是否强制执行错误检查</td><td align="left">3</td></tr><tr><td align="left">document.title</td><td align="left">返回 <title> 元素</td><td align="left">1</td></tr><tr><td align="left">document.URL</td><td align="left">返回文档的完整 URL</td><td align="left">1</td></tr></tbody></table><hr><h3 id="本章向您讲解如何查找和访问-HTML-页面中的-HTML-元素。"><a href="#本章向您讲解如何查找和访问-HTML-页面中的-HTML-元素。" class="headerlink" title="本章向您讲解如何查找和访问 HTML 页面中的 HTML 元素。"></a>本章向您讲解如何查找和访问 HTML 页面中的 HTML 元素。</h3><h4 id="查找-HTML-元素-1"><a href="#查找-HTML-元素-1" class="headerlink" title="查找 HTML 元素"></a>查找 HTML 元素</h4><p>通常，通过 JavaScript，您需要操作 HTML 元素。</p><p>为了达成此目的，您需要首先找到这些元素。有好几种完成此任务的方法：</p><ul><li>通过 id 查找 HTML 元素</li><li>通过标签名查找 HTML 元素</li><li>通过类名查找 HTML 元素</li><li>通过 CSS 选择器查找 HTML 元素</li><li>通过 HTML 对象集合查找 HTML 元素</li></ul><hr><h3 id="通过-id-查找-HTML-元素"><a href="#通过-id-查找-HTML-元素" class="headerlink" title="通过 id 查找 HTML 元素"></a>通过 id 查找 HTML 元素</h3><p>DOM 中查找 HTML 元素最简单的方法是，使用元素的 id。</p><p>本例查找 id=”intro” 的元素：</p><h5 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>通过 id 查找 HTML 元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;intro&quot;</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>本例演示 <span class="tag">&lt;<span class="name">b</span>&gt;</span>getElementsById<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 方法。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> myElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;intro&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;来自 intro 段落的文本是：&quot;</span> + myElement.<span class="property">innerHTML</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果元素被找到，此方法会以对象返回该元素（在 myElement 中）。</p><p>如果未找到元素，myElement 将包含 <code>null</code>。</p><hr><h3 id="通过标签名查找-HTML-元素"><a href="#通过标签名查找-HTML-元素" class="headerlink" title="通过标签名查找 HTML 元素"></a>通过标签名查找 HTML 元素</h3><p>本例查找所有 <code>&lt;p&gt;</code> 元素：</p><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>通过标签名查找 HTML 元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>本例演示 <span class="tag">&lt;<span class="name">b</span>&gt;</span>getElementsByTagName<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 方法。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;p&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&#x27;第一段中的文本 (index 0) 是：&#x27;</span> + x[<span class="number">0</span>].<span class="property">innerHTML</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本例查找 id=”main” 的元素，然后查找 “main” 中所有 <code>&lt;p&gt;</code> 元素：</p><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>通过标签名查找 HTML 元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>DOM 很有用。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>本例演示 <span class="tag">&lt;<span class="name">b</span>&gt;</span>getElementsByTagName<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 方法。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;main&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> y = x.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;p&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&#x27;“main”中的第一段（索引 0）是：&#x27;</span> + y[<span class="number">0</span>].<span class="property">innerHTML</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281221374.png" alt="image-20221222110355512"></p><hr><h3 id="通过类名查找-HTML-元素"><a href="#通过类名查找-HTML-元素" class="headerlink" title="通过类名查找 HTML 元素"></a>通过类名查找 HTML 元素</h3><p>如果您需要找到拥有相同类名的所有 HTML 元素，请使用 <code>getElementsByClassName()</code>。</p><p>本例返回包含 class=”intro” 的所有元素的列表：</p><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>通过类名查找 HTML 元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;intro&quot;</span>&gt;</span>DOM 很有用。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;intro&quot;</span>&gt;</span>本例演示 <span class="tag">&lt;<span class="name">b</span>&gt;</span>getElementsByClassName<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 方法。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;intro&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&#x27;class =&quot;intro&quot; 的第一段（索引 0）：&#x27;</span> + x[<span class="number">0</span>].<span class="property">innerHTML</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281221380.png" alt="image-20221222110510862"></p><hr><h3 id="通过-CSS-选择器查找-HTML-元素"><a href="#通过-CSS-选择器查找-HTML-元素" class="headerlink" title="通过 CSS 选择器查找 HTML 元素"></a>通过 CSS 选择器查找 HTML 元素</h3><p>如果您需要查找匹配指定 CSS 选择器（id、类名、类型、属性、属性值等等）的所有 HTML 元素，请使用 <code>querySelectorAll()</code> 方法。</p><p>本例返回 class=”intro” 的所有 <code>&lt;p&gt;</code> 元素列表：</p><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>按查询选择器查找 HTML 元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;intro&quot;</span>&gt;</span>DOM 很有用。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;intro&quot;</span>&gt;</span>本例演示 <span class="tag">&lt;<span class="name">b</span>&gt;</span>querySelectorAll<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 方法。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;p.intro&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&#x27;class =&quot;intro&quot; 的第一段（索引 0）：&#x27;</span> + x[<span class="number">0</span>].<span class="property">innerHTML</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:/Users/LEGION/AppData/Roaming/Typora/typora-user-images/image-20221222110630202.png" alt="image-20221222110630202"></p><hr><h3 id="通过-HTML-对象选择器查找-HTML-对象"><a href="#通过-HTML-对象选择器查找-HTML-对象" class="headerlink" title="通过 HTML 对象选择器查找 HTML 对象"></a>通过 HTML 对象选择器查找 HTML 对象</h3><p>本例查找 id=”frm1” 的 form 元素，在 forms 集合中，然后显示所有元素值：</p><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>使用 document.forms 查找 HTML 元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;frm1&quot;</span> <span class="attr">action</span>=<span class="string">&quot;/demo/demo_form.asp&quot;</span>&gt;</span></span><br><span class="line">  First name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Bill&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  Last name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Gates&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>单击“试一试”按钮，显示表单中每个元素的值。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>试一试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="property">forms</span>[<span class="string">&quot;frm1&quot;</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> text = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> i;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; x.<span class="property">length</span> ;i++) &#123;</span></span><br><span class="line"><span class="language-javascript">    text += x.<span class="property">elements</span>[i].<span class="property">value</span> + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = text;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>==document.forms[“frm1”].elements[i].value==</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281221746.png" alt="image-20221222110744209"></p><h2 id="dom增删改"><a href="#dom增删改" class="headerlink" title="dom增删改"></a>dom增删改</h2><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281221388.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281221895.png" alt="在这里插入图片描述"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;bj&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>东京<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>首尔<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;btnList&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn01&quot;</span>&gt;</span>创建一个广州节点，添加到#city下<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn02&quot;</span>&gt;</span>将广州节点插入到#bj前面<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn03&quot;</span>&gt;</span>使用广州节点替换#bj节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn04&quot;</span>&gt;</span>删除#bj节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn05&quot;</span>&gt;</span>读取#city内的html代码<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn06&quot;</span>&gt;</span>设置#bj内的HTML代码<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn07&quot;</span>&gt;</span>向city中添加广州<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="variable language_">window</span>.<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="comment">//创建一个广州节点，添加到#city下</span></span><br><span class="line"><span class="title function_">myClick</span>(<span class="string">&quot;btn01&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="comment">//&lt;li&gt;广州&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//创建li元素节点</span></span><br><span class="line"><span class="keyword">var</span> li=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span><br><span class="line"><span class="comment">//创建广州文本节点</span></span><br><span class="line"><span class="keyword">var</span> gzTxt=<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;广州&quot;</span>);</span><br><span class="line"><span class="comment">//将gzTxt设置li的子节点</span></span><br><span class="line">li.<span class="title function_">appendChild</span>(gzTxt);</span><br><span class="line"><span class="comment">//获取id为city的节点</span></span><br><span class="line"><span class="keyword">var</span> city=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;city&quot;</span>);</span><br><span class="line">city.<span class="title function_">appendChild</span>(li);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//将广州节点插入到#bj前面</span></span><br><span class="line"><span class="title function_">myClick</span>(<span class="string">&quot;btn02&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//创建一个广州</span></span><br><span class="line"><span class="keyword">var</span> li=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> gzTxt=<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;广州&quot;</span>);</span><br><span class="line">li.<span class="title function_">appendChild</span>(gzTxt);</span><br><span class="line"><span class="comment">//获取id为bj的节点</span></span><br><span class="line"><span class="keyword">var</span> bj=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;bj&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取city</span></span><br><span class="line"><span class="keyword">var</span> city=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;city&quot;</span>);</span><br><span class="line"></span><br><span class="line">city.<span class="title function_">insertBefore</span>(li, bj);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用广州节点替换#bj节点</span></span><br><span class="line"><span class="title function_">myClick</span>(<span class="string">&quot;btn03&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//创建一个广州</span></span><br><span class="line"><span class="keyword">var</span> li=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> gzTxt=<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;广州&quot;</span>);</span><br><span class="line">li.<span class="title function_">appendChild</span>(gzTxt);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取id为bj的节点</span></span><br><span class="line"><span class="keyword">var</span> bj=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;bj&quot;</span>);</span><br><span class="line"><span class="comment">//获取city</span></span><br><span class="line"><span class="keyword">var</span> city=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;city&quot;</span>);</span><br><span class="line"></span><br><span class="line">city.<span class="title function_">replaceChild</span>(li, bj);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除#bj节点</span></span><br><span class="line"><span class="title function_">myClick</span>(<span class="string">&quot;btn04&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//获取id为bj的节点</span></span><br><span class="line"><span class="keyword">var</span> bj=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;bj&quot;</span>);</span><br><span class="line"><span class="comment">//获取city</span></span><br><span class="line"><span class="keyword">var</span> city=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;city&quot;</span>);</span><br><span class="line">city.<span class="title function_">removeChild</span>(bj);</span><br><span class="line"><span class="comment">//若不知道父元素是谁!!!</span></span><br><span class="line"><span class="comment">//bj.parentNode.removeChild(bj);</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取#city内的html代码</span></span><br><span class="line"><span class="title function_">myClick</span>(<span class="string">&quot;btn05&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//获取city</span></span><br><span class="line"><span class="keyword">var</span> city=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;city&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(city.<span class="property">innerHTML</span>);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置#bj内的HTML代码</span></span><br><span class="line"><span class="title function_">myClick</span>(<span class="string">&quot;btn06&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//获取id为bj的节点</span></span><br><span class="line"><span class="keyword">var</span> bj=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;bj&quot;</span>);</span><br><span class="line">bj.<span class="property">innerHTML</span>=<span class="string">&quot;富察容音&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">使用innerHTML也可以完成DOM增删改的相关操作</span></span><br><span class="line"><span class="comment">一般我们会两种方法适合使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//向city中添加广州</span></span><br><span class="line"><span class="title function_">myClick</span>(<span class="string">&quot;btn07&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//获取city</span></span><br><span class="line"><span class="keyword">var</span> city=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;city&quot;</span>);</span><br><span class="line"><span class="comment">//city.innerHTML+=&quot;&lt;li&gt;广州&lt;/li&gt;&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个li</span></span><br><span class="line"><span class="keyword">var</span> li=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span><br><span class="line"><span class="comment">//向li中设置文本</span></span><br><span class="line">li.<span class="property">innerHTML</span>=<span class="string">&quot;广州&quot;</span>;</span><br><span class="line"><span class="comment">//将li添加到city中</span></span><br><span class="line">city.<span class="title function_">appendChild</span>(li);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myClick</span>(<span class="params">idStr,fun</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> btn=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(idStr);</span><br><span class="line">btn.<span class="property">fun</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础知识&lt;六&gt;</title>
      <link href="/archives/ebe079d4.html"/>
      <url>/archives/ebe079d4.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript基础知识-lt-六-gt"><a href="#JavaScript基础知识-lt-六-gt" class="headerlink" title="JavaScript基础知识&lt;六&gt;"></a>JavaScript基础知识&lt;六&gt;</h1><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><p><strong>当鼠标移动时自动获取其在浏览器中的位置</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281217928.png" alt="image-20230109211801210"></p><blockquote><p>onmousemove</p><p>​        该事件将会在鼠标在元素中移动时被触发</p><p>事件对象</p><p>​        当事件的响应函数被触发时，浏览器<strong>每次</strong>都会将一个事件对象作为实参传递进响应函数</p><p>​                在事件对象中封装了当前事件相关的一切信息，比如：鼠标的坐标  键盘哪个键盘被按下  鼠标滚轮滚动的方向。。。</p><p>clientX：返回当事件被触发时，鼠标指针的水平坐标</p><p>clientY：返回当事件被触发时，鼠标指针的垂直坐标</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> areaDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;areaDiv&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> showMsg = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;showMsg&quot;</span>);</span><br><span class="line"></span><br><span class="line">areaDiv.<span class="property">onmousemove</span> = <span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line"><span class="comment">//返回MouseEvent</span></span><br><span class="line"><span class="comment">//alert(event);</span></span><br><span class="line">    <span class="keyword">var</span> x = event.<span class="property">clientX</span>;</span><br><span class="line">    <span class="keyword">var</span> y = event.<span class="property">clientY</span>;</span><br><span class="line">    <span class="comment">//在showMsg中显示鼠标的坐标</span></span><br><span class="line">    showMsg.<span class="property">innerHtml</span> = <span class="string">&quot;x = &quot;</span>+x+<span class="string">&quot;，y = &quot;</span>+y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>在IE8中，响应函数被触发时，浏览器不会传递事件对象</strong></p><p>​        在IE8及以下的浏览器中，是将事件对象作为window对象的属性保存的</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">clientX</span>;</span><br><span class="line">   <span class="keyword">var</span> y = <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">clientY</span>;</span><br><span class="line"><span class="comment">//但这样又不适配其他浏览器</span></span><br></pre></td></tr></table></figure><blockquote><p>整合一下,解决事件对象的兼容性问题</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!event)&#123;</span><br><span class="line">event = <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">event = event || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br></pre></td></tr></table></figure><h2 id="事件的冒泡"><a href="#事件的冒泡" class="headerlink" title="事件的冒泡"></a>事件的冒泡</h2><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281217145.png" alt="image-20230109222759664"></p><p><strong>事件的冒泡指的是事件向上传导，当后代元素上的事件被触发时，将会导致其祖先元素上的同类事件也会触发。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//为s1绑定一个单击响应函数</span></span><br><span class="line"><span class="keyword">var</span> s1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;s1&quot;</span>);</span><br><span class="line">s1.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;我是span的单击响应函数&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为box1绑定一个单击响应函数</span></span><br><span class="line"><span class="keyword">var</span> box1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box1&quot;</span>);</span><br><span class="line">box1.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;我是box1的单击响应函数&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为body绑定一个单击响应函数</span></span><br><span class="line"><span class="keyword">var</span> body = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;body&quot;</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;我是body的单击响应函数&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">我是box1</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在开发情况中，大部分冒泡是有用的</p><p>如果不希望发生事件冒泡可以通过事件对象来取消冒泡</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//为s1绑定一个单击响应函数</span></span><br><span class="line"><span class="keyword">var</span> s1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;s1&quot;</span>);</span><br><span class="line">s1.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    event = event || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;我是span的单击响应函数&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//取消冒泡</span></span><br><span class="line">    <span class="comment">//可以将事件对象的cancelBubble设置为true，即可取消冒泡</span></span><br><span class="line">    event.<span class="property">cancelBubble</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为box1绑定一个单击响应函数</span></span><br><span class="line"><span class="keyword">var</span> box1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box1&quot;</span>);</span><br><span class="line">event = event || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line"></span><br><span class="line">box1.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;我是box1的单击响应函数&quot;</span>);</span><br><span class="line">        </span><br><span class="line">    <span class="comment">//取消冒泡</span></span><br><span class="line">    <span class="comment">//可以将事件对象的cancelBubble设置为true，即可取消冒泡</span></span><br><span class="line">    event.<span class="property">cancelBubble</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="事件委派"><a href="#事件委派" class="headerlink" title="事件委派"></a>事件委派</h2><p>下面举例子说明<br>效果图：<br><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281217074.png" alt="在这里插入图片描述"></p><p>初始代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn01&quot;</span>&gt;</span>添加超链接<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;u1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span>超链接一<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span>超链接二<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span>超链接三<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> u1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;u1&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//点击按钮添加超链接</span></span><br><span class="line">    <span class="keyword">var</span> btn01 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn01&quot;</span>);</span><br><span class="line">    btn01.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">          <span class="comment">//创建li</span></span><br><span class="line">            <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">            li.<span class="property">innerHTML</span> = <span class="string">&quot;&lt;a href=&#x27;javascript:;&#x27;&gt;新建超链接&lt;/a&gt;;</span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">            //将li添加到ul中</span></span><br><span class="line"><span class="string">            u1.appendChild(li);</span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">        &#125;;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">//获取所有的a</span></span><br><span class="line"><span class="string">var allA = document.getElementsByTagName(&quot;</span>a<span class="string">&quot;);</span></span><br><span class="line"><span class="string">//遍历</span></span><br><span class="line"><span class="string">for(var i=0;i&lt;allA.length;i++)&#123;</span></span><br><span class="line"><span class="string">allA[i].onlick = function()&#123;</span></span><br><span class="line"><span class="string">alert(&quot;</span>我是a的单击响应函数<span class="string">&quot;)；</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>上述代码中，新加的超链接无法单击获得响应，原因是在最开始遍历赋值单击函数的超链接只有一开始的超链接，其余之后添加的超链接无法被赋值单击函数。</p><p>新添加的超链接必需重新绑定</p><p>所以上述script代码不推荐使用</p><p>我们希望只绑定一次事件，即可应用到多个元素上，即使元素是后添加的</p></blockquote><h3 id="事件委派-1"><a href="#事件委派-1" class="headerlink" title="事件委派"></a>事件委派</h3><ul><li>指将事件统一绑定给元素的<strong>共同的祖先</strong>元素</li><li><strong>当后代上的事件触发时,会一直冒泡到祖先元素</strong></li><li><strong>通过祖先元素的响应函数来处理事件</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> u1= <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;u1&quot;</span>);</span><br><span class="line">    </span><br><span class="line">        <span class="comment">//点击按钮以后添加超链接</span></span><br><span class="line">        <span class="keyword">var</span> btn01 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn01&quot;</span>);</span><br><span class="line">        btn01.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//创建一个li</span></span><br><span class="line">            <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">            li.<span class="property">innerHTML</span>=<span class="string">&quot;&lt;a href=&#x27;javascript:;&#x27; class=&#x27;link&#x27;&gt;新建超链接&lt;/a&gt;&quot;</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//将li添加到ul中</span></span><br><span class="line">            u1.<span class="title function_">appendChild</span>(li);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        u1.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">            <span class="comment">//如果触发事件的对象是我们期望的元素，则执行，否则不执行</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">//解决浏览器兼容问题</span></span><br><span class="line">            event = event || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * target</span></span><br><span class="line"><span class="comment">             *   点谁就是谁</span></span><br><span class="line"><span class="comment">             *  -事件对象的target属性表示触发事件的对象</span></span><br><span class="line"><span class="comment">             *  -ul中包括li、文本及超链接，只有点击超链接触发事件</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">//当单击超链接时</span></span><br><span class="line">            <span class="comment">//alert(event.target);  //javascript:;</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(event.<span class="property">target</span>.<span class="property">className</span> == <span class="string">&quot;link&quot;</span>)&#123;</span><br><span class="line">                <span class="title function_">alert</span>(<span class="string">&quot;我是ul单击响应函数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="事件的绑定"><a href="#事件的绑定" class="headerlink" title="事件的绑定"></a>事件的绑定</h2><blockquote><p>使用 对象.事件 = 函数  的形式绑定响应函数，</p><p>​        它只能同时为一个元素的一个事件绑定一个响应函数</p><p>​        不能绑定多个，如果绑定了多个，则后边会覆盖掉前边的</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn01 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn01&quot;</span>);</span><br><span class="line">btn01.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line">btn01.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">alert2);</span><br><span class="line">&#125;;</span><br><span class="line">btn01.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="number">3</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//只会弹出3提示框</span></span><br></pre></td></tr></table></figure><p><strong>如果确实需要为一个元素的一个事件绑定多个响应函数</strong></p><blockquote><p><strong>addEventListener()</strong></p><p>​        参数:</p><p>​                1.事件的字符串，不要on</p><p>​                2.回调函数，当事件触发时该函数会被调用</p><p>​                3.是否在捕获阶段触发事件，需要一个布尔值，一般都传false</p><p>​        xxx.addEventListener(“click”,function(){</p><p>​                alert(“xxxx”);</p><p>​        },false);</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn01 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn01&quot;</span>);</span><br><span class="line">btn01.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">btn01.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">btn01.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br></pre></td></tr></table></figure><blockquote><p>这样当事件被触发时，响应函数将会按照函数的绑定顺序执行</p></blockquote><blockquote><p>但由于addEventListene()不支持IE8及其一下版本</p><p>所以在此引入attachEvent()</p><p>attachEvent()</p><p>​        参数：</p><p>​                1.事件的字符串，需要on</p><p>​                2.回调函数</p><p>​        这个方法也可以同时为一个事件绑定多个处理函数</p><p>​                不同的是它是后绑定先执行，执行顺序和addEventListene相反</p></blockquote><hr><blockquote><p>由于attachEvent()只支持IE5-IE10，所以我们需要定义一个函数，来为指定元素绑定响应函数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个函数，用来为指定元素绑定响应函数</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* addEventListener()中的this，是绑定事件的对象</span></span><br><span class="line"><span class="comment">* attachEvent()中的this，是window</span></span><br><span class="line"><span class="comment">*需要统一两个方法this</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 参数：</span></span><br><span class="line"><span class="comment">*obj：要绑定事件的对象</span></span><br><span class="line"><span class="comment">* eventStr：事件的字符串(不要on)</span></span><br><span class="line"><span class="comment">* callback：回调函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bind</span>(<span class="params">obj,eventStr,callback</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(obj.<span class="property">addEveentListener</span>)&#123;</span><br><span class="line">        <span class="comment">//大部分浏览器兼容的方式</span></span><br><span class="line">        obj.<span class="title function_">addEventListener</span>(eventStr , callback , <span class="literal">false</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//IE8及以下</span></span><br><span class="line">        obj.<span class="title function_">attachEvent</span>(<span class="string">&quot;on&quot;</span>+eventStr , callback);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">bind</span>(btn01 , <span class="string">&quot;click&quot;</span> , <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="title function_">alert</span>(<span class="number">1</span>); </span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><blockquote><p>此时两个函数的this仍旧不统一，所以我们要想办法让这两个函数的this相同</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">bind</span>(<span class="params">obj,eventStr,callback</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(obj.<span class="property">addEveentListener</span>)&#123;</span><br><span class="line">        <span class="comment">//大部分浏览器兼容的方式</span></span><br><span class="line">        obj.<span class="title function_">addEventListener</span>(eventStr , callback , <span class="literal">false</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * this是谁调用由方式决定</span></span><br><span class="line"><span class="comment">    * callback.call(obj);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">//IE8及以下</span></span><br><span class="line">        <span class="comment">//obj.attachEvent(&quot;on&quot;+eventStr , callback);</span></span><br><span class="line">        </span><br><span class="line">        obj.<span class="title function_">attachEvent</span>(<span class="string">&quot;on&quot;</span>+eventStr , <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="comment">//在匿名函数中调用回调函数</span></span><br><span class="line">            callback.<span class="title function_">call</span>(obj);</span><br><span class="line">            <span class="comment">//这样this就指向绑定事件的对象了</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础知识&lt;二&gt;</title>
      <link href="/archives/f0f4a9ff.html"/>
      <url>/archives/f0f4a9ff.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript基础知识-lt-二-gt"><a href="#JavaScript基础知识-lt-二-gt" class="headerlink" title="JavaScript基础知识&lt;二&gt;"></a>JavaScript基础知识&lt;二&gt;</h1><h2 id="一、函数"><a href="#一、函数" class="headerlink" title="一、函数"></a>一、函数</h2><h4 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h4><p>函数是由一连串的子程序（语句的集合）所组成的，可以被外部程序调用，向函数传递参数之后，函数可以返回一定的值。</p><p>通常情况下，JavaScript代码是自上而下执行的，不过函数体内部的代码则不是这样。如果只是对函数进行了声明，其中的代码并不会执行，只有在调用函数时才会执行函数体内部的代码。</p><p>这里要注意的是JavaScript中的函数也是一个对象，使用typeof检查一个函数对象时，会返回function。</p><h3 id="2、函数创建"><a href="#2、函数创建" class="headerlink" title="2、函数创建"></a>2、函数创建</h3><ul><li><p>使用 <strong>函数对象</strong> 来创建一个函数（几乎不用）</p><p>语法格式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 函数名 = <span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&quot;执行语句&quot;</span>);</span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&quot;console.log(&#x27;这是我的第一个函数&#x27;);&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>使用 <strong>函数声明</strong> 来创建一个函数（比较常用）</p><p>语法格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名([形参<span class="number">1</span>,形参<span class="number">2</span>,...,形参N]) &#123;</span><br><span class="line">    语句...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用 <strong>函数表达式</strong> 来创建一个函数（比较常用）</p><p>语法格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 函数名  = <span class="keyword">function</span>(<span class="params">[形参<span class="number">1</span>,形参<span class="number">2</span>,...,形参N]</span>) &#123;</span><br><span class="line">    语句....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fun  = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;这是我的第三个函数&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3、函数调用"><a href="#3、函数调用" class="headerlink" title="3、函数调用"></a>3、函数调用</h3><ul><li><p>对于无参函数调用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数声明</span></span><br><span class="line"><span class="keyword">var</span> fun = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;哈哈，我执行啦！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数调用</span></span><br><span class="line"><span class="title function_">fun</span>();</span><br></pre></td></tr></table></figure></li><li><p>对于有参函数调用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数声明</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="keyword">function</span> (<span class="params">num1, num2</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> result = num1 + num2;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;num1 + num2 = &quot;</span> + result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数调用</span></span><br><span class="line"><span class="title function_">sum</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br></pre></td></tr></table></figure></li></ul><h3 id="4、函数参数"><a href="#4、函数参数" class="headerlink" title="4、函数参数"></a>4、函数参数</h3><ul><li>JS中的所有的参数传递都是按值传递的，也就是说把函数外部的值赋值给函数内部的参数，就和把值从一个变量赋值给另一个变量是一样的，在调用函数时，可以在()中指定实参（实际参数），实参将会赋值给函数中对应的形参</li><li>调用函数时，解析器不会检查实参的类型，所以要注意，是否有可能会接收到非法的参数，如果有可能，则需要对参数进行类型的检查，函数的实参可以是任意的数据类型</li><li>调用函数时，解析器也不会检查实参的数量，多余实参不会被赋值，如果实参的数量少于形参的数量，则没有对应实参的形参将是undefined</li></ul><h3 id="5、函数返回值"><a href="#5、函数返回值" class="headerlink" title="5、函数返回值"></a>5、函数返回值</h3><p>可以使用 return 来设置函数的返回值，return后的值将会作为函数的执行结果返回，可以定义一个变量，来接收该结果。</p><blockquote><p>注意：在函数中return后的语句都不会执行，如果return语句后不跟任何值就相当于返回一个undefined，如果函数中不写return，则也会返回undefined，return后可以跟任意类型的值</p></blockquote><p>语法格式：return 值</p><p>案例演示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">num1, num2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = <span class="title function_">sum</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><h3 id="6、嵌套函数"><a href="#6、嵌套函数" class="headerlink" title="6、嵌套函数"></a>6、嵌套函数</h3><p>嵌套函数：在函数中声明的函数就是嵌套函数，嵌套函数只能在当前函数中可以访问，在当前函数外无法访问。</p><p>案例演示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fu</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">zi</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我是儿子&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">zi</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fu</span>();</span><br></pre></td></tr></table></figure><h3 id="7、匿名函数"><a href="#7、匿名函数" class="headerlink" title="7、匿名函数"></a>7、匿名函数</h3><p>匿名函数：没有名字的函数就是匿名函数，它可以让一个变量来接收，也就是用 “函数表达式” 方式创建和接收。</p><p>案例演示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;我是一个匿名函数&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fun</span>();</span><br></pre></td></tr></table></figure><h3 id="8、立即执行函数"><a href="#8、立即执行函数" class="headerlink" title="8、立即执行函数"></a>8、立即执行函数</h3><p>立即执行函数：函数定义完，立即被调用，这种函数叫做立即执行函数，立即执行函数往往只会执行一次。</p><p>案例演示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;我是一个匿名函数&quot;</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h3 id="9、对象中的函数"><a href="#9、对象中的函数" class="headerlink" title="9、对象中的函数"></a>9、对象中的函数</h3><p>对象的属性值可以是任何的数据类型，也可以是个函数。</p><p>如果一个函数作为一个对象的属性保存，那么我们称这个函数是这个对象的方法，调用这个函数就说调用对象的方法（method）。</p><blockquote><p>注意：方法和函数只是名称上的区别，没有其它别的区别</p></blockquote><p>案例演示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;zhangsan&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">sayHello</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(name + <span class="string">&quot; hello&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">person.<span class="title function_">sayHello</span>();</span><br></pre></td></tr></table></figure><h3 id="10、this对象"><a href="#10、this对象" class="headerlink" title="10、this对象"></a>10、this对象</h3><p>解析器在调用函数每次都会向函数内部传递进一个隐含的参数，这个隐含的参数就是this，this指向的是一个对象，这个对象我们称为函数执行的上下文对象，根据函数的调用方式的不同，this会指向不同的对象</p><ul><li><strong>以函数的形式调用时，this永远都是window</strong></li><li><strong>以方法的形式调用时，this就是调用方法的那个对象</strong></li></ul><p>案例演示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个全局变量name</span></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;全局变量name&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;孙悟空&quot;</span>,</span><br><span class="line">    <span class="attr">sayName</span>: fun</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我们希望调用obj.sayName()时可以输出obj的名字而不是全局变量name的名字</span></span><br><span class="line">obj.<span class="title function_">sayName</span>();</span><br></pre></td></tr></table></figure><h3 id="11、函数声明VS函数表达式"><a href="#11、函数声明VS函数表达式" class="headerlink" title="11、函数声明VS函数表达式"></a>11、函数声明VS函数表达式</h3><p><strong>函数声明</strong>：在主代码流中声明为单独的语句的函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>( <span class="string">&quot;Hello&quot;</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>函数表达式</strong>：在一个表达式中或另一个语法结构中创建的函数。下面这个函数是在赋值表达式 = 右侧创建的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sayHi = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>( <span class="string">&quot;Hello&quot;</span> );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>注意函数是一个值</p><p>重申一次：无论函数是如何创建的，函数都是一个值。上面的两个示例都在 sayHi 变量中存储了一个函数。</p><p>我们还可以用 alert 打印这个变量的值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>( <span class="string">&quot;Hello&quot;</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( sayHi ); <span class="comment">// 显示函数代码</span></span><br><span class="line"><span class="title function_">alert</span>( <span class="title function_">sayHi</span>() ); <span class="comment">// &quot;hello&quot;</span></span><br></pre></td></tr></table></figure><p>==<strong>函数表达式是在代码执行到达时被创建，并且仅从那一刻起可用。</strong>==</p><p>==<strong>函数声明则不同。在函数声明被定义之前，它就可以被调用。</strong>==</p><p><strong>举例:</strong></p><p><strong>一</strong></p><p>例如下面的代码会正常工作：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">sayHi</span>(<span class="string">&quot;John&quot;</span>); <span class="comment">// Hello, John</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>( <span class="string">`Hello, <span class="subst">$&#123;name&#125;</span>`</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果它是一个函数表达式，它就不会工作：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">sayHi</span>(<span class="string">&quot;John&quot;</span>); <span class="comment">// error!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> sayHi = <span class="keyword">function</span>(<span class="params">name</span>) &#123;  <span class="comment">// (*) no magic any more</span></span><br><span class="line">  <span class="title function_">alert</span>( <span class="string">`Hello, <span class="subst">$&#123;name&#125;</span>`</span> );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>二</strong></p><p>如果我们使用函数声明，则以下代码无法像预期那样工作：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> age = <span class="title function_">prompt</span>(<span class="string">&quot;What is your age?&quot;</span>, <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有条件地声明一个函数</span></span><br><span class="line"><span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">welcome</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">welcome</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;Greetings!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ……稍后使用</span></span><br><span class="line"><span class="title function_">welcome</span>(); <span class="comment">// Error: welcome is not defined</span></span><br></pre></td></tr></table></figure><p>我们怎么才能让 welcome 在 if 外可见呢？</p><p>正确的做法是使用函数表达式，并将 welcome 赋值给在 if 外声明的变量，并具有正确的可见性。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> age = <span class="title function_">prompt</span>(<span class="string">&quot;What is your age?&quot;</span>, <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> welcome;</span><br><span class="line"><span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">  welcome = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  welcome = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;Greetings!&quot;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">welcome</span>(); <span class="comment">// 现在可以了</span></span><br></pre></td></tr></table></figure><h3 id="12、箭头函数"><a href="#12、箭头函数" class="headerlink" title="12、箭头函数"></a>12、箭头函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">sum</span> = (<span class="params">a, b</span>) =&gt; a + b;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 这个箭头函数是下面这个函数的更短的版本：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">let sum = function(a, b) &#123;</span></span><br><span class="line"><span class="comment">  return a + b;</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( <span class="title function_">sum</span>(<span class="number">1</span>, <span class="number">2</span>) ); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><ul><li>如果我们只有一个参数，还可以省略掉参数外的圆括号，使代码更短。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">double</span> = n =&gt; n * <span class="number">2</span>;</span><br><span class="line"><span class="comment">// 差不多等同于：let double = function(n) &#123; return n * 2 &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( <span class="title function_">double</span>(<span class="number">3</span>) ); <span class="comment">// 6</span></span><br></pre></td></tr></table></figure><ul><li>如果没有参数，括号则是空的（但括号必须保留）：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">sayHi</span> = (<span class="params"></span>) =&gt; <span class="title function_">alert</span>(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">sayHi</span>();</span><br></pre></td></tr></table></figure><h4 id="多行的箭头函数"><a href="#多行的箭头函数" class="headerlink" title="多行的箭头函数"></a>多行的箭头函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">sum</span> = (<span class="params">a, b</span>) =&gt; &#123;  <span class="comment">// 花括号表示开始一个多行函数</span></span><br><span class="line">  <span class="keyword">let</span> result = a + b;</span><br><span class="line">  <span class="keyword">return</span> result; <span class="comment">// 如果我们使用了花括号，那么我们需要一个显式的 “return”</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( <span class="title function_">sum</span>(<span class="number">1</span>, <span class="number">2</span>) ); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><h3 id="13、arguments-对象"><a href="#13、arguments-对象" class="headerlink" title="13、arguments 对象"></a>13、arguments 对象</h3><p>如果函数调用的<em>参数太多</em>（超过声明），则可以使用 <em>arguments 对象</em>来达到这些参数。</p><p>JavaScript 函数有一个名为 arguments 对象的内置对象。</p><p>arguments 对象包含函数调用时使用的参数数组。</p><p>这样，您就可以简单地使用函数来查找（例如）数字列表中的最高值：</p><p><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="title function_">findMax</span>(<span class="number">1</span>, <span class="number">123</span>, <span class="number">500</span>, <span class="number">115</span>, <span class="number">44</span>, <span class="number">88</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findMax</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">var</span> max = -<span class="title class_">Infinity</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">arguments</span>[i] &gt; max) &#123;</span><br><span class="line">            max = <span class="variable language_">arguments</span>[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或创建一个函数来总和所有输入值：</p><p><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="title function_">sumAll</span>(<span class="number">1</span>, <span class="number">123</span>, <span class="number">500</span>, <span class="number">115</span>, <span class="number">44</span>, <span class="number">88</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sumAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> i, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        sum += <span class="variable language_">arguments</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参数通过值传递"><a href="#参数通过值传递" class="headerlink" title="参数通过值传递"></a>参数通过值传递</h4><p>函数调用中的参数（parameter）是函数的参数（argument）。</p><p>JavaScript 参数通过<em>值</em>传递：函数只知道值，而不是参数的位置。</p><p>如果函数改变了参数的值，它不会改变参数的原始值。</p><p><em>参数的改变在函数之外是不可见的。</em></p><hr><h4 id="对象是由引用传递的"><a href="#对象是由引用传递的" class="headerlink" title="对象是由引用传递的"></a>对象是由引用传递的</h4><p>在 JavaScript 中，对象引用是值。</p><p>正因如此，对象的行为就像它们通过<strong>引用</strong>来传递：</p><p>如果函数改变了对象属性，它也改变了原始值。</p><p><strong>对象属性的改变在函数之外是可见的。</strong></p><h2 id="二、this关键词"><a href="#二、this关键词" class="headerlink" title="二、this关键词"></a>二、this关键词</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">  <span class="attr">firstName</span>: <span class="string">&quot;Bill&quot;</span>,</span><br><span class="line">  lastName : <span class="string">&quot;Gates&quot;</span>,</span><br><span class="line">  id       : <span class="number">678</span>,</span><br><span class="line">  fullName : <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&quot; &quot;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="this-是什么？"><a href="#this-是什么？" class="headerlink" title="this 是什么？"></a>this 是什么？</h3><p>JavaScript <code>this</code> 关键词指的是它所属的对象。</p><p>它拥有不同的值，具体取决于它的使用位置：</p><ul><li>在方法中，<code>this</code> 指的是所有者对象。</li><li>单独的情况下，<code>this</code> 指的是全局对象。</li><li>在函数中，<code>this</code> 指的是全局对象。</li><li>在函数中，严格模式下，<code>this</code> 是 undefined。</li><li>在事件中，<code>this</code> 指的是接收事件的元素。</li></ul><p>像 <code>call()</code> 和 <code>apply()</code> 这样的方法可以将 this 引用到任何对象。</p><hr><h3 id="方法中的-this"><a href="#方法中的-this" class="headerlink" title="方法中的 this"></a>方法中的 this</h3><p>在对象方法中，<code>this</code> 指的是此方法的“拥有者”。</p><p>在本页最上面的例子中，<code>this</code> 指的是 person 对象。</p><p>person 对象是 fullName 方法的拥有者。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fullName : <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&quot; &quot;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="单独的-this"><a href="#单独的-this" class="headerlink" title="单独的 this"></a>单独的 this</h3><p>在单独使用时，拥有者是全局对象，因此 <code>this</code> 指的是全局对象。</p><p>在浏览器窗口中，全局对象是 <code>[object Window]</code>：</p><p><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="variable language_">this</span>;</span><br></pre></td></tr></table></figure><hr><h3 id="函数中的-this（默认）"><a href="#函数中的-this（默认）" class="headerlink" title="函数中的 this（默认）"></a>函数中的 this（默认）</h3><p>在 JavaScript 函数中，函数的拥有者默认绑定 <code>this</code>。</p><p>因此，在函数中，<code>this</code> 指的是全局对象 <code>[object Window]</code>。</p><p><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="事件处理程序中的-this"><a href="#事件处理程序中的-this" class="headerlink" title="事件处理程序中的 this"></a>事件处理程序中的 this</h3><p>在 HTML 事件处理程序中，<code>this</code> 指的是接收此事件的 HTML 元素：</p><p><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button onclick=<span class="string">&quot;this.style.display=&#x27;none&#x27;&quot;</span>&gt;</span><br><span class="line">  点击来删除我！</span><br><span class="line">&lt;/button&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="对象方法绑定"><a href="#对象方法绑定" class="headerlink" title="对象方法绑定"></a>对象方法绑定</h3><p>在此例中，<code>this</code> 是 person 对象（person 对象是该函数的“拥有者”）：</p><p><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">  firstName  : <span class="string">&quot;Bill&quot;</span>,</span><br><span class="line">  lastName   : <span class="string">&quot;Gates&quot;</span>,</span><br><span class="line">  id         : <span class="number">678</span>,</span><br><span class="line">  myFunction : <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;  <span class="comment">//[object Object]</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">  <span class="attr">firstName</span>: <span class="string">&quot;Bill&quot;</span>,</span><br><span class="line">  lastName : <span class="string">&quot;Gates&quot;</span>,</span><br><span class="line">  id       : <span class="number">678</span>,</span><br><span class="line">  fullName : <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&quot; &quot;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>换句话说，<em>this.firstName</em> 意味着 <em>this</em>（person）对象的 <em>firstName</em> 属性。</p><hr><h2 id="三、JavaScript常用对象"><a href="#三、JavaScript常用对象" class="headerlink" title="三、JavaScript常用对象"></a>三、JavaScript常用对象</h2><h3 id="1、数组对象"><a href="#1、数组对象" class="headerlink" title="1、数组对象"></a>1、数组对象</h3><h4 id="1）概述"><a href="#1）概述" class="headerlink" title="1）概述"></a>1）概述</h4><p>数组也是对象的一种，数组是一种用于表达有顺序关系的值的集合的语言结构，也就是同类数据元素的有序集合。</p><p>数组的存储性能比普通对象要好，在开发中我们经常使用数组来存储一些数据。但是在JavaScript中是支持数组可以是不同的元素，这跟JavaScript的弱类型有关，此处不用纠结，我们大多数时候都是相同类型元素的集合。数组内的各个值被称作元素，每一个元素都可以通过索引（下标）来快速读取，索引是从零开始的整数。</p><p>使用typeof检查一个数组对象时，会返回object。</p><h4 id="2）创建数组"><a href="#2）创建数组" class="headerlink" title="2）创建数组"></a>2）创建数组</h4><h5 id="2-1、使用对象创建"><a href="#2-1、使用对象创建" class="headerlink" title="2.1、使用对象创建"></a>2.1、使用对象创建</h5><ul><li><p>同类型有序数组创建：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">3</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">4</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">5</span>] = <span class="number">6</span>;</span><br><span class="line">arr[<span class="number">6</span>] = <span class="number">7</span>;</span><br><span class="line">arr[<span class="number">7</span>] = <span class="number">8</span>;</span><br><span class="line">arr[<span class="number">8</span>] = <span class="number">9</span>;</span><br></pre></td></tr></table></figure></li><li><p>不同类型有序数组创建：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">1</span>] = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">arr[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">3</span>] = <span class="string">&quot;4&quot;</span>;</span><br><span class="line">arr[<span class="number">4</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">5</span>] = <span class="string">&quot;6&quot;</span>;</span><br><span class="line">arr[<span class="number">6</span>] = <span class="number">7</span>;</span><br><span class="line">arr[<span class="number">7</span>] = <span class="string">&quot;8&quot;</span>;</span><br><span class="line">arr[<span class="number">8</span>] = <span class="number">9</span>;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-2、使用字面量创建"><a href="#2-2、使用字面量创建" class="headerlink" title="2.2、使用字面量创建"></a>2.2、使用字面量创建</h5><ul><li><p>同类型有序数组创建：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br></pre></td></tr></table></figure></li><li><p>不同类型有序数组创建：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="string">&quot;2&quot;</span>, <span class="number">3</span>, <span class="string">&quot;4&quot;</span>, <span class="number">5</span>, <span class="string">&quot;6&quot;</span>, <span class="number">7</span>, <span class="string">&quot;8&quot;</span>, <span class="number">9</span>];</span><br></pre></td></tr></table></figure></li></ul><h4 id="3）遍历数组"><a href="#3）遍历数组" class="headerlink" title="3）遍历数组"></a>3）遍历数组</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4）数组属性"><a href="#4）数组属性" class="headerlink" title="4）数组属性"></a>4）数组属性</h4><p><strong>constructor属性演示：返回创建数组对象的原型函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="property">constructor</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281218883.png" alt="image-20201017213941462"></p><p><strong>length属性演示：设置或返回数组元素的个数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="property">length</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281218359.png" alt="image-20201017214117638"></p><h4 id="5、数组方法"><a href="#5、数组方法" class="headerlink" title="5、数组方法"></a>5、数组方法</h4><p>push()方法演示：该方法可以向数组的末尾添加一个或多个元素，并返回数组的新的长度</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">push</span>(<span class="string">&quot;唐僧&quot;</span>, <span class="string">&quot;蜘蛛精&quot;</span>, <span class="string">&quot;白骨精&quot;</span>, <span class="string">&quot;玉兔精&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281218005.png" alt="image-20201017215218010"></p><p>pop()方法演示：该方法可以删除数组的最后一个元素，并将被删除的元素作为返回值返回</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">pop</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281218781.png" alt="image-20201017215359638"></p><p>unshift()方法演示：该方法向数组开头添加一个或多个元素，并返回新的数组长度</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">unshift</span>(<span class="string">&quot;牛魔王&quot;</span>, <span class="string">&quot;二郎神&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281218389.png" alt="image-20201017215527496"></p><p>shift()方法演示：该方法可以删除数组的第一个元素，并将被删除的元素作为返回值返回</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">shift</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/dd77a3a74059c9856680794c3b349bab.png" alt="image-20201017215800977"></p><h5 id="forEach-方法演示：该方法可以用来遍历数组"><a href="#forEach-方法演示：该方法可以用来遍历数组" class="headerlink" title="forEach()方法演示：该方法可以用来遍历数组"></a>forEach()方法演示：该方法可以用来遍历数组</h5><p>forEach()方法需要一个函数作为参数，像这种函数，由我们创建但是不由我们调用的，我们称为回调函数。数组中有几个元素函数就会执行几次，每次执行时，浏览器会将遍历到的元素，以实参的形式传递进来，我们可以来定义形参，来读取这些内容，浏览器会在回调函数中传递三个参数：</p><ul><li>第一个参数：就是当前正在遍历的元素</li><li>第二个参数：就是当前正在遍历的元素的索引</li><li>第三个参数：就是正在遍历的数组</li></ul><blockquote><p>注意：这个方法只支持IE8以上的浏览器，IE8及以下的浏览器均不支持该方法，所以如果需要兼容IE8，则不要使用forEach()，还是使用for循环来遍历数组。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>];</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">value, index, obj</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(value + <span class="string">&quot; #### &quot;</span> + index + <span class="string">&quot; #### &quot;</span> + obj);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219689.png" alt="image-20201017220618530"></p><h5 id="slice-方法演示：该方法可以用来从数组提取指定元素，该方法不会改变元素数组，而是将截取到的元素封装到一个新数组中返回"><a href="#slice-方法演示：该方法可以用来从数组提取指定元素，该方法不会改变元素数组，而是将截取到的元素封装到一个新数组中返回" class="headerlink" title="slice()方法演示：该方法可以用来从数组提取指定元素，该方法不会改变元素数组，而是将截取到的元素封装到一个新数组中返回"></a>slice()方法演示：该方法可以用来从数组提取指定元素，该方法不会改变元素数组，而是将截取到的元素封装到一个新数组中返回</h5><p>参数：</p><ul><li><p>第一个参数：截取开始的位置的索引，包含开始索引</p></li><li><p>第二个参数：截取结束的位置的索引，不包含结束索引，第二个参数可以省略不写，<strong>此时会截取从开始索引往后的所有元素</strong></p><blockquote><p>注意：索引可以传递一个负值，如果传递一个负值，则从后往前计算，-1代表倒数第一个，-2代表倒数第二个。</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>, <span class="string">&quot;唐僧&quot;</span>, <span class="string">&quot;白骨精&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">slice</span>(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">result = arr.<span class="title function_">slice</span>(<span class="number">3</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">result = arr.<span class="title function_">slice</span>(<span class="number">1</span>, -<span class="number">2</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219907.png" alt="image-20201018090855439"></p><h5 id="splice-方法演示：该方法可以用于删除数组中的指定元素，该方法会影响到原数组，会将指定元素从原数组中删除，并将被删除的元素作为返回值返回"><a href="#splice-方法演示：该方法可以用于删除数组中的指定元素，该方法会影响到原数组，会将指定元素从原数组中删除，并将被删除的元素作为返回值返回" class="headerlink" title="splice()方法演示：该方法可以用于删除数组中的指定元素，该方法会影响到原数组，会将指定元素从原数组中删除，并将被删除的元素作为返回值返回"></a>splice()方法演示：该方法可以用于删除数组中的指定元素，该方法会影响到原数组，会将指定元素从原数组中删除，并将被删除的元素作为返回值返回</h5><p>参数：</p><ul><li>第一个参数：表示开始位置的索引</li><li>第二个参数：表示要删除的元素数量</li><li>第三个参数及以后参数：可以传递一些新的元素，这些元素将会自动插入到开始位置索引前边</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>, <span class="string">&quot;唐僧&quot;</span>, <span class="string">&quot;白骨精&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">splice</span>(<span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">result = arr.<span class="title function_">splice</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;牛魔王&quot;</span>, <span class="string">&quot;铁扇公主&quot;</span>, <span class="string">&quot;红孩儿&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219255.png" alt="image-20201018091447071"></p><h5 id="concat-方法演示：该方法可以连接两个或多个数组，并将新的数组返回，该方法不会对原数组产生影响"><a href="#concat-方法演示：该方法可以连接两个或多个数组，并将新的数组返回，该方法不会对原数组产生影响" class="headerlink" title="concat()方法演示：该方法可以连接两个或多个数组，并将新的数组返回，该方法不会对原数组产生影响"></a>concat()方法演示：该方法可以连接两个或多个数组，并将新的数组返回，该方法不会对原数组产生影响</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="string">&quot;白骨精&quot;</span>, <span class="string">&quot;玉兔精&quot;</span>, <span class="string">&quot;蜘蛛精&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> arr3 = [<span class="string">&quot;二郎神&quot;</span>, <span class="string">&quot;太上老君&quot;</span>, <span class="string">&quot;玉皇大帝&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">concat</span>(arr2, arr3, <span class="string">&quot;牛魔王&quot;</span>, <span class="string">&quot;铁扇公主&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219992.png" alt="image-20201018122134527"></p><h5 id="join-方法演示：该方法可以将数组转换为一个字符串，该方法不会对原数组产生影响，而是将转换后的字符串作为结果返回，在join-中可以指定一个字符串作为参数，这个字符串将会成为数组中元素的连接符，如果不指定连接符，则默认使用，作为连接符"><a href="#join-方法演示：该方法可以将数组转换为一个字符串，该方法不会对原数组产生影响，而是将转换后的字符串作为结果返回，在join-中可以指定一个字符串作为参数，这个字符串将会成为数组中元素的连接符，如果不指定连接符，则默认使用，作为连接符" class="headerlink" title="join()方法演示：该方法可以将数组转换为一个字符串，该方法不会对原数组产生影响，而是将转换后的字符串作为结果返回，在join()中可以指定一个字符串作为参数，这个字符串将会成为数组中元素的连接符，如果不指定连接符，则默认使用，作为连接符"></a>join()方法演示：该方法可以将数组转换为一个字符串，该方法不会对原数组产生影响，而是将转换后的字符串作为结果返回，在join()中可以指定一个字符串作为参数，这个字符串将会成为数组中元素的连接符，如果不指定连接符，则默认使用，作为连接符</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">join</span>(<span class="string">&quot;@-@&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219620.png" alt="image-20201018122403396"></p><p><strong>reverse()方法演示：该方法用来反转数组（前边的去后边，后边的去前边），该方法会直接修改原数组</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;孙悟空&quot;</span>, <span class="string">&quot;猪八戒&quot;</span>, <span class="string">&quot;沙和尚&quot;</span>];</span><br><span class="line">arr.<span class="title function_">reverse</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219968.png" alt="image-20201018122520134"></p><p><strong>sort()方法演示：该方法可以用来对数组中的元素进行排序，也会影响原数组，默认会按照Unicode编码进行排序</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;a&quot;</span>];</span><br><span class="line">arr.<span class="title function_">sort</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219474.png" alt="image-20201018123042465"></p><blockquote><p>注意：即使对于纯数字的数组，使用sort()排序时，也会按照Unicode编码来排序，所以对数字进排序时，可能会得到错误的结果。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line">arr.<span class="title function_">sort</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219388.png" alt="image-20201018123124230"></p><p>我们可以自己来指定排序的规则，我们可以在sort()添加一个回调函数，来指定排序规则，回调函数中需要定义两个形参，浏览器将会分别使用数组中的元素作为实参去调用回调函数，使用哪个元素调用不确定，但是肯定的是在数组中a一定在b前边，浏览器会根据回调函数的返回值来决定元素的顺序，如下：</p><ul><li><p>如果返回一个大于0的值，则元素会交换位置</p></li><li><p>如果返回一个小于0的值，则元素位置不变</p></li><li><p>如果返回一个等于0的值，则认为两个元素相等，也不交换位置</p></li></ul><p>经过上边的规则，我们可以总结下：</p><ul><li>如果需要升序排列，则返回 a-b</li><li>如果需要降序排列，则返回 b-a</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure><h3 id="2、String对象"><a href="#2、String对象" class="headerlink" title="2、String对象"></a>2、String对象</h3><h4 id="1）概述-1"><a href="#1）概述-1" class="headerlink" title="1）概述"></a>1）概述</h4><p>在JS中为我们提供了三个包装类，通过这三个包装类可以将基本数据类型的数据转换为对象</p><ul><li>String()：可以将基本数据类型字符串转换为String对象</li><li>Number()：可以将基本数据类型的数字转换为Number对象</li><li>Boolean()：可以将基本数据类型的布尔值转换为Boolean对象</li></ul><p>但是注意：我们在实际应用中不会使用基本数据类型的对象，如果使用基本数据类型的对象，在做一些比较时可能会带来一些不可预期的结果，在这一章节中，我们重点介绍String()对象的属性和方法。</p><h4 id="2）字符串属性"><a href="#2）字符串属性" class="headerlink" title="2）字符串属性"></a>2）字符串属性</h4><p><strong>constructor属性演示：返回创建字符串对象的原型函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="property">constructor</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219635.png" alt="image-20201018152739858"></p><p><strong>length属性演示：可以用来获取字符串的长度</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="property">length</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219543.png" alt="image-20201018152511480"></p><h4 id="3）字符串方法"><a href="#3）字符串方法" class="headerlink" title="3）字符串方法"></a>3）字符串方法</h4><p><strong>charAt()方法演示：该方法可以根据索引获取指定位置的字符</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">charAt</span>(<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281219850.png" alt="image-20201018153002150"></p><p><strong>charCodeAt()方法演示：该方法获取指定位置字符的字符编码（Unicode编码）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">charCodeAt</span>(<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281220330.png" alt="image-20201018153218872"></p><p><strong>concat()方法演示：该方法可以用来连接两个或多个字符串</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">concat</span>(<span class="string">&quot;你好，&quot;</span>, <span class="string">&quot;世界！&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281220271.png" alt="image-20201018153504935"></p><h5 id="indexof-方法演示：该方法可以检索一个字符串中是否含有指定内容，如果字符串中含有该内容，则会返回其第一次出现的索引，如果没有找到指定的内容，则返回-1，可以指定一个第二个参数，指定开始查找的位置"><a href="#indexof-方法演示：该方法可以检索一个字符串中是否含有指定内容，如果字符串中含有该内容，则会返回其第一次出现的索引，如果没有找到指定的内容，则返回-1，可以指定一个第二个参数，指定开始查找的位置" class="headerlink" title="indexof()方法演示：该方法可以检索一个字符串中是否含有指定内容，如果字符串中含有该内容，则会返回其第一次出现的索引，如果没有找到指定的内容，则返回-1，可以指定一个第二个参数，指定开始查找的位置"></a>indexof()方法演示：该方法可以检索一个字符串中是否含有指定内容，如果字符串中含有该内容，则会返回其第一次出现的索引，如果没有找到指定的内容，则返回-1，可以指定一个第二个参数，指定开始查找的位置</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&quot;o&quot;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&quot;o&quot;</span>, <span class="number">5</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281220361.png" alt="image-20201018160212146"></p><h5 id="lastIndexOf-方法演示：该方法的用法和indexOf-一样，不同的是indexOf是从前往后找，而lastIndexOf是从后往前找，也可以指定开始查找的位置"><a href="#lastIndexOf-方法演示：该方法的用法和indexOf-一样，不同的是indexOf是从前往后找，而lastIndexOf是从后往前找，也可以指定开始查找的位置" class="headerlink" title="lastIndexOf()方法演示：该方法的用法和indexOf()一样，不同的是indexOf是从前往后找，而lastIndexOf是从后往前找，也可以指定开始查找的位置"></a>lastIndexOf()方法演示：该方法的用法和indexOf()一样，不同的是indexOf是从前往后找，而lastIndexOf是从后往前找，也可以指定开始查找的位置</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;o&quot;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;o&quot;</span>, <span class="number">5</span>));</span><br></pre></td></tr></table></figure><h5 id="slice-方法演示：可以从字符串中截取指定的内容，不会影响原字符串，而是将截取到内容返回"><a href="#slice-方法演示：可以从字符串中截取指定的内容，不会影响原字符串，而是将截取到内容返回" class="headerlink" title="slice()方法演示：可以从字符串中截取指定的内容，不会影响原字符串，而是将截取到内容返回"></a>slice()方法演示：可以从字符串中截取指定的内容，不会影响原字符串，而是将截取到内容返回</h5><p>参数：</p><ul><li>第一个参数：开始位置的索引（包括开始位置）</li><li>第二个参数：结束位置的索引（不包括结束位置），如果省略第二个参数，则会截取到后边所有的</li></ul><blockquote><p>注意：也可以传递一个负数作为参数，负数的话将会从后边计算</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = str.<span class="title function_">slice</span>(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">result = str.<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">result = str.<span class="title function_">slice</span>(<span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281220740.png" alt="image-20201018160909634"></p><h5 id="substring-方法演示：可以用来截取一个字符串，它和slice-类似"><a href="#substring-方法演示：可以用来截取一个字符串，它和slice-类似" class="headerlink" title="substring()方法演示：可以用来截取一个字符串，它和slice()类似"></a>substring()方法演示：可以用来截取一个字符串，它和slice()类似</h5><p>参数：</p><ul><li>第一个参数：开始截取位置的索引（包括开始位置）</li><li>第二个参数：结束位置的索引（不包括结束位置），如果省略第二个参数，则会截取到后边所有的</li></ul><blockquote><p>注意：不同的是这个方法不能接受负值作为参数，如果传递了一个负值，则默认使用0，而且它还自动调整参数的位置，如果第二个参数小于第一个，则自动交换 </p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = str.<span class="title function_">substring</span>(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">result = str.<span class="title function_">substring</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">result = str.<span class="title function_">substring</span>(<span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281220167.png" alt="image-20201018160942481"></p><p><strong>substr()方法演示：该方法用来截取字符串</strong></p><p>参数：</p><ul><li>第一个参数：截取开始位置的索引</li><li>第二个参数：截取的长度</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = str.<span class="title function_">substr</span>(<span class="number">6</span>, <span class="number">6</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281220890.png" alt="image-20201018161859192"></p><p><strong>split()方法演示：该方法可以将一个字符串拆分为一个数组，需要一个字符串作为参数，将会根据该字符串去拆分数组</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = str.<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281220576.png" alt="image-20201018162029011"></p><p><strong>toUpperCase()方法演示：将一个字符串转换为大写并返回</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = str.<span class="title function_">toUpperCase</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281220161.png" alt="image-20201018162118218"></p><p><strong>toLowerCase()方法演示：将一个字符串转换为小写并返回</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> result = str.<span class="title function_">toLowerCase</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281220845.png" alt="image-20201018162241087"></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>div跟随鼠标移动练习</title>
      <link href="/archives/9296cf1f.html"/>
      <url>/archives/9296cf1f.html</url>
      
        <content type="html"><![CDATA[<h1 id="div跟随鼠标移动练习"><a href="#div跟随鼠标移动练习" class="headerlink" title="div跟随鼠标移动练习"></a>div跟随鼠标移动练习</h1><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281212715.png" alt="image-20230109222326067"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">2000px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">3000px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 开启box1的绝对定位 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*---------------------使div可以跟随鼠标移动-------------------*/</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取div</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> box1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//给文档绑定鼠标移动事件</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//因为给div绑定事件时，当鼠标移除div的时候将不会触发事件</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//而鼠标无法移出文档页面</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="keyword">function</span>(<span class="params">event</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//解决事件对象兼容问题</span></span></span><br><span class="line"><span class="language-javascript">                event = event||<span class="variable language_">window</span>.<span class="property">event</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取鼠标的坐标</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 * div的偏移量是相对于整个页面的</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 * client用于获取当前可见的窗口的坐标</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 * 当窗口更大，出现滚动条时，鼠标将脱离div</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 *    var left = event.clientX;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 *    var top = event.clientY;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 */</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 * pageX和pageY可以获取鼠标相对于当前页面的坐标</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 * 但是这两个属性在IE8中不支持，所以如果需要兼容IE8则不要使用 </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 *   var left = event.pageX;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 *   var top = event.pageY;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 */</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//通过获取滚动条滚动的距离</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//与可见窗口的坐标相加来解决兼容问题和鼠标脱离问题</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//chrome认为浏览器的滚动条是body的，可以通过 document.body.scrollTop 来获取</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//火狐等浏览器认为浏览器的滚动条是html的</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//所以需要进行滚动条兼容</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> st = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span> ||<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> sl = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollLeft</span> ||<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollLeft</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> left = event.<span class="property">clientX</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> top = event.<span class="property">clientY</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//设置div的偏移量</span></span></span><br><span class="line"><span class="language-javascript">                box1.<span class="property">style</span>.<span class="property">left</span> = left+sl+<span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                box1.<span class="property">style</span>.<span class="property">top</span> = top+st+<span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/archives/2eec1551.html"/>
      <url>/archives/2eec1551.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="一、简单内容"><a href="#一、简单内容" class="headerlink" title="一、简单内容"></a>一、简单内容</h2><h3 id="1-基本标签"><a href="#1-基本标签" class="headerlink" title="1.基本标签"></a>1.基本标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML的基本标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--段落标记--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>该剧于1987年在中央电视台一套首播。<span class="tag">&lt;<span class="name">p</span>&gt;</span>该剧于1987年在中央电视台一套首播。<span class="tag">&lt;<span class="name">p</span>&gt;</span>该剧于1987年在中央电视台一套首播。</span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--标题字：是HTML预留的格式，和word中的标题字相同--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h6</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--换行标记，br标签是一个独目标记--&gt;</span></span><br><span class="line">        hello <span class="tag">&lt;<span class="name">br</span>&gt;</span>world!</span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--横线，独目标记--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--预留格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">for(int i = 0; i &lt; 10; i++)&#123;</span><br><span class="line">System.out.println(&quot;i = &quot; + i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除字<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>插入字<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>粗体字<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体字<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"></span><br><span class="line">10<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line">10<span class="tag">&lt;<span class="name">sub</span>&gt;</span>m<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--字体标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span> <span class="attr">size</span>=<span class="string">&quot;50&quot;</span>&gt;</span>字体标签<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-实体符号"><a href="#2-实体符号" class="headerlink" title="2.实体符号"></a>2.实体符号</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>实体符号<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 实体符号特点是：以&amp;开始，以;结束。&amp;lt; 是小于号   &amp;gt; 是大于号 --&gt;</span></span><br><span class="line">        b<span class="symbol">&amp;lt;</span>a<span class="symbol">&amp;gt;</span>c</span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--三个空格--&gt;</span></span><br><span class="line">        a<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>b</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-HTML表格"><a href="#3-HTML表格" class="headerlink" title="3.HTML表格"></a>3.HTML表格</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>表格<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>员工信息列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">border=&quot;1px&quot; 设置表格的边框为1像素宽度。</span></span><br><span class="line"><span class="comment">width 宽度</span></span><br><span class="line"><span class="comment">height 高度</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--align对齐方式--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>a<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>b<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>c<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>d<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>e<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>f<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>x<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>y<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>z<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281226495.png" alt="image.png"></p><h3 id="4-图像标记"><a href="#4-图像标记" class="headerlink" title="4.图像标记"></a>4.图像标记</h3><p><strong>1、设置图片宽度和高度的时候，只设置宽度，高度会进行等比例缩放。</strong></p><ul><li><p>title 设置鼠标悬停时显示的信息。</p></li><li><p>alt 设置图片加载失败时显示的提示信息。</p></li><li><p>vspace 设置图像顶部和底部的空白(垂直边距)</p></li><li><p>hspace 设置图像左侧和右侧的空白(水平边距)</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图像 url&quot;</span>   <span class="attr">align</span>=<span class="string">&quot;left&quot;</span>   <span class="attr">hspace</span>=<span class="string">&quot;30&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>bgcolorcolor</strong>和<strong>background</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bgcolor : 设置背景色</span><br><span class="line">background : 设置背景图片</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;red&quot;</span> <span class="attr">background</span>=<span class="string">&quot;img/bd_logo1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-链接"><a href="#5-链接" class="headerlink" title="5.链接"></a>5.链接</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">普通的链接：<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.example.com/&quot;</span>&gt;</span>链接文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">图像链接： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.example.com/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;URL&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;替换文本&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">邮件链接： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:webmaster@example.com&quot;</span>&gt;</span>发送e-mail<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">书签：</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;tips&quot;</span>&gt;</span>提示部分<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#tips&quot;</span>&gt;</span>跳到提示部分<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>==target=<strong>“_self”</strong> 默认值：原窗口 target=<strong>“blank”</strong> 新窗口==</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>  <span class="attr">target</span>=<span class="string">&quot;目标窗口的弹出方式&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  </span><br><span class="line">            //点击百度就跳转到www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="6-有序，无序，解释列表"><a href="#6-有序，无序，解释列表" class="headerlink" title="6.有序，无序，解释列表"></a>6.有序，无序，解释列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ul无序列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一年四季<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--无序列表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>春<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>夏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>秋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>冬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--有序列表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>我喜欢的明星排名<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">start</span>=<span class="string">&quot;2&quot;</span> <span class="attr">reversed</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>ddd<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--对名词的解释--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span>景老师<span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="comment">&lt;!--名词--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>好有趣<span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="comment">&lt;!--解释--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>可爱<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span>景老师222<span class="tag">&lt;/<span class="name">dt</span>&gt;</span><span class="comment">&lt;!--名词--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>好有趣222<span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="comment">&lt;!--解释--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>可爱222<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、表单"><a href="#二、表单" class="headerlink" title="二、表单"></a>二、表单</h2><h3 id="1-表单属性"><a href="#1-表单属性" class="headerlink" title="1.表单属性"></a>1.表单属性</h3><table><thead><tr><th>action</th><th>接受并处理表单数据的服务器地址</th></tr></thead><tbody><tr><td>method</td><td>get或post，处理数据的方法</td></tr><tr><td>name</td><td>表单的名称，<strong>写了name属性的一律提交给服务器</strong></td></tr><tr><td>autocomplete</td><td>记录输入的内容,on有、off无</td></tr><tr><td>novalidate</td><td>novalidate=”true” 取消表单验证</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>form表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://www.mysite.cn/index.jsp&quot;</span>  <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;on&quot;</span>&gt;</span></span><br><span class="line">账号:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;passuser&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    密码:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>                                                                       </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意:W3C的TTTP协议规定的，必须以这种形式提交给服务器</strong></p><p><strong><a href="http://localhost:8080/jd/login?username=abc&amp;userpwd=111">http://localhost:8080/jd/login?username=abc&amp;userpwd=111</a></strong></p><p>重点强调:==表单项写了name属性的，一律会提交给服务器==。不想提交这一项，就不要写name属性。</p><p>文本框和密码框的value不需要程序员指定，用户输入什么value就是什么。</p><h3 id="2-input元素及属性"><a href="#2-input元素及属性" class="headerlink" title="2.input元素及属性"></a>2.input元素及属性</h3><table><thead><tr><th>type</th><th>text</th><th>单行文本输入框</th></tr></thead><tbody><tr><td>password</td><td>密码输入框</td><td></td></tr><tr><td>radio</td><td>单选按钮</td><td></td></tr><tr><td>checkbox</td><td>复选框</td><td></td></tr><tr><td>button</td><td>普通按钮</td><td></td></tr><tr><td>submit</td><td>提交按钮</td><td></td></tr><tr><td>reset</td><td>重置按钮</td><td></td></tr><tr><td>image</td><td>图像形式的提交按钮</td><td></td></tr><tr><td>hidden</td><td>隐藏域</td><td></td></tr><tr><td>file</td><td>文件域</td><td></td></tr><tr><td>email</td><td>E-mail地址输入域</td><td></td></tr><tr><td>url</td><td>URL地址输入域</td><td></td></tr><tr><td>number</td><td>数值输入域</td><td></td></tr><tr><td>range</td><td>一定范围内数字值输入域</td><td></td></tr><tr><td>Date pickers(date,month,week,time,datetime,datetime-local)</td><td>日期和时间的输入类型</td><td></td></tr><tr><td>search</td><td>搜索域</td><td></td></tr><tr><td>color</td><td>颜色输入类型</td><td></td></tr><tr><td>tel</td><td>电话号码输入类型</td><td></td></tr><tr><td>name</td><td>由用户定义</td><td>控件的名称</td></tr><tr><td>value</td><td>由用户定义</td><td>input控件中的默认文本值</td></tr><tr><td>size</td><td>正整数</td><td>input控件在页面中的显示宽度</td></tr><tr><td>readonly</td><td>readonly</td><td>该控件内容为只读(不能编辑修改)</td></tr><tr><td>disabled</td><td>disabled</td><td>第一次加载页面时禁用该控件(显示为灰色)</td></tr><tr><td>checked</td><td>checked</td><td>定义选择控件默认被选中的项</td></tr><tr><td>maxlength</td><td>正整数</td><td>控件允许输入的最多字符数</td></tr><tr><td>autocomplete</td><td>on/off</td><td>设定是否自动完成表单字段内容</td></tr><tr><td>autofocus</td><td>autofocus</td><td>指定页面加载后是否自动获取焦点</td></tr><tr><td>form</td><td>form元素的id</td><td>设定字段隶属哪一个表单</td></tr><tr><td>list</td><td>datalist元素的id</td><td>指定字段的候选数据值列表</td></tr><tr><td>multiple</td><td>multiple</td><td>指定输入框是否可以选择多个值</td></tr><tr><td>min、max和step</td><td>数值</td><td>规定输入框所允许的最大值、最小值及间隔</td></tr><tr><td>pattern</td><td>字符串</td><td>验证输入的内容是否与定义的正则表达式匹配</td></tr><tr><td>placeholder</td><td>字符串</td><td>为input类型的输入框提供一种提示</td></tr><tr><td>required</td><td>required</td><td>规定输入框填写的内容不能为空</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>form表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://www.mysite.cn/index.jsp&quot;</span>  <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span>  <span class="attr">autocomplete</span>=<span class="string">&quot;on&quot;</span>&gt;</span></span><br><span class="line">账号:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;zhangsan&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    密码:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;123456&quot;</span>  /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">性别</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>/&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    兴趣:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>/&gt;</span>唱歌</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>/&gt;</span>跳舞</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>/&gt;</span>游泳</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    上传头像:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    请输入您的邮箱:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;formmail&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    请输入电话号码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;tel&quot;</span> <span class="attr">name</span>=<span class="string">&quot;telphone&quot;</span>  <span class="attr">pattern</span>=<span class="string">&quot;^\d&#123;11&#125;$&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    输入搜索关键字<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">name</span>=<span class="string">&quot;searchinfo&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    请选取一种颜色:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> <span class="attr">name</span>=<span class="string">&quot;#FF3E96&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> <span class="attr">name</span>=<span class="string">&quot;color2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;#FF3E96&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span>   </span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;普通按钮&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>                                                                      </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281226608.png" alt="img"></p><h3 id="3-其他表单元素"><a href="#3-其他表单元素" class="headerlink" title="3.其他表单元素"></a>3.其他表单元素</h3><h4 id="1-textarea元素"><a href="#1-textarea元素" class="headerlink" title="1.textarea元素"></a>1.textarea元素</h4><p>除了cols和rows属性之外还可以使用下面这几个</p><table><thead><tr><th>name</th><th>由用户定义</th><th>控件的名称</th></tr></thead><tbody><tr><td>readonly</td><td>readonly</td><td>该控件为只读(不能编辑修改)</td></tr><tr><td>disabled</td><td>disabled</td><td>第一次加载页面时禁用该控件(显示为灰色)</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>  <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">评论:<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;60&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">评论的时候，请遵纪守法并注意语言文明,多给文档分享人的一些支持。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281226439.png" alt="img"></p><h4 id="2-select元素"><a href="#2-select元素" class="headerlink" title="2.select元素"></a>2.select元素</h4><table><thead><tr><th><select></th><th>size</th><th>指定下拉菜单的可见选项数(整数)</th></tr></thead><tbody><tr><td><select></td><td>multiple</td><td>定义multiple=”multiple”,下拉菜单具有多项选择的功能，按住Ctrl</td></tr><tr><td><option></td><td>selected</td><td>定义selected=”selected”，当前选项为默认选中项</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>form表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>  <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    所在校区:<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span>                        <span class="comment">&lt;!--最基本的下拉菜单--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>-请选择-<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>青岛<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    特长(单选):<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span>                        </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>唱歌<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>画画<span class="tag">&lt;/<span class="name">option</span>&gt;</span> <span class="comment">&lt;!--设置默认选中项--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>跳舞<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    爱好(多选):<span class="tag">&lt;<span class="name">br</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span> <span class="comment">&lt;!--设置多选和可见选项数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>读书<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>写代码<span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="comment">&lt;!--设置默认选中项--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>旅行<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>听音乐<span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="comment">&lt;!--设置默认选中项--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>踢球<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>游戏<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>                                                                       </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281227907.png" alt="image-20221214192421429"></p><h4 id="3-datalist元素"><a href="#3-datalist元素" class="headerlink" title="3.datalist元素"></a>3.datalist元素</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>form表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span> </span><br><span class="line">请输入用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">list</span>=<span class="string">&quot;namelist&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;namelist&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>lucy<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>lily<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>                                                                       </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281227069.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EL表达式和JSTL标签</title>
      <link href="/archives/7c4b5ef7.html"/>
      <url>/archives/7c4b5ef7.html</url>
      
        <content type="html"><![CDATA[<h1 id="EL表达式和JSTL标签"><a href="#EL表达式和JSTL标签" class="headerlink" title="EL表达式和JSTL标签"></a>EL表达式和JSTL标签</h1><h2 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h2><h3 id="EL表达式的语法"><a href="#EL表达式的语法" class="headerlink" title="EL表达式的语法"></a>EL表达式的语法</h3><p>EL(expression language)是为了让JSP写起来更加方便，他提供了在jsp中简化表达式的方法，让jsp的代码更加简化</p><blockquote><p>语法结构：${expression}</p></blockquote><p>注意，EL表达式一般操作的都是**==域对象中的数据==**，操作不了局部变量.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>EL表达式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  &lt;%</span><br><span class="line">      pageContext.setAttribute(&quot;username&quot;,&quot;zhangsan&quot;);</span><br><span class="line">      request.setAttribute(&quot;username&quot;,&quot;lisi&quot;);</span><br><span class="line">      session.setAttribute(&quot;username&quot;,&quot;wangwu&quot;);</span><br><span class="line">      application.setAttribute(&quot;username&quot;,&quot;zhaoliu&quot;);</span><br><span class="line">  %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">        获取作用域中username： $&#123;username&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span>&lt;%-- 默认从小到大的范围中找，找到的第一个返回 --%&gt;</span><br><span class="line">        不在作用域中的： $&#123;password&#125;</span><br><span class="line">        &lt;%--获取request作用域中的username： $&#123;requestScope.username&#125;</span><br><span class="line">        获取session作用域中的username： $&#123;sessionScope.username&#125;</span><br><span class="line">        获取application作用域中的username： $&#123;applicationScope.username&#125;--%&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不在作用域中的不是显示null，而是显示为空</p><p>域对象的概念在jsp中共有四种，分别是pageContext，request，session，application，范围依次是-&gt; 本页面，一次请求，一次会话，整个应用程序</p><p>从指定范围中取值，以及取值默认规则</p><ul><li>当需要指定从某个特定的域对象中查找数据的时候可以使用四个域对象对应的空间对象分别为：pageScope,requestScope,sessionScope,applicationScope</li><li>EL默认的查找方式为：从小到大查找，找到了即返回，若未查找到则返回空字符串，也就是<strong>空白</strong></li></ul><h4 id="EL中的常见内置对象"><a href="#EL中的常见内置对象" class="headerlink" title="EL中的常见内置对象"></a>EL中的常见内置对象</h4><ul><li>pageScope：获取PageContext中的数据</li><li>requestScope：获取Request的数据</li><li>sessionSocpe：获取Session的数据</li><li>applicationScope：获取ServletContext中的数据</li></ul><h4 id="EL中获取数据的顺序"><a href="#EL中获取数据的顺序" class="headerlink" title="EL中获取数据的顺序"></a>EL中获取数据的顺序</h4><p>我们使用${key}时，如果没有指定从哪个域中获取数据，那么el就会有一个默认顺序。</p><pre><code>pageScope &gt; requestScope &gt; sessionScope &gt; applicationScope</code></pre><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="1-获取指定范围的username"><a href="#1-获取指定范围的username" class="headerlink" title="1.获取指定范围的username"></a>1.获取指定范围的username</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>EL表达式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  &lt;%</span><br><span class="line">      pageContext.setAttribute(&quot;username&quot;,&quot;zhangsan&quot;);</span><br><span class="line">      request.setAttribute(&quot;username&quot;,&quot;lisi&quot;);</span><br><span class="line">      session.setAttribute(&quot;username&quot;,&quot;wangwu&quot;);</span><br><span class="line">      application.setAttribute(&quot;username&quot;,&quot;zhaoliu&quot;);</span><br><span class="line"></span><br><span class="line">  %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">         获取pageContext作用域中的username:  $&#123;pageScope.username&#125;</span><br><span class="line">         获取request作用域中的username： $&#123;requestScope.username&#125;</span><br><span class="line">         获取session作用域中的username： $&#123;sessionScope.username&#125;</span><br><span class="line">         获取application作用域中的username： $&#123;applicationScope.username&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281227545.png" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-h7npPlcT-1606819321488)(C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20201201175403344.png)]"></p><h4 id="2-获取作用域中的集合"><a href="#2-获取作用域中的集合" class="headerlink" title="2.获取作用域中的集合"></a>2.获取作用域中的集合</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page import=&quot;java.util.List&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;java.util.ArrayList&quot; %&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>EL表达式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  &lt;%</span><br><span class="line">      List<span class="tag">&lt;<span class="name">String</span>&gt;</span> list=new ArrayList<span class="tag">&lt;<span class="name">String</span>&gt;</span>();</span><br><span class="line">      list.add(&quot;aaa&quot;);</span><br><span class="line">      list.add(&quot;bbb&quot;);</span><br><span class="line">      list.add(&quot;ccc&quot;);</span><br><span class="line">      request.setAttribute(&quot;list&quot;,list);</span><br><span class="line">  %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">           获取list中指定下标的数据：$&#123;list[1]&#125;--$&#123;list[2]&#125;</span><br><span class="line">           获取集合的长度：$&#123;list.size()&#125;</span><br><span class="line">           list代表的是存在域对象中的变量名(限域变量名)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281227640.png" alt="img"></p><h4 id="3-获取JavaBean对象"><a href="#3-获取JavaBean对象" class="headerlink" title="3.获取JavaBean对象"></a>3.获取JavaBean对象</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@ page import=&quot;com.User.User&quot; %&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>EL表达式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  &lt;%</span><br><span class="line">         User user=new User();</span><br><span class="line">         user.setUsername(&quot;zhangsan&quot;);</span><br><span class="line">         user.setSex(true);</span><br><span class="line">         user.setUserId(1);</span><br><span class="line">         request.setAttribute(&quot;user&quot;,user);//设置域对象属性</span><br><span class="line">  %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">         获取JavaBean中的username  $&#123;user.username&#125;</span><br><span class="line">         获取JavaBean中的userId    $&#123;user.userId&#125;</span><br><span class="line">         获取JavaBean中的sex       $&#123;user.sex&#125;     </span><br><span class="line">  <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281227566.png" alt="在这里插入图片描述"></p><h4 id="4-empty"><a href="#4-empty" class="headerlink" title="4.empty"></a>4.empty</h4><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281228647.png" alt="在这里插入图片描述"></p><h3 id="EL表达式的运算"><a href="#EL表达式的运算" class="headerlink" title="EL表达式的运算"></a>EL表达式的运算</h3><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281228505.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281228196.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281228912.png" alt="在这里插入图片描述"></p><h3 id="EL表达式原理及注意点"><a href="#EL表达式原理及注意点" class="headerlink" title="EL表达式原理及注意点"></a>EL表达式原理及注意点</h3><p>原理：EL表达式在获取某个对象的属性值时，先将**==某个属性值首字母变成大写，然后加上get前缀==**，拼接成getter方法，通过反射将该对象构建出来，然后再对该对象执行getter方法，这与私有属性并没有关系，所以要注意，JavaBean的属性名要小写，且要有getter方法，不然会报错。</p><h2 id="JSTL标签"><a href="#JSTL标签" class="headerlink" title="JSTL标签"></a>JSTL标签</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p> JSTL（Java Server Pages Standerd Tag Library，JSP标准标签库）包含用于编写和开发JSP页面的一组标准标签，它可以为用户提供一个无脚本环境。在此环境中，用户可以使用标签编写代码，而无须使用Java脚本，大大提高了程序的可维护性。</p><p>实际上它是由5个功能不同的标签库组成。这5个标签库分别是核心标签库、格式标签库、SQL标签库、XML标签库和函数标签库等。在使用这些标签之前必须在JSP页面的顶部使用&lt;%@ taglib%&gt;指令定义引用的标签库和访问前缀。</p><h3 id="引入jar包和taglib标签地址"><a href="#引入jar包和taglib标签地址" class="headerlink" title="引入jar包和taglib标签地址"></a>引入jar包和taglib标签地址</h3><p>前提：</p><p>​    引入两个jar包：jstl.jar, standard.jar</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281228643.png" alt="img"></p><p>引入taglib标签参考地址</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281228683.png" alt="img"></p><h3 id="核心标签库：通用标签，条件标签，迭代标签"><a href="#核心标签库：通用标签，条件标签，迭代标签" class="headerlink" title="核心标签库：通用标签，条件标签，迭代标签"></a>核心标签库：通用标签，条件标签，迭代标签</h3><h4 id="1、c-out-取出域中的值显示到页面中"><a href="#1、c-out-取出域中的值显示到页面中" class="headerlink" title="1、c:out    取出域中的值显示到页面中"></a>1、c:out    取出域中的值显示到页面中</h4><pre><code>作用：向页面输出内容value:要输出的值default：如果value值为空，显示默认值escapeXml:是否对xml特殊符号转义    默认会对value值进行检查，对html符号进行转义   true    false  不转义</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">例子： </span><br><span class="line">&lt;%          </span><br><span class="line">request.setAttribute(&quot;address&quot;, &quot;我也不知道&quot;);</span><br><span class="line">request.setAttribute(&quot;code&quot;, &quot;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;tianwanggaidihu&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>&quot;);</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;address &#125;&quot;</span> <span class="attr">default</span>=<span class="string">&quot;北京&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">c:out</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">&lt;%-- $&#123;code &#125; --%&gt;<span class="comment">&lt;!-- 将域中属性值取出写入到响应体中交给浏览器 ， 如果内容是html内容，浏览器会解析 --&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;code &#125;&quot;</span> <span class="attr">escapeXml</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">c:out</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2、c-set-向域中设置属性值"><a href="#2、c-set-向域中设置属性值" class="headerlink" title="2、c:set  向域中设置属性值"></a>2、c:set  向域中设置属性值</h4><pre><code>request.setAttribute(&quot;address&quot;, &quot;我也不知道&quot;);scope： 要存储值的域    不指定默认存在pageContext域中    page/request/session/applicationvar：  存储的键value： 存储的属性值</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>c：set<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:set</span> <span class="attr">var</span>=<span class="string">&quot;key&quot;</span> <span class="attr">value</span>=<span class="string">&quot;pagehehe&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;page&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">c:set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:set</span> <span class="attr">var</span>=<span class="string">&quot;key&quot;</span> <span class="attr">value</span>=<span class="string">&quot;requesthehe&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;request&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">c:set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:set</span> <span class="attr">var</span>=<span class="string">&quot;key&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sessionhehe&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;session&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">c:set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:set</span> <span class="attr">var</span>=<span class="string">&quot;key&quot;</span> <span class="attr">value</span>=<span class="string">&quot;applicationhehe&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;application&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">c:set</span>&gt;</span></span><br><span class="line"></span><br><span class="line">pageScope: $&#123;pageScope.key &#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">requestScope:$&#123;requestScope.key &#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">sessionScope: $&#123;sessionScope.key &#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">applicationScope: $&#123;applicationScope.key &#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、c-remove-移除域中指定的属性值"><a href="#3、c-remove-移除域中指定的属性值" class="headerlink" title="3、c:remove  移除域中指定的属性值"></a>3、c:remove  移除域中指定的属性值</h4><pre><code>request.removeAttribute(&quot;key&quot;);var:要移除的属性的键scope:如果不指定，默认全域移除[所有域中的指定键对应的值都会移除]</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">c:remove</span> <span class="attr">var</span>=<span class="string">&quot;key&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;session&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>c:remove<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">pageScope: $&#123;pageScope.key &#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">requestScope:$&#123;requestScope.key &#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">sessionScope: $&#123;sessionScope.key &#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">applicationScope: $&#123;applicationScope.key &#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><strong>条件一般是使用el表达式判断后得到一个布尔类型的结果进行使用</strong></p><h4 id="4、-c-if-if-boolean-条件-代码块-（就是java中学习的if-else-语句）"><a href="#4、-c-if-if-boolean-条件-代码块-（就是java中学习的if-else-语句）" class="headerlink" title="==4、 c:if      if(boolean 条件){//代码块}（就是java中学习的if  else 语句）=="></a>==<strong>4、 c:if      if(boolean 条件){//代码块}（就是java中学习的if  else 语句）</strong>==</h4><pre><code>作用：相当于java中单个的if语句test:  if语句执行的条件双标签的内部就是控制的要执行的代码块如果条件结构复杂，一般不适用单个的if语句，多个if之间没有直接的互斥关系</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 判断用户提交的请求参数score是否&gt;=60   --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;param.score&gt;=60 &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>恭喜你及格了...<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;param.score&lt;60 &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>恭喜你不及格...<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5、c-choose-在页面中创建一个if-else的语句结构"><a href="#5、c-choose-在页面中创建一个if-else的语句结构" class="headerlink" title="==5、c:choose  : 在页面中创建一个if-else的语句结构=="></a><strong>==5、c:choose  : 在页面中创建一个if-else的语句结构==</strong></h4><pre><code>c:when：  相当于  if  或 else ifc:otherwise: 相当于 else注意：1、choose内只能有when和otherwise子标签组成，如果需要内部注释，只能使用jsp注释2、choose中可以有多个when语句，但是如果条件有包含关系，范围小的需要在上面3、othserwise 一般最多使用一个，在条件的最后使用4、when和otherwise只能当做choose的子标签使用，when和otherwise内可以随意写</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 判断用户提交的age参数，如果&gt;40 输出     如果&gt;30  如果&gt;18  其他 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:choose</span>&gt;</span></span><br><span class="line">    &lt;%-- 开始了判断 --%&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;param.age&gt;40 &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;param.age&gt;=90 &#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>人生90古来稀...<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;param.age&gt;=70 &#125;&quot;</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">h3</span>&gt;</span>人生70古来也稀...<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- hehe --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你的路已经走了一半了...<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">c:choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;param.age&gt;30 &#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你的路已经快。。走了一半了...<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;param.age&gt;18 &#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>那就是我...<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你还嫩着呢....<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:choose</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6、c-forEach-相当于java中的for循环"><a href="#6、c-forEach-相当于java中的for循环" class="headerlink" title="==6、c:forEach : 相当于java中的for循环=="></a><strong>==6、c:forEach : 相当于java中的for循环==</strong></h4><pre><code>如果遍历一组数：相当于普通for[  for(int i=1;i&lt;=5;i++)&#123;//代码块   i &#125;   ]如果遍历集合：相当于增强for[ for(Object obj:list)&#123;//代码块&#125; ]--&gt;&lt;!-- 6。1  遍历一组数begin：遍历的起始索引值   不能小于0end：遍历的结束索引值step：步进 ，默认1var: 如果在遍历的代码块中需要使用正在遍历的索引值，可以设置var属性，标签默认会将正在遍历的索引值存到pageContext域中，键就是var的值varStatus:迭代项的状态变量名，可以获取迭代项的相关状态标签遍历结束后会自动移除域中var对应的属性</code></pre><p><strong>==应用：生成页码==</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">begin</span>=<span class="string">&quot;1&quot;</span> <span class="attr">end</span>=<span class="string">&quot;5&quot;</span> <span class="attr">var</span>=<span class="string">&quot;index&quot;</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 每次遍历执行的代码块 --&gt;</span></span><br><span class="line">    &lt;%-- <span class="tag">&lt;<span class="name">h5</span>&gt;</span>hehe + $&#123;pageScope.index &#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span> --%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;pageServlet?pageNumber=$&#123;index &#125;&quot;</span>&gt;</span>$&#123;index &#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-2-遍历list"><a href="#6-2-遍历list" class="headerlink" title="6.2 遍历list"></a>6.2 遍历list</h4><pre><code>items:指定要遍历的集合，需要使用EL从域中取出标签会自动根据集合的长度进行遍历var:  标签每次遍历时可以将正在遍历的集合的元素存到pageContext域中，var的值就是属性名</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">   List list = new ArrayList();</span><br><span class="line">   list.add(&quot;tingjie&quot;);</span><br><span class="line">   list.add(&quot;cls&quot;);</span><br><span class="line">   list.add(&quot;zhanglaoshi&quot;);</span><br><span class="line">   list.add(&quot;xiaohu&quot;);</span><br><span class="line">   list.add(&quot;wangyang&quot;);</span><br><span class="line">   request.setAttribute(&quot;list&quot;, list);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;list &#125;&quot;</span> <span class="attr">var</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>$&#123;item &#125;<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-3-遍历map-foreach标签遍历map时，由于map是键值对的结构，每次遍历可以得到键和值"><a href="#6-3-遍历map-foreach标签遍历map时，由于map是键值对的结构，每次遍历可以得到键和值" class="headerlink" title="6.3 遍历map: foreach标签遍历map时，由于map是键值对的结构，每次遍历可以得到键和值"></a>6.3 遍历map: foreach标签遍历map时，由于map是键值对的结构，每次遍历可以得到键和值</h4><pre><code>标签会将正在遍历元素的键和值封装为一个对象，如果设置了var属性，就会存到pageContext域中封装的对象有两个属性： key , value开发中一般不会直接遍历map，将map的值获取进行遍历了解：foreach标签在遍历开始时会创建一个状态对象，用来记录正在遍历的状态，随着遍历刷新状态值varStatus:  标签会将正在遍历的对象存到pageContext域中，varStatus的值会作为键  状态包括：  当前遍历的元素是不是第一个、是不是最后一个、已经遍历了几个元素、当前元素的索引...</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">   Map map = new HashMap();</span><br><span class="line">   map.put(&quot;t1&quot;, &quot;val1&quot;);</span><br><span class="line">   map.put(&quot;t2&quot;, &quot;val2&quot;);</span><br><span class="line">   map.put(&quot;t3&quot;, &quot;val3&quot;);</span><br><span class="line">   request.setAttribute(&quot;map&quot;, map);</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;requestScope.map &#125;&quot;</span> <span class="attr">var</span>=<span class="string">&quot;item&quot;</span> <span class="attr">varStatus</span>=<span class="string">&quot;vs&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;vs.first &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h5</span> <span class="attr">style</span>=<span class="string">&quot;background-color: red;&quot;</span>&gt;</span>$&#123;item.key &#125; --&gt;$&#123;item.value &#125;--&gt;索引：$&#123;vs.index &#125;-&gt;数量：$&#123;vs.count &#125;-&gt;是否第一个：$&#123;vs.first &#125;-&gt;是否最后一个：$&#123;vs.last &#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;vs.last &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span> <span class="attr">style</span>=<span class="string">&quot;background-color: green;&quot;</span>&gt;</span>$&#123;item.key &#125; --&gt;$&#123;item.value &#125;--&gt;索引：$&#123;vs.index &#125;-&gt;数量：$&#123;vs.count &#125;-&gt;是否第一个：$&#123;vs.first &#125;-&gt;是否最后一个：$&#123;vs.last &#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="总结：主要的作用"><a href="#总结：主要的作用" class="headerlink" title="总结：主要的作用"></a>总结：主要的作用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">c:out</span><br><span class="line">c:set</span><br><span class="line">c:remove</span><br><span class="line">c:if  重点</span><br><span class="line">c:choose-c:when-c:otherwise  重点</span><br><span class="line">c:forEach   重点</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c:redirect</span><br><span class="line">&lt;!-- 重定向的路径由浏览器解析</span><br><span class="line">重定向标签由jsp引擎翻译，绝对路径由服务器先解析，会自动在地址前追加项目名</span><br><span class="line">jsp所有的技术中[inclue/转发动作标签/重定向标签/动态包含标签]  如果使用了绝对路径都是由服务器解析</span><br><span class="line">--&gt;</span><br><span class="line">&lt;c:redirect url=&quot;/jsp01.jsp&quot;&gt;&lt;/c:redirect&gt;</span><br><span class="line"></span><br><span class="line">函数标签库：function</span><br><span class="line">处理字符串的</span><br><span class="line">必须在EL内使用</span><br><span class="line">在el中调用方法处理字符串后，el会将结果输出到页面中显示</span><br><span class="line">$&#123;fn:replace(&quot;jintiantianqizhenhao&quot; , &quot;tian&quot; ,&quot;WAN&quot;) &#125;</span><br></pre></td></tr></table></figure><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page import=&quot;java.util.ArrayList&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;javaweb.user.User&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;java.util.Date&quot; %&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jstldemo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</span><br><span class="line"> </span><br><span class="line">&lt;%</span><br><span class="line">    ArrayList list = new ArrayList();</span><br><span class="line">    list.add(new User(&quot;湛山&quot;, &quot;13&quot;, new Date()));</span><br><span class="line">    list.add(new User(&quot;王五&quot;, &quot;16&quot;, new Date()));</span><br><span class="line">    list.add(new User(&quot;李色&quot;, &quot;19&quot;, new Date()));</span><br><span class="line">    request.setAttribute(&quot;list&quot;, list);</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">border</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>排序<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>录入日期<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;list&#125;&quot;</span> <span class="attr">var</span>=<span class="string">&quot;user&quot;</span> <span class="attr">varStatus</span>=<span class="string">&quot;stat&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;stat.count % 2 ==0&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;aqua&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;stat.count&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.age&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.birstr&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;stat.count % 2 !=0&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#008b8b&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;stat.count&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.age&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.birstr&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281228105.png" alt="img"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">Person p = new Person();</span><br><span class="line">Address address = new Address();</span><br><span class="line">address.setCity(&quot;浙江&quot;);//Adress类中有个私有String属性为city</span><br><span class="line">p.setName(&quot;mike&quot;);//Person类中有私有String属性为name</span><br><span class="line">p.setAddress(address);//Person类中有私有Adress属性为address</span><br><span class="line">session.setAttribute(&quot;person&quot;, p);//存入sessionScope</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;person.name&#125;<span class="comment">&lt;!-- 从WEB域中找到键值为person的对象，然后再person对象中找到name属性 --&gt;</span></span><br><span class="line">$&#123;person.address.city&#125;</span><br><span class="line">    </span><br><span class="line">$&#123;person[&#x27;name&#x27;]&#125;<span class="comment">&lt;!-- 也可以用[]方式 --&gt;</span></span><br><span class="line">$&#123;person[&#x27;address&#x27;][&#x27;city&#x27;]&#125;</span><br></pre></td></tr></table></figure><p>**除了用 **.**方式获得对象的属性，也可以用 **[ ]**方式，当然遇到键值名字中有 **-**的，如mike-abc，或者key值为数字开头，则只能用 **[ ]<strong>方式。</strong></p>]]></content>
      
      
      <categories>
          
          <category> EL、JSTL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EL、JSTL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学成在线案例</title>
      <link href="/archives/a31f0360.html"/>
      <url>/archives/a31f0360.html</url>
      
        <content type="html"><![CDATA[<h1 id="学成在线案例"><a href="#学成在线案例" class="headerlink" title="学成在线案例"></a>学成在线案例</h1><h3 id="学成在线页面制作"><a href="#学成在线页面制作" class="headerlink" title="学成在线页面制作"></a>学成在线页面制作</h3><p>学成在线，是典型的企业级网站。</p><p>学习学成网的目的，是为了整体感知企业级网站布局流程，带着大家复习以前的知识。</p><h3 id="前期准备工作"><a href="#前期准备工作" class="headerlink" title="前期准备工作"></a>前期准备工作</h3><p>先把我们的前期准备工作做好， 我们本次采取结构与样式相分离思想。</p><ol><li>创建 study 目录文件夹 (用于存放我们这个页面的相关内容)。</li><li>用vscode打开study目录文件夹.</li><li>study 目录内新建 images 文件夹，用于保存图片。</li><li>新建首页文件 index.html（以后我们的网站<strong>首页</strong>统一命名规定为 <strong>index.html</strong> )。</li><li>新建 style.css 样式文件。我们本次采用外链样式表。</li><li>将样式引入到我们的 HTML 页面文件中。</li><li>样式表写入清除内外边距的样式，来检测样式表是否引入成功。</li></ol><h3 id="页面布局整体思路"><a href="#页面布局整体思路" class="headerlink" title="页面布局整体思路"></a>页面布局整体思路</h3><p>为了提高网页制作的效率，布局时通常有以下的整体思路，具体如下：</p><p> 1.必须确定页面的<strong>版心</strong>（可视区），我们<strong>测量</strong>可得知。</p><p> 2.分析页面中的行模块，以及每个行模块中的列模块。其实页面布局第一准则.</p><p> 3.一行中的列模块经常浮动布局, 先确定每个列的大小,之后确定列的位置. 页面布局第二准则</p><p> 4.制作 HTML 结构。我们还是遵循，先有结构，后有样式的原则。结构永远最重要.</p><p> 5.所以, 先理清楚<strong>布局结构</strong>,再写代码尤为重要. 这需要我们多写多积累.</p><h3 id="页面制作"><a href="#页面制作" class="headerlink" title="页面制作"></a>页面制作</h3><p><strong>确定版心</strong>：</p><p> 这个页面的版心是 1200像素 ，每个版心都要水平居中对齐，所以，我们可以定义版心为公共类：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="header头部制作"><a href="#header头部制作" class="headerlink" title="header头部制作"></a>header头部制作</h4><p><strong>结构图如下：</strong></p><p><img src="C:/Users/LEGION/AppData/Roaming/Typora/typora-user-images/image-20230114123844173.png" alt="image-20230114123844173"></p><ul><li>1号是版心盒子 <strong>header</strong> 1200 * 42 的盒子水平居中对齐, 上下给一个margin值就好了。</li><li>版心盒子 里面包含 2号盒子 <strong>logo</strong> 图标</li><li>版心盒子 里面包含 3号盒子 <strong>nav</strong> 导航栏</li><li>版心盒子 里面包含 4号盒子 <strong>search</strong> 搜索框</li><li>版心盒子 里面包含 5号盒子 <strong>user</strong> 个人信息</li><li>注意，要求里面的 <strong>4个子盒子 必须都浮动</strong></li></ul><p><strong>导航栏注意点:</strong></p><p>==实际开发中，<strong>重要的导航栏</strong>，我们不会直接用链接a ，而是<strong>用 li 包含链接(li+a)的做法</strong>==</p><p> 1.li+a 语义更清晰，一看这就是有条理的列表型内容。</p><p> 2.如果直接用a，搜索引擎容易辨别为有堆砌关键字嫌疑（故意堆砌关键字容易被搜索引擎有降权的风险），从而影响网站排名</p><p><strong>注意:</strong></p><p> 1.让导航栏一行显示,<strong>给 li 加浮动, 因为 li 是块级元素, 需要一行显示.</strong></p><p> 2.这个nav导航栏可以不给宽度,将来可以继续添加其余文字</p><p> <strong>3.因为导航栏里面文字不一样多,所以最好给链接 a 左右padding 撑开盒子,而不是指定宽度</strong></p><h5 id="4号盒子search的细节："><a href="#4号盒子search的细节：" class="headerlink" title="4号盒子search的细节："></a><strong>4号盒子search的细节：</strong></h5><p> search 搜索框的意思: 一个 search 大盒子里面包含 2个 表单</p><p><img src="C:/Users/LEGION/AppData/Roaming/Typora/typora-user-images/image-20230115003917772.png" alt="image-20230115003917772"></p><p> 技巧：input和button都，属于行内块元素，会有缝隙，使用浮动，可以去缝隙。</p><h4 id="banner制作"><a href="#banner制作" class="headerlink" title="banner制作"></a>banner制作</h4><p>结构图如下：</p><p><img src="C:/Users/LEGION/AppData/Roaming/Typora/typora-user-images/image-20230116002105225.png" alt="image-20230116002105225"></p><ul><li>1号盒子是通栏的大盒子<strong>banner</strong>， 不给宽度，给高度，给一个蓝色背景。</li><li>2号盒子是版心 <strong>w</strong>， 要水平居中对齐。</li><li>3号盒子版心内，左对齐 <strong>subnav</strong> 侧导航栏。</li><li>4号盒子版心内，右对齐 <strong>course</strong> 课程。</li></ul><h5 id="3-4-2-1-subnav-侧导航栏-左侧的"><a href="#3-4-2-1-subnav-侧导航栏-左侧的" class="headerlink" title="3.4.2.1 subnav 侧导航栏 (左侧的)"></a>3.4.2.1 subnav 侧导航栏 (左侧的)</h5><img src="C:/Users/LEGION/AppData/Roaming/Typora/typora-user-images/image-20230116002807959.png" alt="image-20230116002807959" style="zoom:67%;" /><ul><li>subnav 盒子 背景色 黑色半透明</li><li>重要的导航栏，li 包 a ，行高45px</li><li>a里面包含文字和span，span右浮动</li><li>当鼠标经过a ，a里面的内容（文字和span）变蓝色</li></ul><h5 id="3-4-2-2-course课程表模块-右侧的"><a href="#3-4-2-2-course课程表模块-右侧的" class="headerlink" title="3.4.2.2 course课程表模块 (右侧的)"></a>3.4.2.2 course课程表模块 (右侧的)</h5><p>结构图如下：</p><img src="C:/Users/LEGION/AppData/Roaming/Typora/typora-user-images/image-20230116002857845.png" alt="image-20230116002857845" style="zoom: 80%;" /><ul><li>1号盒子 是 228 * 300 的盒子 右浮动 ==<strong>注意 浮动的元素 不会有外边距塌陷的问题</strong>==</li><li>1号盒子内 分为 上下 两个 子盒子</li><li>2号子盒子是 上部分 我们命名为 course-hd (hd 是 head 的简写 头部的意思，我们经常用)</li><li>3号子盒子是 下部分 我们命名为 course-bd (bd 是 body 的简写 主体的意思，我们经常用)</li></ul><h4 id="3-4-3-精品推荐小模块"><a href="#3-4-3-精品推荐小模块" class="headerlink" title="3.4.3. 精品推荐小模块"></a>3.4.3. 精品推荐小模块</h4><p>结构图如下：</p><p><img src="C:/Users/LEGION/AppData/Roaming/Typora/typora-user-images/image-20230119160130221.png" alt="image-20230119160130221"></p><ul><li><strong>复习点： 因为里面三个盒子都要垂直居中，我们利用 继承性，给 最大的盒子 一个垂直居中的代码就好了，还记得 那些 样式可以继承吗？？？ font- line- text- color</strong></li><li>大盒子水平居中 goods 精品 ，注意此处有个盒子阴影</li><li>1号盒子是标题 H3 左侧浮动</li><li>2号盒子 里面放链接 左侧浮动 goods-item 距离可以控制链接的 左右外边距（注意行内元素只给左右内外边距）</li><li>3号盒子 右浮动 mod 修改</li></ul><h4 id="3-4-4-精品推荐大模块"><a href="#3-4-4-精品推荐大模块" class="headerlink" title="3.4.4. 精品推荐大模块"></a>3.4.4. 精品推荐大模块</h4><p>结构图如下：</p><p><img src="C:/Users/LEGION/AppData/Roaming/Typora/typora-user-images/image-20230119160720666.png" alt="image-20230119160720666"></p><ul><li>1号盒子为最大的盒子 <strong>box</strong> 版心水平居中对齐</li><li>2号盒子为上面部分 <strong>box-hd</strong> – 里面 左侧标题H3 左浮动 右侧 链接 a 右浮动</li><li>3号盒子为底下部分 <strong>box-bd</strong> — 里面是无序列表 有 10个 小li 组成</li><li>小li 外边距的问题， 这里有个小技巧。 给box-hd 宽度为 1215 就可以一行装开5个 li了</li><li>复习点：我们用到清除浮动，因为 box-hd 里面的盒子个数不一定是多少，所以我们就不给高度了，但是里面的盒子浮动会影响下面的布局，因此需要清除浮动。</li></ul><h4 id="3-4-5-底部模块制作"><a href="#3-4-5-底部模块制作" class="headerlink" title="3.4.5. 底部模块制作"></a>3.4.5. 底部模块制作</h4><p>结构图如下：</p><p><img src="C:/Users/LEGION/AppData/Roaming/Typora/typora-user-images/image-20230119161622803.png" alt="image-20230119161622803"></p><ul><li>1号盒子通栏大盒子 底部 <strong>footer</strong> 给高度 底色是白色</li><li>2号盒子版心水平居中</li><li>3号盒子版权 <strong>copyright</strong> 左对齐</li><li>4号盒子 链接组 <strong>links</strong> 右对齐</li></ul>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS选择器</title>
      <link href="/archives/b6981f1b.html"/>
      <url>/archives/b6981f1b.html</url>
      
        <content type="html"><![CDATA[<h1 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h1><p><strong>用id还是用class？</strong></p><p><strong>尽可能的用class，除非极特殊的情况可以用id。</strong></p><p><strong>原因：id是js用的。也就是说，js要通过id属性得到标签，所以css层面尽量不用id，要不然js就很别扭。另一层面，我们会认为一个有id的元素，有动态效果。</strong></p><h5 id="我们记住这句话：类上样式，id上行为。意思是说，class属性交给css使用，id属性交给js使用。"><a href="#我们记住这句话：类上样式，id上行为。意思是说，class属性交给css使用，id属性交给js使用。" class="headerlink" title="我们记住这句话：类上样式，id上行为。意思是说，class属性交给css使用，id属性交给js使用。"></a>我们记住这句话：<strong>类上样式，id上行为</strong>。意思是说，<code>class</code>属性交给css使用，<code>id</code>属性交给js使用。</h5><h2 id="一、属性选择器"><a href="#一、属性选择器" class="headerlink" title="一、属性选择器"></a>一、属性选择器</h2><h3 id="1-E-att-value-属性选择器"><a href="#1-E-att-value-属性选择器" class="headerlink" title="1 .E[att^=value]属性选择器"></a>1 .E[att^=value]属性选择器</h3><p>表示p标记中所有的id属性值为”one”字符串 ==<strong>开头</strong>==的元素被选中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;属性选择器<span class="number">1</span> ^=&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">text-indent</span>:<span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[id^=<span class="string">&quot;one&quot;</span>]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:pink;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;one&quot;&gt;为了看日出，我时常早起，那时天还没亮，周围非常清净，船上只有机器的声音&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;two&quot;&gt;天空还是一篇蓝，颜色很浅，转眼间天边出现了一道红霞，慢慢的在扩大他的范围，加强他的亮光&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;one1&quot;&gt;果然一会二，在那个地方出现了太阳的小半边脸，红是真红，却没有亮光，这个太阳好像负着重荷是的一步步慢慢努力上升。到最后终于突破了云霄，完全跳出来海面颜色红的可爱&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;two1&quot;&gt;有时太阳走进了云端中，他的光线从云里射下来，直射到水面上。这时候要分辨那里是水，那里是天，到也不容易，我一眼就看到了灿烂的亮光。&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281202821.png" alt="image.png"></p><h3 id="2-E-att-value-属性选择器"><a href="#2-E-att-value-属性选择器" class="headerlink" title="2 .E[att$ = value]属性选择器"></a>2 .E[att$ = value]属性选择器</h3><p><strong>后缀</strong>为 字符串的 被选中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;属性选择器<span class="number">2</span> ^=&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">text-indent</span>:<span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[id$=<span class="string">&quot;main&quot;</span>]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:<span class="number">#36C</span>;</span><br><span class="line"><span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;old1&quot;&gt;盼望着，盼望着，春天来了，春天的脚步进了&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;old2&quot;&gt;小草偷偷的从地理钻出来，嫩嫩的，绿绿的。院子里，田野里，瞧去，一大片一大片满是的。&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;oldmain&quot;&gt;桃树，杏树，梨树，你不让我，我不让你，都开满了花赶趟儿。红的像火，粉的向下，白的香雪，花里带着甜味儿，闭了眼，书上仿佛已经满是桃儿，星儿，梨儿。&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;newmain&quot;。&gt;吹面不寒杨柳风，不错的，像母亲的手抚摸着你，风力带着新番的泥土的气息，混着香草味二，还有各种花的香。&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281202855.png" alt="image.png"></p><h3 id="3-E-att-value-属性选择器"><a href="#3-E-att-value-属性选择器" class="headerlink" title="3.E[att*=value] 属性选择器"></a>3.E[att*=value] 属性选择器</h3><p>注意:[id*=”demo”] 页面中所有元素 <strong>含有该字符串</strong>的 被选中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;属性选择器<span class="number">2</span> ^=&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[id*=<span class="string">&quot;demo&quot;</span>]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:<span class="number">#F0F</span>;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;mian1&quot;&gt;盼望着，盼望着，春天来了，春天的脚步进了&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;newdemo&quot;&gt;小草偷偷的从地理钻出来，嫩嫩的，绿绿的。院子里，田野里，瞧去，一大片一大片满是的。&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;olddemo&quot;&gt;桃树，杏树，梨树，你不让我，我不让你，都开满了花赶趟儿。红的像火，粉的向下，白的香雪，花里带着甜味儿，闭了眼，书上仿佛已经满是桃儿，星儿，梨儿。&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;demo1&quot;。&gt;吹面不寒杨柳风，不错的，像母亲的手抚摸着你，风力带着新番的泥土的气息，混着香草味二，还有各种花的香。&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281202282.png" alt="image.png"></p><h2 id="二、关系选择器"><a href="#二、关系选择器" class="headerlink" title="二、关系选择器"></a>二、关系选择器</h2><h3 id="1-子代选择器-（与后代选择器区分）"><a href="#1-子代选择器-（与后代选择器区分）" class="headerlink" title="1.子代选择器***（与后代选择器区分）"></a>1.子代选择器***（与后代选择器区分）</h3><p>(我是爸爸的子代，是爷爷的后代。)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;属性选择器<span class="number">2</span> ^=&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="comment">/*p strong&#123;</span></span><br><span class="line"><span class="comment">color:pink;</span></span><br><span class="line"><span class="comment">&#125;  </span></span><br><span class="line"><span class="comment">后代选择器  都会变成粉色</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">p</span>&gt;<span class="selector-tag">strong</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:purple;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 子代选择器:  很重要变紫，  计算机工程学院 不变 */</span></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;这个知识点&lt;<span class="selector-tag">strong</span>&gt;很重要&lt;/<span class="selector-tag">strong</span>&gt;&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;青岛城市学院&lt;<span class="selector-tag">em</span>&gt;&lt;<span class="selector-tag">strong</span>&gt;计算机工程学院&lt;/<span class="selector-tag">strong</span>&gt;&lt;/<span class="selector-tag">em</span>&gt;&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="2-兄弟选择器"><a href="#2-兄弟选择器" class="headerlink" title="2.兄弟选择器"></a>2.兄弟选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;兄弟选择器=&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="comment">/* 临近兄弟 */</span></span><br><span class="line"><span class="selector-tag">h2</span>+<span class="selector-tag">p</span>&#123;  <span class="comment">/*h2元素后面紧挨着的第一个兄弟。   只有李白乘舟将欲变红  */</span></span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*普通兄弟*/</span></span><br><span class="line"><span class="selector-tag">h2</span>~<span class="selector-tag">p</span>&#123;  <span class="comment">/*全都变红*/</span></span><br><span class="line"><span class="attribute">color</span>:pink;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;《赠汪伦》&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;李白乘舟将欲行,&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;忽闻岸上踏歌声。&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;桃花潭水深千尺，&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;不及汪伦送我情。&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="三、结构化伪类选择器"><a href="#三、结构化伪类选择器" class="headerlink" title="三、结构化伪类选择器"></a>三、结构化伪类选择器</h2><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>根据不同的状态显示不同的样式，一般多用于a 标签</p><p>四种状态：</p><ul><li>:link 未访问的链接</li><li>:visited 已访问的链接</li><li>:hover 鼠标悬浮到连接上，即移动在连接上</li><li>:active 选定的链接，被激活</li><li>focus（聚焦，点击某个文本框后输入文字，可以定义文本框和文字的属性）：是某个标签获得焦点的时候（比如某个输入框获得焦点）</li></ul><p>注：默认超链接为：蓝色、下划线</p><p><code>a&#123;&#125;</code>和<code>a:link&#123;&#125;</code>的区别：</p><ul><li><code>a&#123;&#125;</code>定义的样式针对所有的超链接(包括锚点)</li><li><code>a:link&#123;&#125;</code>定义的样式针对所有写了href属性的超链接**(不包括锚点)**</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;伪类选择器&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="comment">/*a:link&#123;</span></span><br><span class="line"><span class="comment">font-size: 12px;</span></span><br><span class="line"><span class="comment">color:black;</span></span><br><span class="line"><span class="comment">text-decoration: none;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">a:visited&#123;</span></span><br><span class="line"><span class="comment">font-size: 15px;</span></span><br><span class="line"><span class="comment">color:;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">a:hover&#123;</span></span><br><span class="line"><span class="comment">font-size: 20px;</span></span><br><span class="line"><span class="comment">color:blue;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">a:active&#123;</span></span><br><span class="line"><span class="comment">font-size: 40px;</span></span><br><span class="line"><span class="comment">color:green;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:<span class="number">#666666</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line"><span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:<span class="number">#ff7300</span>;</span><br><span class="line"><span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*普通的标签也可以使用伪类选择器*/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;复杂选择器<span class="selector-class">.html</span>&quot;&gt;复杂选择器<span class="selector-class">.html</span>&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;CSS从入门到精通！&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281201735.gif" alt="伪类选择器.gif"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;Generator&quot; <span class="attribute">content</span>=&quot;EditPlus®&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;Author&quot; <span class="attribute">content</span>=&quot;&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;Keywords&quot; <span class="attribute">content</span>=&quot;&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;Description&quot; <span class="attribute">content</span>=&quot;&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    <span class="comment">/*整个表格的样式*/</span></span><br><span class="line">    <span class="selector-tag">table</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span><br><span class="line">        <span class="comment">/*border-collapse属性：对表格的线进行折叠*/</span></span><br><span class="line">        <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*鼠标悬停时，让当前行显示#868686这种灰色*/</span></span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#868686</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*每个单元格的样式*/</span></span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">td</span>&#123;</span><br><span class="line">        <span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line"> &lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">table</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">tr</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">tr</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">td</span>&gt;&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">tr</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">table</span>&gt;</span><br><span class="line"> &lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281201568.png" alt="img"></p><h3 id="root选择器"><a href="#root选择器" class="headerlink" title=":root选择器:"></a>:root选择器:</h3><p>对所有的页面元素都生效</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;兄弟选择器=&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"> <span class="selector-pseudo">:root</span>&#123;</span><br><span class="line"> <span class="attribute">color</span>:green;</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;你站在桥上看风景&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;看风景的人在楼上看你&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;明月装饰了你的窗子&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;你装饰了别人的梦&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="not选择器"><a href="#not选择器" class="headerlink" title=":not选择器:"></a>:not选择器:</h3><p>让他不使用这个元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;兄弟选择器=&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"> <span class="selector-tag">body</span>  <span class="selector-pseudo">:not</span>(<span class="selector-tag">p</span>)&#123;</span><br><span class="line"> <span class="attribute">color</span>:green;</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;你站在桥上看风景&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;看风景的人在楼上看你&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;明月装饰了你的窗子&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;你装饰了别人的梦&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                      </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="only-child选择器："><a href="#only-child选择器：" class="headerlink" title=":only-child选择器："></a>:only-child选择器：</h3><p>==<strong>li的父级元素中有唯一子元素的。</strong>==</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;兄弟选择器=&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:only-child</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">国内电影</span><br><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;长金湖&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我和我的父辈&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;我和我的祖国&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">    美国电影</span><br><span class="line">    &lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;复仇者联盟&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">    日本动漫</span><br><span class="line">    &lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;火影忍者&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">li</span>&gt;航海王&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line"> &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281201059.png" alt="image.png"></p><h3 id="first-child和last-child："><a href="#first-child和last-child：" class="headerlink" title="first-child和last-child："></a>first-child和last-child：</h3><p>==<strong>p标记的父级元素的第一个孩子是不是p，如果是，选中元素，如果不是拉到</strong>==</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;兄弟选择器=&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-child&#123;</span><br><span class="line"><span class="attribute">color</span>:pink;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">20px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:last-child</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line"><span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*p标记的父级元素的第一个孩子是不是p，如果是，选中元素，如果不是拉到*/</span></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h3</span>&gt;海子&lt;/<span class="selector-tag">h3</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;《面朝大海春暖花开》&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;从明天起做个幸福人&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;喂马劈柴周游世界&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;从明天起关心粮食和蔬菜&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;我有一所房子&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;面朝大海春暖花开&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281201264.png" alt="image.png"></p><h3 id="nth-child和nth-last-child选择器-："><a href="#nth-child和nth-last-child选择器-：" class="headerlink" title="nth-child和nth-last-child选择器 ："></a>nth-child和nth-last-child选择器 ：</h3><p> <strong>last就是从后往前数。</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt; nth-child&#123;&#125;和nth-last-child&#123;&#125;选择器&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line"><span class="attribute">color</span>:pink;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*P标记父级元素的第二个孩子被选中*/</span></span><br><span class="line"><span class="comment">/*如果是p则被选中，不是不选*/</span></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h3</span>&gt;《面朝大海春暖花开》&lt;/<span class="selector-tag">h3</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;海子&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;从明天起做个幸福人&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;喂马劈柴周游世界&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;从明天起关心粮食和蔬菜&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;我有一所房子&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;面朝大海春暖花开&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281201915.png" alt="image.png"></p><h3 id="nth-last-of-type-n-选择器："><a href="#nth-last-of-type-n-选择器：" class="headerlink" title="nth-last-of-type(n)选择器："></a>nth-last-of-type(n)选择器：</h3><p><strong>父类元素对应的子类元素相同类型第二个被选中，倒着数</strong></p><h3 id="target选择器："><a href="#target选择器：" class="headerlink" title="target选择器："></a>target选择器：</h3><p><strong>target会突出显示当前活动的锚</strong></p><p><strong>(点击那个就显示那个活动的锚)</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt; <span class="number">3.11</span> nth-last-of-type(n)选择器&#123;&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:target</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;&lt;<span class="selector-tag">a</span> href=&quot;<span class="selector-id">#one</span>&quot;&gt;跳转到内容<span class="number">1</span>&lt;/<span class="selector-tag">a</span>&gt;&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;&lt;<span class="selector-tag">a</span> href=&quot;<span class="selector-id">#two</span>&quot;&gt;跳转到内容<span class="number">2</span>&lt;/<span class="selector-tag">a</span>&gt;&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;点击上面链接，<span class="selector-pseudo">:target</span>会突出显示当前活动的锚&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class="line">&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class="line">&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class="line">&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;one&quot;&gt;内容<span class="number">1</span>&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;two&quot;&gt;内容<span class="number">2</span>&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="before选择器，after选择器"><a href="#before选择器，after选择器" class="headerlink" title=":before选择器，after选择器:"></a>:before选择器，after选择器:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> 3.11 nth-last-of-type(n)选择器&#123;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">p</span><span class="selector-pseudo">:before</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">content</span>:<span class="string">&quot;刘建辉&quot;</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>:yellow;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-size</span>:<span class="number">24</span>ox;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-family</span>:<span class="string">&quot;楷体&quot;</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-weight</span>:bold;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/*:before,:after的作用是在不更改html结构的前提下插入内容(可以是文本,url,块级元素，行内元素等等。) */</span></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>专注于网页制作，js网页特效，h5移动开发讲解<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>                                                                       </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281201172.png" alt="image.png"></p><h2 id="四、伪元素选择器"><a href="#四、伪元素选择器" class="headerlink" title="四、伪元素选择器"></a>四、伪元素选择器</h2><ul><li>:first-letter 为第一个字符的样式</li><li>:first-line 为第一行添加样式</li><li>:before 在元素内容的最前面添加的内容，需要配合content属性使用</li><li>:after 在元素内容的最后面添加的内容，需要配合content属性使用</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-letter&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-line&#123;</span><br><span class="line"><span class="attribute">background</span>:pink;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line"><span class="attribute">content</span>:<span class="string">&quot;嘿嘿&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line"><span class="attribute">content</span>:<span class="string">&quot;哈哈&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;hello world!&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;</span><br><span class="line">hello world! &lt;br&gt;</span><br><span class="line">welcome <span class="selector-tag">to</span> css!</span><br><span class="line">&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281201762.png" alt="伪元素选择器.png"></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础知识&lt;二&gt;</title>
      <link href="/archives/243ed6bd.html"/>
      <url>/archives/243ed6bd.html</url>
      
        <content type="html"><![CDATA[<h1 id="CSS基础知识-lt-二-gt"><a href="#CSS基础知识-lt-二-gt" class="headerlink" title="CSS基础知识&lt;二&gt;"></a>CSS基础知识&lt;二&gt;</h1><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><p>常见的块元素由<h1>~<h6>、<p>、<div>、<ul>、<ol>、<li>等，其中<strong>div</strong>标签是最典型的块元素。</p><p>块元素的特点</p><ul><li>独占一行</li><li>高度宽度，外边距以及内边距都可以控制</li><li>宽度默认是容器（父级宽度）的100%</li><li><strong>是一个容器及盒子 ，里面可以放行内或者块级元素</strong></li></ul><p>==注意：==</p><ul><li><p>文字类的元素内不能使用块级元素</p></li><li><p>标签主要用于存放文字，因此< p >标签里面不能放块级元素</li><li><p>同理，<h1>~<h6>等都是文字类块级标签，里面也不能放其他块级元素</p></li></ul><h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3><p>常见的行内元素由<a>,<strong>,<b>,<em>,<i>,<del>,<span>等，其在<strong>span</strong>标签是最典型的行内元素，有的地方也将行内元素称为内联元素。</p><p>行内元素的特点：</p><ul><li>相邻行内元素在一行上，一行可以显示多个</li><li>高，宽直接设置是无效的</li><li><strong>默认宽度就是他本身内容的宽度</strong></li><li><strong>行内元素只能容纳文本或者其他行内元素</strong></li></ul><p><strong>==注意：==</strong></p><ul><li><p>链接里面不能再放链接</p></li><li><p>特殊情况链接<a>里面可以放块级元素，但是给<a>转换一下块级模式最安全</p></li></ul><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><p>在行内元素中有几个特殊的标签—–<img/>,<input/>,<td>，他们同时具有块元素和行内元素的特点。</p><p>行内块元素的特点</p><ul><li><p>和相邻行内元素（行内块元素）在一行上，但是它们之间会有空白间隙，一行可以显示多个。（行内块元素特点）</p></li><li><p>默认宽度就是他本身内容的宽度（行内块元素特点） </p></li><li><p>高度，行高，外边距以及内边距都可以控制（块级元素特点）</p></li></ul><h3 id="元素显示模式转换"><a href="#元素显示模式转换" class="headerlink" title="元素显示模式转换"></a>元素显示模式转换</h3><p>特殊情况下，我们需要元素模式的转换，简单理解：一个模式的元素需要另一种模式的特性</p><p>比如想要增加链接<a>的触发范围</p><ul><li><strong>转换为块元素：display:block;</strong></li><li><strong>转换为行内元素：display:inline;</strong></li><li><strong>转换为行内块元素：display:inline-block;</strong></li></ul><h3 id="一个小技巧：单行文字垂直居中"><a href="#一个小技巧：单行文字垂直居中" class="headerlink" title="一个小技巧：单行文字垂直居中"></a>一个小技巧：单行文字垂直居中</h3><p>CSS没有给我们提供文字垂直居中的代码，这里我们可以使用一个小技巧来实现</p><p>解决方案：<strong>让文字的行高等于盒子的高度</strong>，就可以让文字在当前盒子内垂直居中</p><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281229701.png" alt="image-20230112205549174"></p><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>盒子模型：把 HTML 页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。</p><p> CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，它包括：<strong>边框</strong>、<strong>外边距</strong>、<strong>内边距</strong>、和 <strong>实际内容</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281229236.png" alt="image-20230112213941807"></p><h3 id="边框（border）"><a href="#边框（border）" class="headerlink" title="边框（border）"></a>边框（border）</h3><h4 id="边框的使用"><a href="#边框的使用" class="headerlink" title="边框的使用"></a>边框的使用</h4><p>1、border可以设置元素的边框。边框有三部分组成：边框宽度(粗细) 边框样式 边框颜色；</p><p>2、语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span> : border-width || border-style || border-color;   </span><br></pre></td></tr></table></figure><p>边框样式 border-style 可以设置如下值：</p><ul><li>none：没有边框即忽略所有边框的宽度（默认值）</li><li>solid：边框为单实线(最为常用的)</li><li>dashed：边框为虚线</li><li>dotted：边框为点线</li></ul><p>3、边框的合写分写</p><p>边框简写：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red;  <span class="comment">/* 没有顺序 */</span></span><br></pre></td></tr></table></figure><p>边框分开写法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid red;  <span class="comment">/* 只设定上边框， 其余同理 */</span>   </span><br></pre></td></tr></table></figure><h3 id="表格的细线边框"><a href="#表格的细线边框" class="headerlink" title="表格的细线边框"></a>表格的细线边框</h3><p>1、border-collapse 属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。</p><p>2、语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>:collapse; </span><br></pre></td></tr></table></figure><p>collapse 单词是合并的意思</p><p>border-collapse: collapse; 表示相邻边框合并在一起，让表格里面的边框不产生1+1=2的重叠变粗效果。</p><h4 id="边框会影响盒子实际大小"><a href="#边框会影响盒子实际大小" class="headerlink" title="边框会影响盒子实际大小"></a>边框会影响盒子实际大小</h4><p>边框会额外增加盒子的实际大小。因此我们有两种方案解决：</p><ul><li>测量盒子大小的时候,不量边框。</li><li>如果测量的时候包含了边框,则需要 width/height 减去边框宽度</li></ul><h3 id="内边距（padding）"><a href="#内边距（padding）" class="headerlink" title="内边距（padding）"></a>内边距（padding）</h3><h4 id="内边距的使用方式"><a href="#内边距的使用方式" class="headerlink" title="内边距的使用方式"></a>内边距的使用方式</h4><p>1、padding 属性用于设置内边距，即边框与内容之间的距离。</p><p>2、语法：</p><p>合写属性：</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281229604.png" alt="image-20230112223818750"></p><h4 id="内边距会影响盒子实际大小"><a href="#内边距会影响盒子实际大小" class="headerlink" title="内边距会影响盒子实际大小"></a>内边距会影响盒子实际大小</h4><p>1、当我们给盒子指定 padding 值之后，发生了 2 件事情：</p><ol><li>内容和边框有了距离，添加了内边距。</li><li>padding影响了盒子实际大小。</li></ol><p>2、内边距对盒子大小的影响：</p><ul><li>如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子。</li><li>如何盒子本身没有指定width/height属性, 则此时padding不会撑开盒子大小。</li></ul><p>3、解决方案：</p><p> 如果保证盒子跟效果图大小保持一致，则让 width/height 减去多出来的内边距大小即可。</p><h3 id="外边距（margin）"><a href="#外边距（margin）" class="headerlink" title="外边距（margin）"></a>外边距（margin）</h3><h4 id="外边距的使用方式"><a href="#外边距的使用方式" class="headerlink" title="外边距的使用方式"></a>外边距的使用方式</h4><p>margin 属性用于设置外边距，即控制盒子和盒子之间的距离。</p><h4 id="外边距典型应用"><a href="#外边距典型应用" class="headerlink" title="外边距典型应用"></a>外边距典型应用</h4><p>外边距可以让块级盒子水平居中的两个条件：</p><ul><li>盒子必须指定了宽度（width）。</li><li>盒子左右的外边距都设置为 auto 。</li></ul><p>常见的写法，以下三种都可以：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin-left</span>: auto;   <span class="attribute">margin-right</span>: auto;</span><br><span class="line"><span class="attribute">margin</span>: auto;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br></pre></td></tr></table></figure><p><strong>注意：以上方法是让块级元素水平居中，行内元素或者行内块元素水平居中给其父元素添加 text-align:center 即可。</strong></p><h4 id="外边距合并"><a href="#外边距合并" class="headerlink" title="外边距合并"></a>外边距合并</h4><p>使用 margin 定义块元素的垂直外边距时，可能会出现外边距的合并。</p><p>主要有两种情况:</p><p>1、相邻块元素垂直外边距的合并</p><p> 当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距 margin-bottom，下面的元素有上外边距 margin-top ，则他们之间的垂直间距不是 margin-bottom 与 margin-top 之和。取两个值中的较大者这种现象被称为相邻块元素垂直外边距的合并。</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281229825.png" alt="image-20230113172411668"></p><p><strong>解决方案： 尽量只给一个盒子添加 margin 值。</strong></p><p>2、嵌套块元素垂直外边距的塌陷</p><p> 对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281229667.png" alt="image-20230113172737489"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281229041.png" alt="image-20230113172813374"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281229085.png" alt="image-20230113173124880"></p><p>解决方案：</p><ul><li>可以为父元素定义上边框。  border: 1px  solid  transparent;</li><li>可以为父元素定义上内边距。  padding: 1px;</li><li>可以为父元素添加 overflow:hidden。</li></ul><h4 id="清除内外边距"><a href="#清除内外边距" class="headerlink" title="清除内外边距"></a>清除内外边距</h4><p> 网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">   <span class="attribute">padding</span>:<span class="number">0</span>;   <span class="comment">/* 清除内边距 */</span></span><br><span class="line">   <span class="attribute">margin</span>:<span class="number">0</span>;    <span class="comment">/* 清除外边距 */</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>注意：行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距。但是转换为块级和行内块元素就可以了</strong></p><h3 id="其他样式"><a href="#其他样式" class="headerlink" title="其他样式"></a>其他样式</h3><h3 id="1、圆角边框"><a href="#1、圆角边框" class="headerlink" title="1、圆角边框"></a>1、圆角边框</h3><p>在 CSS3 中，新增了圆角边框样式，这样我们的盒子就可以变圆角了。</p><p>border-radius 属性用于设置元素的外边框圆角。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>:length;    </span><br></pre></td></tr></table></figure><ul><li>参数值可以为数值或百分比的形式</li><li>如果是正方形，想要设置为一个圆，把数值修改为高度或者宽度的一半即可，或者直接写为 50%</li><li>该属性是一个简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角</li><li>分开写：border-top-left-radius、border-top-right-radius、border-bottom-right-radius 和border-bottom-left-radius</li><li>兼容性 ie9+ 浏览器支持, 但是不会影响页面布局,可以放心使用</li></ul><h3 id="2、盒子阴影"><a href="#2、盒子阴影" class="headerlink" title="2、盒子阴影"></a>2、盒子阴影</h3><p>CSS3 中新增了盒子阴影，我们可以使用 box-shadow 属性为盒子添加阴影。 语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: h-shadow v-shadow blur spread color inset; </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281229747.png" alt="image-20230113192918630"></p><p><strong>注意：</strong></p><ol><li>默认的是外阴影，但是不可以写这个单词，否则会导致阴影无效、</li><li>盒子阴影不占用空间，不会影响其他盒子排列</li></ol><h3 id="3、文字阴影"><a href="#3、文字阴影" class="headerlink" title="3、文字阴影"></a>3、文字阴影</h3><p>在 CSS3 中，我们可以使用 text-shadow 属性将阴影应用于文本。 语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: h-shadow v-shadow blur color;</span><br></pre></td></tr></table></figure><h2 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h2><h3 id="1、传统网页布局的三种方式"><a href="#1、传统网页布局的三种方式" class="headerlink" title="1、传统网页布局的三种方式"></a>1、传统网页布局的三种方式</h3><p> CSS 提供了三种传统布局方式(简单说,就是盒子如何进行排列顺序)：</p><ul><li><p>普通流（标准流）</p></li><li><p>浮动</p></li><li><p>定位</p><p>这三种布局方式都是用来摆放盒子的，盒子摆放到合适位置，布局自然就完成了。</p></li></ul><p><strong>注意：实际开发中，一个页面基本都包含了这三种布局方式（后面移动端学习新的布局方式） 。</strong></p><h3 id="2、标准流（普通流-文档流）"><a href="#2、标准流（普通流-文档流）" class="headerlink" title="2、标准流（普通流/文档流）"></a>2、标准流（普通流/文档流）</h3><p>所谓的标准流: 就是标签按照规定好默认方式排列</p><ol><li>块级元素会独占一行，从上向下顺序排列。常用元素：div、hr、p、h1~h6、ul、ol、dl、form、table</li><li>行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行。常用元素：span、a、i、em 等</li></ol><p>以上都是标准流布局，我们前面学习的就是标准流，标准流是最基本的布局方式。</p><h3 id="3、为什么需要浮动？"><a href="#3、为什么需要浮动？" class="headerlink" title="3、为什么需要浮动？"></a>3、为什么需要浮动？</h3><ol><li><p>想要让多个div盒子水平排列成一行，可以使用 display:inline-block;但这会让每个盒子相邻产生间隔，这种间隔不是我们想看到的。</p></li><li><p>想要实现两个盒子左右对齐，标准流很难实现。</p></li></ol><p> 总结： 有很多的布局效果，标准流没有办法完成，此时就可以利用浮动完成布局。 因为浮动可以改变元素标签默认的排列方式.</p><p> 浮动最典型的应用：可以让多个块级元素一行内排列显示。</p><p> 网页布局第一准则：<strong>多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动</strong>。</p><h3 id="4、什么是浮动？"><a href="#4、什么是浮动？" class="headerlink" title="4、什么是浮动？"></a>4、什么是浮动？</h3><p> float 属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">float</span>: 属性值; &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281230612.png" alt="image-20230113194616749"></p><h3 id="5、浮动特性"><a href="#5、浮动特性" class="headerlink" title="5、浮动特性"></a>5、浮动特性</h3><p>加了浮动之后的元素,会具有很多特性,需要我们掌握的.</p><p><strong>==1、浮动元素会脱离标准流(脱标：浮动的盒子不再保留原先的位置)==</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281230276.png" alt="image-20230113195050372"></p><p>2、浮动的元素会一行内显示并且元素顶部对齐</p><p>注意：</p><p><strong>浮动的元素是互相贴靠在一起的（==不会有缝隙==），如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐。</strong></p><p>3、浮动的元素会具有<strong>行内块</strong>元素的特性</p><p>==给一个行内元素（span）设置宽高不会显示效果，但给该标签一个浮动，则会具有行内块元素特性，显示宽高以及背景颜色==</p><p><strong>（块级元素特点：如果盒子没有设置宽度，则该盒子宽度与父级元素宽度大小相同</strong></p><p>​    <strong>行内块元素以及行内元素特点：如果盒子没有设置宽度，则该盒子宽度与内容相同。）</strong></p><p>如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动之后，它的大小根据内容来决定。</p><p><strong>浮动元素的大小根据内容来决定</strong></p><p> 浮动的盒子中间是没有缝隙的</p><h3 id="6、浮动元素经常和标准流父级搭配使用"><a href="#6、浮动元素经常和标准流父级搭配使用" class="headerlink" title="6、浮动元素经常和标准流父级搭配使用"></a>6、浮动元素经常和标准流父级搭配使用</h3><p>为了约束浮动元素位置, 我们网页布局一般采取的策略是:</p><p> <strong>先用标准流父元素排列上下位置, 之后内部子元素采取浮动排列左右位置. 符合网页布局第一准则</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281230059.png" alt="image-20230113200711417"></p><h2 id="常见网页布局"><a href="#常见网页布局" class="headerlink" title="常见网页布局"></a>常见网页布局</h2><h3 id="浮动布局注意点"><a href="#浮动布局注意点" class="headerlink" title="浮动布局注意点"></a>浮动布局注意点</h3><p><strong>1、浮动和标准流的父盒子搭配。</strong></p><p><strong>先用标准流的父元素排列上下位置, 之后内部子元素采取浮动排列左右位置</strong></p><p><strong>2、一个元素浮动了，理论上其余的兄弟元素也要浮动。</strong></p><p><strong>一个盒子里面有多个子盒子，如果其中一个盒子浮动了，其他兄弟也应该浮动，以防止引起问题。</strong></p><p><strong>浮动的盒子只会影响浮动盒子后面的标准流,不会影响前面的标准流.</strong></p><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><h3 id="1、为什么需要清除浮动？"><a href="#1、为什么需要清除浮动？" class="headerlink" title="1、为什么需要清除浮动？"></a>1、为什么需要清除浮动？</h3><p> 由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的标准流盒子。</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281230710.png" alt="image-20230113204731389"></p><h3 id="2、清除浮动本质"><a href="#2、清除浮动本质" class="headerlink" title="2、清除浮动本质"></a>2、清除浮动本质</h3><p>清除浮动的本质是清除浮动元素造成的影响：浮动的子标签无法撑开父盒子的高度</p><p>注意：</p><ul><li>如果父盒子本身有高度，则不需要清除浮动</li><li>清除浮动之后，父级就会根据浮动的子盒子自动检测高度。</li><li>父级有了高度，就不会影响下面的标准流了</li></ul><h3 id="3、清除浮动样式"><a href="#3、清除浮动样式" class="headerlink" title="3、清除浮动样式"></a>3、清除浮动样式</h3><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器&#123;<span class="attribute">clear</span>:属性值;&#125; </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281230719.png" alt="image-20230113204914355"></p><p>我们实际工作中， 几乎只用 clear: both;</p><p>清除浮动的策略是: 闭合浮动.</p><h3 id="4、清除浮动的多种方式"><a href="#4、清除浮动的多种方式" class="headerlink" title="4、清除浮动的多种方式"></a>4、清除浮动的多种方式</h3><h4 id="4-1、额外标签法"><a href="#4-1、额外标签法" class="headerlink" title="4.1、额外标签法"></a>4.1、额外标签法</h4><p>额外标签法也称为隔墙法，是 W3C 推荐的做法。</p><p>使用方式：</p><p> 额外标签法会在浮动元素末尾添加一个空的标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如 <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear:both&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>，或者其他标签（如<span class="tag">&lt;<span class="name">br</span> /&gt;</span>等）。</span><br></pre></td></tr></table></figure><p> 优点： 通俗易懂，书写方便</p><p> 缺点： 添加许多无意义的标签，结构化较差</p><p> 注意： 要求这个新的空标签必须是块级元素。</p><p>总结:</p><p> 1、清除浮动本质是?</p><p> 清除浮动的本质是清除浮动元素脱离标准流造成的影响</p><p> 2、清除浮动策略是?</p><p> 闭合浮动. 只让浮动在父盒子内部影响,不影响父盒子外面的其他盒子.</p><p> 3、额外标签法?</p><p> 隔墙法, 就是在最后一个浮动的子元素后面添加一个额外标签, 添加 清除浮动样式.</p><p> 实际工作可能会遇到,但是不常用。</p><h4 id="4-2、父级添加-overflow-属性"><a href="#4-2、父级添加-overflow-属性" class="headerlink" title="4.2、父级添加 overflow 属性"></a>4.2、父级添加 overflow 属性</h4><p>可以给父级添加 overflow 属性，将其属性值设置为 hidden、 auto 或 scroll 。</p><p>例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>:hidden | auto | scroll;</span><br></pre></td></tr></table></figure><p><strong>优点：代码简洁</strong></p><p><strong>缺点：无法显示溢出的部分</strong></p><p><strong>注意：是给父元素添加代码</strong></p><h4 id="4-3、父级添加after伪元素"><a href="#4-3、父级添加after伪元素" class="headerlink" title="4.3、父级添加after伪元素"></a>4.3、父级添加after伪元素</h4><p>:after 方式是额外标签法的升级版。<strong>给父元素添加：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;  </span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>; </span><br><span class="line">  <span class="attribute">display</span>: block; </span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>; </span><br><span class="line">  <span class="attribute">clear</span>: both; </span><br><span class="line">  <span class="attribute">visibility</span>: hidden;  </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;  <span class="comment">/* IE6、7 专有 */</span> </span><br><span class="line">  *zoom: <span class="number">1</span>;</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure><p>优点：没有增加标签，结构更简单</p><p>缺点：照顾低版本浏览器</p><p>代表网站： 百度、淘宝网、网易等</p><h4 id="4-4、父级添加双伪元素"><a href="#4-4、父级添加双伪元素" class="headerlink" title="4.4、父级添加双伪元素"></a>4.4、父级添加双伪元素</h4><p>给父元素添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>:table; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">   *zoom:<span class="number">1</span>;</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure><p>优点：代码更简洁</p><p>缺点：照顾低版本浏览器</p><p>代表网站：小米、腾讯等</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>为什么需要清除浮动？</p><ol><li>父级没高度。</li><li>子盒子浮动了。</li><li>影响下面布局了，我们就应该清除浮动了。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281230774.png" alt="image-20230113205623457"></p><h2 id="CSS属性书写顺序（重点）"><a href="#CSS属性书写顺序（重点）" class="headerlink" title="CSS属性书写顺序（重点）"></a>CSS属性书写顺序（重点）</h2><p><strong>生活中衡量一个人有气质：</strong></p><p> 穿着打扮 举止言行 等等</p><p><strong>编程中如何衡量一个人的代码能力</strong>：</p><p> 规范标准 优雅高质量 等等 一个词形容 专业 从代码中看出是否有经验..</p><p>建议遵循以下顺序：</p><ol><li><strong>布局定位属性</strong>：display / position / float / clear / visibility / overflow（建议 display 第一个写，毕竟关系到模式）</li><li><strong>自身属性</strong>：width / height / margin / padding / border / background</li><li><strong>文本属性</strong>：color / font / text-decoration / text-align / vertical-align / white- space / break-word</li><li><strong>其他属性（CSS3）</strong>：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …</li></ol><p><strong>举例：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">   <span class="attribute">display</span>: block;</span><br><span class="line">   <span class="attribute">position</span>: relative;</span><br><span class="line">   <span class="attribute">float</span>: left;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">font-family</span>: Arial, <span class="string">&#x27;Helvetica Neue&#x27;</span>, Helvetica, sans-serif;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">   <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">   <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="定位-position-介绍"><a href="#定位-position-介绍" class="headerlink" title="定位(position) 介绍"></a>定位(position) 介绍</h2><h3 id="为什么使用定位"><a href="#为什么使用定位" class="headerlink" title="为什么使用定位"></a>为什么使用定位</h3><blockquote><p>我们先来看一个效果，同时思考一下<strong>用标准流或浮动能否实现类似的效果</strong>？</p></blockquote><p><strong>1</strong>： 某个元素可以自由的在一个盒子内移动位置，并且压住其他盒子.</p><p><strong>2</strong>：当我们滚动窗口的时候，盒子是固定屏幕某个位置的。</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281230751.png" alt="image-20230119163058056" style="zoom:67%;" /><blockquote><p>结论<strong>：要实现以上效果，</strong>标准流 或 浮动都无法快速实现</p></blockquote><p>所以：</p><p>1.浮动可以让多个块级盒子一行没有缝隙排列显示， 经常用于横向排列盒子。</p><p>2.定位则是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子。</p><h3 id="定位组成"><a href="#定位组成" class="headerlink" title="定位组成"></a>定位组成</h3><p><strong>定位</strong>：将盒子<strong>定</strong>在某一个位置，所以<strong>定位也是在摆放盒子， 按照定位的方式移动盒子</strong></p><p>定位也是用来布局的，它有两部分组成：</p><blockquote><p><strong>定位 = 定位模式 + 边偏移</strong></p></blockquote><p><strong>定位模式</strong> 用于指定一个元素在文档中的定位方式。<strong>边偏移</strong>则决定了该元素的最终位置。</p><h4 id="边偏移（方位名词）"><a href="#边偏移（方位名词）" class="headerlink" title="边偏移（方位名词）"></a>边偏移（方位名词）</h4><p><strong>边偏移</strong> 就是定位的盒子移动到最终位置。有 top、bottom、left 和 right 4 个属性。</p><table><thead><tr><th>边偏移属性</th><th align="left">示例</th><th>描述</th></tr></thead><tbody><tr><td><code>top</code></td><td align="left"><code>top: 80px</code></td><td><strong>顶端</strong>偏移量，定义元素相对于其父元素<strong>上边线的距离</strong>。</td></tr><tr><td><code>bottom</code></td><td align="left"><code>bottom: 80px</code></td><td><strong>底部</strong>偏移量，定义元素相对于其父元素<strong>下边线的距离</strong>。</td></tr><tr><td><code>left</code></td><td align="left"><code>left: 80px</code></td><td><strong>左侧</strong>偏移量，定义元素相对于其父元素<strong>左边线的距离</strong>。</td></tr><tr><td><code>right</code></td><td align="left"><code>right: 80px</code></td><td><strong>右侧</strong>偏移量，定义元素相对于其父元素<strong>右边线的距离</strong></td></tr></tbody></table><p>定位的盒子有了边偏移才有价值。 一般情况下，凡是有定位地方必定有边偏移。</p><h4 id="定位模式-position"><a href="#定位模式-position" class="headerlink" title="定位模式 (position)"></a>定位模式 (position)</h4><p>在 CSS 中，通过 <code>position</code> 属性定义元素的<strong>定位模式</strong>，语法如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    <span class="attribute">position</span>: 属性值; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定位模式是有不同分类的，在不同情况下，我们用到不同的定位模式。</p><p>定位模式决定元素的定位方式 ，它通过 CSS 的 position 属性来设置，其值可以分为四个：</p><table><thead><tr><th>值</th><th align="center">语义</th></tr></thead><tbody><tr><td><code>static</code></td><td align="center"><strong>静态</strong>定位</td></tr><tr><td><code>relative</code></td><td align="center"><strong>相对</strong>定位</td></tr><tr><td><code>absolute</code></td><td align="center"><strong>绝对</strong>定位</td></tr><tr><td><code>fixed</code></td><td align="center"><strong>固定</strong>定位</td></tr></tbody></table><h3 id="定位模式介绍"><a href="#定位模式介绍" class="headerlink" title="定位模式介绍"></a>定位模式介绍</h3><h4 id="静态定位-static-了解"><a href="#静态定位-static-了解" class="headerlink" title="静态定位(static) - 了解"></a>静态定位(static) - 了解</h4><ul><li><p><strong>静态定位</strong>是元素的<strong>默认</strong>定位方式，<strong>无定位的意思</strong>。它相当于 border 里面的none，静态定位static，不要定位的时候用。</p></li><li><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    position: static; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>静态定位 按照标准流特性摆放位置，它没有边偏移。</p></li><li><p>静态定位在布局时我们几乎不用的</p></li></ul><h4 id="相对定位-relative-重要"><a href="#相对定位-relative-重要" class="headerlink" title="相对定位(relative) - 重要"></a>相对定位(relative) - 重要</h4><ul><li><strong>相对定位</strong>是元素在移动位置的时候，是相对于它自己<strong>原来的位置</strong>来说的（自恋型）。</li><li>语法：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">position: relative; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>相对定位的特点：（务必记住）</p><ul><li><p>1.它是相对于自己原来的位置来移动的（移动位置的时候参照点是自己原来的位置）。</p></li><li><p>2.<strong>原来</strong>在标准流的<strong>位置继续占有</strong>，后面的盒子仍然以标准流的方式对待它。</p><p>因此，<strong>相对定位并没有脱标</strong>。它最典型的应用是给绝对定位当爹的。。。</p></li></ul></li><li><p>效果图：</p></li></ul><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281230350.png" alt="image-20230119163737058" style="zoom:50%;" /><h4 id="绝对定位-absolute-重要"><a href="#绝对定位-absolute-重要" class="headerlink" title="绝对定位(absolute) - 重要"></a>绝对定位(absolute) - 重要</h4><h5 id="绝对定位的介绍"><a href="#绝对定位的介绍" class="headerlink" title="绝对定位的介绍"></a>绝对定位的介绍</h5><ul><li><p><strong>绝对定位</strong>是元素在移动位置的时候，是相对于它<strong>祖先元素</strong>来说的（拼爹型）。</p></li><li><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">position: absolute; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol><li><strong>完全脱标</strong> —— 完全不占位置；</li><li><strong>==父元素没有定位==<strong>，则以</strong>浏览器</strong>为准定位（Document 文档）。</li></ol><ul><li><p><strong>父元素要有定位</strong></p><ul><li>元素将依据最近的已经定位（绝对、固定或相对定位）的父元素（祖先）进行定位。</li></ul></li><li><p><strong>绝对定位的特点总结</strong>：（务必记住）</p><p>1.如果<strong>没有祖先元素</strong>或者<strong>祖先元素没有定位</strong>，则以浏览器为基准定位（Document 文档）。</p><p>2.如果祖先元素有定位（相对、绝对、固定定位），则以最近一级的有定位祖先元素为参考点移动位置。</p><p>3.绝对定位**==不再占有原先的位置==**。所以绝对定位是脱离标准流的。（脱标）</p></li></ul><h5 id="定位口诀-——-子绝父相"><a href="#定位口诀-——-子绝父相" class="headerlink" title="定位口诀 —— 子绝父相"></a>定位口诀 —— 子绝父相</h5><p>弄清楚这个口诀，就明白了绝对定位和相对定位的使用场景。</p><p>这个<strong>“子绝父相”</strong>太重要了，是我们学习定位的<strong>口诀</strong>，是定位中最常用的一种方式这句话的意思是：<strong>子级是绝对定位的话，父级要用相对定位。</strong></p><p>因为绝对定位的盒子是拼爹的，所以要和父级搭配一起来使用。</p><p>①子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子。</p><p>②父盒子需要加定位限制子盒子在父盒子内显示。</p><p>③父盒子布局时，需要占有位置，因此父亲只能是相对定位。</p><p>这就是子绝父相的由来，所以<strong>相对定位经常用来作为绝对定位的父级</strong>。</p><p>总结： <strong>因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位</strong></p><p>当然，子绝父相不是永远不变的，如果父元素不需要占有位置，<strong>子绝父绝</strong>也会遇到。</p><p><strong>疑问</strong>：为什么在布局时，<strong>子级元素</strong>使用<strong>绝对定位</strong>时，<strong>父级元素</strong>就要用<strong>相对定位</strong>呢？</p><p>观察下图，思考一下在布局时，<strong>左右两个方向的箭头图片</strong>以及<strong>父级盒子</strong>的定位方式。</p><p><strong>分析</strong>：</p><ul><li><p><strong>方向箭头</strong>叠加在其他图片上方，应该使用<strong>绝对定位</strong>，因为<strong>绝对定位完全脱标</strong>，完全不占位置。</p></li><li><p><strong>父级盒子</strong>应该使用<strong>相对定位</strong>，因为<strong>相对定位不脱标</strong>，后续盒子仍然以标准流的方式对待它。</p><ul><li>如果父级盒子也使用<strong>绝对定位</strong>，会完全脱标，那么下方的<strong>广告盒子</strong>会上移，这显然不是我们想要的。</li></ul></li></ul><p><strong>结论</strong>：<strong>父级要占有位置，子级要任意摆放</strong>，这就是<strong>子绝父相</strong>的由来。</p><h4 id="固定定位-fixed-重要"><a href="#固定定位-fixed-重要" class="headerlink" title="固定定位(fixed) - 重要"></a>固定定位(fixed) - 重要</h4><ul><li><p><strong>固定定位</strong>是元素<strong>固定于浏览器可视区的位置</strong>。（认死理型） 主要使用场景： 可以在浏览器页面滚动时元素的位置不会改变。</p></li><li><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">position: fixed; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>固定定位的特点：（务必记住）：</p><p>1.以浏览器的可视窗口为参照点移动元素。</p><ul><li>跟父元素没有任何关系</li><li>不随滚动条滚动。</li></ul><p>2.固定定位<strong>不在占有原先的位置</strong>。</p></li><li><p>固定定位也是<strong>脱标</strong>的，其实<strong>固定定位也可以看做是一种特殊的绝对定位</strong>。（认死理型）</p><ul><li><strong>完全脱标</strong>—— 完全不占位置；</li><li>只认浏览器的可视窗口—— <em>浏览器可视窗口 + 边偏移属性</em>  来设置元素的位置；<ul><li>跟父元素没有任何关系；单独使用的</li><li>不随滚动条滚动。</li></ul></li></ul></li></ul><p><strong>提示</strong>：IE 6 等低版本浏览器不支持固定定位。</p><h4 id="粘性定位-sticky-了解"><a href="#粘性定位-sticky-了解" class="headerlink" title="粘性定位(sticky) - 了解"></a>粘性定位(sticky) - 了解</h4><ul><li><p><strong>粘性定位</strong>可以被认为是相对定位和固定定位的混合。 Sticky 粘性的</p></li><li><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    position: sticky; </span><br><span class="line">    top: 10px; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>粘性定位的特点：</p><p>1.以浏览器的可视窗口为参照点移动元素（固定定位特点）</p><p>2.粘性定位占有原先的位置（相对定位特点）</p><p>3.必须添加 top 、left、right、bottom <strong>其中一个</strong>才有效</p><p>跟页面滚动搭配使用。 兼容性较差，IE 不支持。</p></li></ul><h4 id="定位总结"><a href="#定位总结" class="headerlink" title="定位总结"></a>定位总结</h4><table><thead><tr><th><strong>定位模式</strong></th><th><strong>是否脱标</strong></th><th><strong>移动位置</strong></th><th><strong>是否常用</strong></th></tr></thead><tbody><tr><td>static 静态定位</td><td>否</td><td>不能使用边偏移</td><td>很少</td></tr><tr><td><strong>relative 相对定位</strong></td><td><strong>否 (占有位置)</strong></td><td><strong>相对于自身位置移动</strong></td><td><strong>基本单独使用</strong></td></tr><tr><td><strong>absolute绝对定位</strong></td><td><strong>是（不占有位置）</strong></td><td><strong>带有定位的父级</strong></td><td><strong>要和定位父级元素搭配使用</strong></td></tr><tr><td><strong>fixed 固定定位</strong></td><td><strong>是（不占有位置）</strong></td><td><strong>浏览器可视区</strong></td><td><strong>单独使用，不需要父级</strong></td></tr><tr><td>sticky 粘性定位</td><td>否 (占有位置)</td><td>浏览器可视区</td><td>当前阶段少</td></tr></tbody></table><ul><li>一定记住 相对定位、固定定位、绝对定位 两个大的特点： 1. 是否占有位置（脱标否） 2. 以谁为基准点移动位置。</li><li>学习定位重点学会子绝父相。</li><li>注意：</li></ul><ol><li><strong>边偏移</strong>需要和<strong>定位模式</strong>联合使用，<strong>单独使用无效</strong>；</li><li><code>top</code> 和 <code>bottom</code> 不要同时使用；</li><li><code>left</code> 和 <code>right</code> 不要同时使用。</li></ol><h2 id="定位-position-的应用"><a href="#定位-position-的应用" class="headerlink" title="定位(position)的应用"></a>定位(position)的应用</h2><h3 id="固定定位小技巧：-固定在版心左侧位置。"><a href="#固定定位小技巧：-固定在版心左侧位置。" class="headerlink" title="固定定位小技巧： 固定在版心左侧位置。"></a>固定定位小技巧： 固定在版心左侧位置。</h3><p>小算法：</p><p>1.让固定定位的盒子 left: 50%. 走到浏览器可视区（也可以看做版心） 的一半位置。</p><p>2.让固定定位的盒子 margin-left: 版心宽度的一半距离。 多走 版心宽度的一半位置</p><p>就可以让固定定位的盒子<strong>贴着版心右侧对齐</strong>了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.w</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.fixed</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1. 走浏览器宽度的一半 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. 利用margin 走版心盒子宽度的一半距离 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">405px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span>版心盒子 800像素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="堆叠顺序（z-index）"><a href="#堆叠顺序（z-index）" class="headerlink" title="堆叠顺序（z-index）"></a>堆叠顺序（z-index）</h3><ul><li><p>在使用<strong>定位</strong>布局时，可能会<strong>出现盒子重叠的情况</strong>。此时，可以使用 <strong>z-index</strong> 来控制盒子的前后次序 (z轴)</p></li><li><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">z-index: 1; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>z-index</code> 的特性如下：</p><ol><li><strong>属性值</strong>：<strong>正整数</strong>、<strong>负整数</strong>或 <strong>0</strong>，默认值是 0，数值越大，盒子越靠上；</li><li>如果<strong>属性值相同</strong>，则按照书写顺序，<strong>后来居上</strong>；</li><li>数字后面<strong>不能加单位</strong>。</li></ol><p><strong>注意</strong>：<code>z-index</code> 只能应用于<strong>相对定位</strong>、<strong>绝对定位</strong>和<strong>固定定位</strong>的元素，其他<strong>标准流</strong>、<strong>浮动</strong>和<strong>静态定位</strong>无效。</p></li><li><p>应用 <code>z-index</code> 层叠等级属性可以<strong>调整盒子的堆叠顺序</strong>。</p></li></ul><h2 id="定位-position-的拓展"><a href="#定位-position-的拓展" class="headerlink" title="定位(position)的拓展"></a>定位(position)的拓展</h2><h3 id="绝对定位的盒子居中"><a href="#绝对定位的盒子居中" class="headerlink" title="绝对定位的盒子居中"></a>绝对定位的盒子居中</h3><blockquote><p><strong>注意</strong>：加了<strong>绝对定位/固定定位的盒子</strong>不能通过设置 <code>margin: auto</code> 设置<strong>水平居中</strong>。</p><p>但是可以通过以下计算方法实现水平和垂直居中</p></blockquote><ul><li><code>left: 50%;</code>：让<strong>盒子的左侧</strong>移动到<strong>父级元素的水平中心位置</strong>；</li><li><code>margin-left: -100px;</code>：让盒子<strong>向左</strong>移动<strong>自身宽度的一半</strong>。</li></ul><h3 id="定位特殊特性"><a href="#定位特殊特性" class="headerlink" title="定位特殊特性"></a>定位特殊特性</h3><p>绝对定位和固定定位也和浮动类似。</p><p>1.行内元素添加绝对或者固定定位，可以直接设置高度和宽度。</p><p>2.块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。</p><p>前面我们讲过， display 是 显示模式， 可以改变显示模式有以下方式:</p><ul><li>可以用inline-block 转换为行内块</li><li>可以用浮动 float 默认转换为行内块（类似，并不完全一样，因为浮动是脱标的）</li><li>绝对定位和固定定位也和浮动类似， 默认转换的特性 转换为行内块。</li></ul><p>所以说， 一个行内的盒子，如果加了<strong>浮动</strong>、<strong>固定定位</strong>和<strong>绝对定位</strong>，不用转换，就可以给这个盒子直接设置宽度和高度等。</p><h3 id="脱标的盒子不会触发外边距塌陷"><a href="#脱标的盒子不会触发外边距塌陷" class="headerlink" title="脱标的盒子不会触发外边距塌陷"></a>脱标的盒子不会触发外边距塌陷</h3><p>浮动元素、<strong>绝对定位(固定定位）</strong>元素的都不会触发外边距合并的问题。 （我们以前是用padding border overflow解决的）</p><p>也就是说，我们给盒子改为了浮动或者定位，就不会有垂直<strong>外边距合并的问题</strong>了。</p><h3 id="绝对定位（固定定位）会完全压住盒子"><a href="#绝对定位（固定定位）会完全压住盒子" class="headerlink" title="绝对定位（固定定位）会完全压住盒子"></a>绝对定位（固定定位）会完全压住盒子</h3><p>浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281230598.png" alt="image-20230120002240635" style="zoom: 67%;" /><p>但是绝对定位（固定定位） 会压住下面标准流所有的内容。</p><p>浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。 文字会围绕浮动元素</p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基本用法</title>
      <link href="/archives/148080e7.html"/>
      <url>/archives/148080e7.html</url>
      
        <content type="html"><![CDATA[<h1 id="CSS基本用法"><a href="#CSS基本用法" class="headerlink" title="CSS基本用法"></a>CSS基本用法</h1><h2 id="一、CSS简单内容"><a href="#一、CSS简单内容" class="headerlink" title="一、CSS简单内容"></a>一、CSS简单内容</h2><h3 id="1-三种CSS样式"><a href="#1-三种CSS样式" class="headerlink" title="1)三种CSS样式"></a>1)三种CSS样式</h3><h4 id="1-行内CSS样式"><a href="#1-行内CSS样式" class="headerlink" title="1.行内CSS样式"></a>1.行内CSS样式</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--使用标记的style属性，在行内写css样式--&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span> style=&quot;<span class="attribute">color</span>:<span class="number">#F36</span> ;<span class="attribute">font-size</span>:<span class="number">14px</span><span class="string">&quot;&gt;使用CSS修饰二级标题的大小和颜色&lt;/h2&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-内嵌式CSS"><a href="#2-内嵌式CSS" class="headerlink" title="2.内嵌式CSS"></a><strong>2.内嵌式CSS</strong></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">h2</span>&#123;</span><br><span class="line">  <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#3F0</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>:underline;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;内嵌式CSS样式&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;内嵌式，style标记 通常位于head头部中，title标记后&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="3-链入式css样式"><a href="#3-链入式css样式" class="headerlink" title="3.链入式css样式"></a><strong>3.链入式css样式</strong></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/ href=&quot;demo<span class="selector-class">.css</span>&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;链入式css样式&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt; 通过link标记将拓展名为<span class="selector-class">.css</span>的外部样式表文件链接到<span class="selector-tag">HTML</span>文档中&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>文件名</strong>:<strong>demo.css</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"><span class="comment">/* CSS Document */</span></span><br><span class="line"><span class="selector-tag">h2</span>&#123;</span><br><span class="line">  <span class="attribute">text-align</span>:center</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>:yellow;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-选择器"><a href="#2-选择器" class="headerlink" title="2)选择器"></a>2)选择器</h3><h4 id="标记选择器"><a href="#标记选择器" class="headerlink" title="标记选择器"></a><strong>标记选择器</strong></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">h2</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span> : yellow;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span> : green;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>标记选择器<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>所有的p标记都会被控制到<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是第二个p标记<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a><strong>类选择器</strong></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-class">.a</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.b</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.c</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:yellow;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span> class=&quot;<span class="selector-tag">a</span>&quot;&gt;红色二级标题文本&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;<span class="selector-tag">b</span>&quot;&gt;绿色段落<span class="number">1</span>文本&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;c&quot;&gt;黄色段落<span class="number">2</span>文本&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;段落<span class="number">3</span>文本&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a><strong>id选择器</strong></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-id">#bold</span>&#123;</span><br><span class="line"><span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#font24</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#a</span>,<span class="selector-id">#b</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>  id=&quot;bold&quot;&gt;段落<span class="number">1</span>: id=<span class="string">&quot;bold&quot;</span>,设置粗体文字&lt;/p&gt;</span><br><span class="line">&lt;p  id=<span class="string">&quot;font24&quot;</span>&gt;段落<span class="number">2</span>: id=<span class="string">&quot;font24&quot;</span>,设置字号为<span class="number">24px</span>&lt;/p&gt;</span><br><span class="line">&lt;p  id=<span class="string">&quot;a&quot;</span>&gt;id为<span class="number">1</span>&lt;/p&gt;</span><br><span class="line">&lt;p  id=<span class="string">&quot;b&quot;</span>&gt;id为<span class="number">2</span>&lt;/p&gt;</span><br></pre></td></tr></table></figure><h4 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a><strong>通配符选择器</strong></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">*&#123;</span><br><span class="line"><span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line"><span class="comment">/*清除页面默认边距*/</span></span><br><span class="line"><span class="comment">/*通配符选择器常用做法*/</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a><strong>交集选择器</strong></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">h3</span><span class="selector-class">.special</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:<span class="number">#3F3</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;special&quot; &gt;指定了<span class="selector-class">.special</span>类的段落文本(红色)&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h3</span> class=&quot;special&quot;&gt;指定了<span class="selector-class">.special</span>类的标题文本文本(绿色)&lt;/<span class="selector-tag">h3</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">strong</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">strong</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;段落文本,&lt;<span class="selector-tag">strong</span>&gt;嵌套在段落文,本中使用<span class="selector-tag">strong</span>标记加粗的文本(红色)&lt;/<span class="selector-tag">strong</span>&gt;&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">strong</span> class=&quot;blue&quot;&gt;嵌套之外由<span class="selector-tag">strong</span>标记的定义的文本(蓝色)&lt;/<span class="selector-tag">strong</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a><strong>并集选择器</strong></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">h3</span>,<span class="selector-class">.special</span>,<span class="selector-id">#one</span>&#123;</span><br><span class="line"><span class="attribute">text-decoration</span>:underline;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h2</span>&gt;二级标题文本&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h3</span>&gt;三级标题文本,加下划线&lt;/<span class="selector-tag">h3</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;special&quot;&gt;段落<span class="number">1</span>标本本,加下划线&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;段落<span class="number">2</span>普通文本&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;one&quot;&gt;段落<span class="number">3</span>,加下划线&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="3）字体样式属性"><a href="#3）字体样式属性" class="headerlink" title="3）字体样式属性"></a>3）字体样式属性</h3><ul><li><strong>font-size:</strong> 字号大小 (px 像素, em 相当于当前对象内文本的字体尺寸)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>font-family:</strong> 字体</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">font-family</span>:<span class="string">&quot;微软雅黑&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>font-weight:</strong> 字体粗细</li></ul><p>（normal 默认值, bold 粗体, bolder 更粗, lighter 更细, 100~900）</p><ul><li><strong>font-style:</strong> 字体风格</li></ul><p>(normal: 默认值 , italic: 斜体 , oblique 倾斜)</p><ul><li><strong>word-wrap 属性</strong> (normal 只在允许的断字点换行， break-word 在长单词或URL地址内部进行换行)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;无标题文档&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#F00</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.break_word</span>&#123;</span><br><span class="line"><span class="attribute">word-wrap</span>:break-word;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span>&gt;<span class="attribute">word-wrap</span>:normal;&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;网页平面ui设计学院http://icd.itcast.cn/&lt;/p&gt;</span><br><span class="line">&lt;span&gt;word-wrap:break-word;&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;break_word&quot;&gt;网页平面ui设计学院http://icd.itcast.cn/ &lt;/p&gt;</span><br><span class="line">&lt;/body&gt;                                                                      </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281231541.png" alt="image.png"></p><h3 id="4-文本外观属性"><a href="#4-文本外观属性" class="headerlink" title="4)文本外观属性"></a>4)文本外观属性</h3><ul><li>color: 文本颜色</li></ul><p>(预定义颜色,如 red,green 十六进制,如#FF0000 RGB代码, 红色 rgb(255,0,0))</p><ul><li><p>letter-spacing:字间距 (字符与字符之间的空白，允许负值,默认为normal)</p></li><li><p>word-spacing: 单词间距(英文单词之间的间距,允许负值,默认为normal)</p></li><li><p>line-height:行间距(行与行之间的距离， px,em,百分比%)</p></li><li><p>text-transform:文本转换</p></li></ul><p>(none: 不转换，默认 capitalize:首字母大写 uppercase:全部字符转换为大写 lowercase： 全部字符转换为小写)</p><ul><li>text-decoration：文本修饰</li></ul><p>(none: 没有装饰 underline:下划线 overline:上划线 line-through:删除线)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;文本装饰&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">   <span class="selector-class">.a</span>&#123;</span><br><span class="line"><span class="attribute">text-decoration</span>:underline;</span><br><span class="line">&#125;</span><br><span class="line">   <span class="selector-class">.b</span>&#123;</span><br><span class="line"><span class="attribute">text-decoration</span>:overline;</span><br><span class="line">&#125;</span><br><span class="line">   <span class="selector-class">.c</span>&#123;</span><br><span class="line"><span class="attribute">text-decoration</span>:line-through;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="selector-class">.d</span>&#123;</span><br><span class="line"><span class="attribute">text-decoration</span>:underline  line-through;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span> class=&quot;<span class="selector-tag">a</span>&quot;&gt;设置下划线&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span> class=&quot;<span class="selector-tag">b</span>&quot;&gt;设置上划线&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span>  class=&quot;c&quot;&gt;设置删除(line-through)线&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span>  class=&quot;d&quot;&gt;同时设置下划线和删除线&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>text-align:水平对齐方式</li></ul><p>​        (left:左对齐 right:右对齐 center:居中对齐)</p><ul><li><p>text-indent: 首行缩进 (px,em,百分比%)</p></li><li><p>white-space:空白处理 (normal:常规 空格、空行无效,满行自动换行 per: 预留格式 保留空格 nowwrap:空格空行无效，强制文本不能换行，除非遇到换行标记<br> )</p></li><li><p>text-shadow:阴影效果</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选择器&#123;<span class="attribute">text-shadow</span>: h-shadow   v-shadow    blur color&#125;</span><br><span class="line">说明 水平阴影距离     垂直阴影距离    模糊半径       阴影颜色</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;文本装饰&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">50px</span>;</span><br><span class="line"><span class="attribute">text-shadow</span>:<span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> red;</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;hello css3&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281231331.png" alt="image.png"></p><ul><li>text-overflow: 标示对象内溢出文本</li></ul><p>​    (clip,修剪溢出文本，不显示省略标记…… ellipsis 用省略标记被修剪的字符，省略标记插入最后一个字符。)</p><ul><li><ul><li>white-space:nowrap;   /<em>强制文本不能换行</em>/</li><li>overflow:hidden;        /<em>修剪溢出文本</em>/</li><li>text-overflow:ellipsis;   /<em>用省略号标记标示被修剪的文本</em>/</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器&#123;<span class="attribute">text-overflow</span>: 属性值;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;文本装饰&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">white-space</span>:nowrap;   <span class="comment">/*强制文本不能换行*/</span></span><br><span class="line"><span class="attribute">overflow</span>:hidden;    <span class="comment">/*修剪溢出文本*/</span></span><br><span class="line"><span class="attribute">text-overflow</span>:ellipsis;   <span class="comment">/*用省略号标记标示被修剪的文本*/</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> &gt;把很长的一段文本中溢出的内容隐藏，出现省略号&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;                                                                       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281231353.png" alt="image.png"></p><h3 id="5-背景属性"><a href="#5-背景属性" class="headerlink" title="5)背景属性"></a>5)背景属性</h3><table><thead><tr><th>属性</th><th>含义</th><th>说明</th></tr></thead><tbody><tr><td>background-color</td><td>背景图片</td><td></td></tr><tr><td>background-repeat</td><td>背景图片的重复方式</td><td></td></tr><tr><td>background-position</td><td>背景图片的显示位置</td><td></td></tr><tr><td>background-attachment</td><td>背景图片是否跟随滚动</td><td></td></tr><tr><td>background</td><td>简写</td><td></td></tr></tbody></table><h4 id="5-1-background-color"><a href="#5-1-background-color" class="headerlink" title="5.1 background-color"></a>5.1 background-color</h4><p>取值：transparent 透明</p><h4 id="5-2-background-image"><a href="#5-2-background-image" class="headerlink" title="5.2 background-image"></a>5.2 background-image</h4><p>必须使用url()方式指定图片的路径<br>如果是在css样式文件中使用相对路径，此时是相对于css文件，不是相对html文件</p><h4 id="5-3-background-repeat"><a href="#5-3-background-repeat" class="headerlink" title="5.3 background-repeat"></a>5.3 background-repeat</h4><p>取值：repeat(默认)，repeat-x，repeat-y,no-repeat</p><h4 id="5-4-background-position"><a href="#5-4-background-position" class="headerlink" title="5.4 background-position"></a>5.4 background-position</h4><p>默认背景图显示在左上角</p><p>取值：</p><ul><li><p>关键字：top、bottom、left、right、center</p></li><li><p>坐标：左上角为(0,0)坐标，向右为x正方向,向下为y正方向</p></li></ul><p>CSS雪碧图，即CSS Sprites,也称为CSS精灵,一种CSS图像合并技术</p><p>含义：将网页中许多非常小的图标/图片整合到一张大图中，当访问面面时只需要下载一次，可以减少访问服务器的次数，提高性能</p><p>原理：使用background-position进行背景定位，使用坐标精确地定位出背景图片的位置</p><h4 id="5-5-background-attachment"><a href="#5-5-background-attachment" class="headerlink" title="5.5 background-attachment"></a>5.5 background-attachment</h4><p>取值：scroll(默认)、fixed固定不动</p><h4 id="5-6-background"><a href="#5-6-background" class="headerlink" title="5.6 background"></a>5.6 background</h4><p>简写属性：background:background-color|background-image|background-repeat|background-position</p><p>以空格隔开，书写顺序没有要求</p><h3 id="6-列表属性"><a href="#6-列表属性" class="headerlink" title="6)列表属性"></a>6)列表属性</h3><table><thead><tr><th>属性</th><th>含义</th><th>说明</th></tr></thead><tbody><tr><td>list-style</td><td>简写</td><td></td></tr><tr><td>list-style-type</td><td>设置列表前的标记</td><td></td></tr><tr><td>list-style-image</td><td>将图像作为列表前的标记</td><td></td></tr><tr><td>list-style-position</td><td>设置标记的位置</td><td>取值：outside(默认)、inside</td></tr></tbody></table><h4 id="6-1-list-style-type"><a href="#6-1-list-style-type" class="headerlink" title="6.1 list-style-type"></a>6.1 list-style-type</h4><p>取值：none、disc、circle、square、decimal</p><p>此时不再区分有序列表还是无序列表，只要设置列表前的标记就可以了</p><h4 id="6-2-list-style"><a href="#6-2-list-style" class="headerlink" title="6.2 list-style"></a>6.2 list-style</h4><p>简写属性：list-style:list-style-type|list-style-image|list-style-position</p><p>书写顺序没有要求</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="comment">/* li&#123;</span></span><br><span class="line"><span class="comment">list-style-type:decimal;</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br><span class="line"><span class="selector-class">.first</span>&#123;</span><br><span class="line"><span class="attribute">list-style-type</span>:circle;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.second</span>&#123;</span><br><span class="line"><span class="attribute">list-style-image</span>:<span class="built_in">url</span>(<span class="string">../images/male.gif</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.third</span>&#123;</span><br><span class="line"><span class="attribute">list-style-type</span>:circle;</span><br><span class="line"><span class="attribute">list-style-position</span>:inside;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fourth</span>&#123;</span><br><span class="line"><span class="attribute">list-style</span>:circle <span class="built_in">url</span>(<span class="string">../images/female.gif</span>)inside;</span><br><span class="line"><span class="comment">/* list-style:none; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line"><span class="comment">/* list-style:none;</span></span><br><span class="line"><span class="comment">float:left; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line"><span class="attribute">list-style</span>:none;</span><br><span class="line"><span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span> class=&quot;first&quot;&gt;hello&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span> class=&quot;second&quot;&gt;hello&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span> class=&quot;third&quot;&gt;hello&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span> class=&quot;fourth&quot;&gt;hello&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;<span class="selector-tag">nav</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">ul</span> class=&quot;<span class="selector-tag">nav</span>&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;新闻&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;小说&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;艾瑞蒂&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;政治&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">li</span>&gt;学习&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">nav</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281231132.png" alt="列表属性.jpg"></p><h3 id="7-表格属性"><a href="#7-表格属性" class="headerlink" title="7)表格属性"></a>7)表格属性</h3><p>border-collapse:表格中相邻的边框是否合并（折叠）为单一边框</p><p>取值：separated（默认） collapse</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="selector-tag">table</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">500px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span> solid blue;</span><br><span class="line"><span class="attribute">border-collapse</span>:collapse;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">td</span>&#123;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span> solid blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;!-- <span class="selector-tag">table</span>&gt;(<span class="selector-tag">tr</span>&gt;<span class="selector-tag">td</span>&#123;<span class="selector-tag">td</span>$&#125;*<span class="number">5</span>)*<span class="number">4</span> --&gt;</span><br><span class="line">&lt;<span class="selector-tag">table</span> cellspacing=&quot;<span class="number">0px</span>&quot;cellpadding=&quot;<span class="number">0px</span>&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;bbb&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;aaa&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;aaa&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td4&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td5&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">tr</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;aaa&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;aaa&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;bbb&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td4&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td5&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">tr</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td1&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td2&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td3&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td4&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td5&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">tr</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td1&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td2&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td3&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td4&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">td</span>&gt;td5&lt;/<span class="selector-tag">td</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">tr</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">table</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p>示例：</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281231745.png" alt="表格属性.jpg"></p><h2 id="二、CSS高级特性"><a href="#二、CSS高级特性" class="headerlink" title="二、CSS高级特性"></a>二、CSS高级特性</h2><h3 id="2-1层叠性"><a href="#2-1层叠性" class="headerlink" title="2.1层叠性"></a>2.1层叠性</h3><p>层叠性:不同样式在同一元素上叠加显示 {用class,id同时修饰统一元素}</p><h3 id="2-2继承性"><a href="#2-2继承性" class="headerlink" title="2.2继承性"></a>2.2继承性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;继承性&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>:blue;</span><br><span class="line">        <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">h2</span>&gt;继承性&lt;/<span class="selector-tag">h2</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span>&gt;子级元素继承父级元素的CSS样式&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span>&gt;理解起来非常简单&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;!--页面中所有的元素文本颜色改为蓝色,字号<span class="number">20px</span>--&gt;                                     </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281231250.png" alt="image.png"></p><h3 id="2-3-css优先级"><a href="#2-3-css优先级" class="headerlink" title="2.3 css优先级"></a><strong>2.3 css优先级</strong></h3><ul><li><p>A: id选择器权重100，类选择器权重10，标记选择器权重1</p></li><li><p>B: ==继承样式权重为0==</p></li><li><p>C: 权重一样的，==就近原则==</p></li><li><p>D: 内部和外部的，==就近原则==!important 优先</p></li><li><p>E: 无论多少个标记选择器叠加，其权重不会超过类选择器，同理…</p></li></ul><p><strong>对于B的代码理解:</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;层叠性&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    <span class="selector-tag">strong</span>&#123;<span class="attribute">color</span>:red;&#125;&lt;!--权重<span class="number">1</span>--&gt;</span><br><span class="line">    <span class="selector-id">#header</span>&#123;<span class="attribute">color</span>:green;&#125;&lt;!--权重<span class="number">10</span>--&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span> id=&quot;<span class="selector-tag">header</span>&quot; class=&quot;blue&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">strong</span>&gt;继承样式不如自己的定义&lt;/<span class="selector-tag">strong</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;       </span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301281231340.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔方教程</title>
      <link href="/archives/e0c43b13.html"/>
      <url>/archives/e0c43b13.html</url>
      
        <content type="html"><![CDATA[<h1 id="魔方教程"><a href="#魔方教程" class="headerlink" title="魔方教程"></a>魔方教程</h1><ol><li><p>黄心白边十字</p></li><li><p>白心白边十字，并且把白面做底层</p></li><li><p>确定最下层与中心方块一致：</p><p>当第一层有白色混合棱角 且白色边块不在上方</p><ul><li>将白色边块正对自己，且该棱角侧边颜色与那面中间两块颜色相同。若在左边，（反）右上左下。若在右边，（正）左上右下。（说实话，这步理解原理就能明白其实很简单，不必背公式）</li></ul><p>若白色边块在上方：则使用<strong>（正）上左下右</strong>，使白色边块不在上方。重复上面那步。</p></li><li><p>确定第二层与中心方块一致：</p><ul><li><p>当第一层有不含黄色方块：</p><ul><li>将其面向色块与中心色块保持一致 <strong>另一色块在其一侧</strong> <strong>移动上层 使其远离另一色块</strong> <ul><li><strong>如果另一色块旋转方向为左 做右手公式（正）上左下右， 再将白色方块置于左侧 做左手公式（反）上右下左。</strong></li><li> <strong>如果另一色块旋转如果方向为右 做左手公式（正）上右下左， 再将白色方块置于右侧 做右手公式（反）上左下右。</strong></li></ul></li></ul></li><li><p> 当第一层均包含黄色方块：</p></li><li><p>将第二层异常方块置于右手边，做右手公式（正）上左下右，再将白色方块置于左侧 做左手公式（反）上右下左</p></li><li><p>此时异常方块已移动到最上层 再重复（当第一层有不含黄色方块）</p></li></ul></li><li><p>确定最上层黄心十字：</p><ul><li>当上层无L型或横型 选任意方向 <strong>（正）顺上左下右逆</strong></li><li>此时为L型  两边朝向右手 <strong>（正）顺上左下右逆</strong></li><li>此时为横型 平行横线 <strong>（正）顺上左下右逆</strong></li></ul></li><li><p>确定最上层平面：</p><ul><li><p>此时直接是小鱼图样 （有且只有三个黄色块）</p><ul><li>鱼头朝上 <strong>（正）下右上右下右右上</strong></li></ul></li><li><p>此时有两个非黄色色块</p><ul><li>要让左后方有一点黄色  <strong>（正）下右上右下右右上</strong></li></ul></li><li><p>此时上方是十字架图样</p><ul><li>让后方不要有黄色  <strong>（正）下右上右下右右上</strong></li></ul></li></ul></li><li><p>确定最上层角块：</p><ul><li><p>有角块颜色相同且在同一边的两侧</p><ul><li>选择角块颜色一致的朝下 面向黄色 <strong>（正） 上右上  <em>下面（底层）180°</em>  下左上  <em>下面（底层）180°</em>   <em>右面180°</em></strong> </li></ul></li><li><p>无角块颜色一致</p><ul><li>选择任意朝下 面向黄色<strong>（正） 上右上  <em>下面（底层）180°</em>  下左上  <em>下面（底层）180°</em>   <em>右面180°</em></strong> </li></ul></li></ul></li><li><p>确定最上层中点：</p><ul><li>有好的一面<ul><li>好的一面对准自己<strong>（正）下左下右 下右下左 上左  <em>右面180°</em></strong></li></ul></li><li>没好的一面<ul><li>任意一面对准自己 <strong>（正）下左下右 下右下左 上左  <em>右面180°</em></strong></li><li>此时就会出现好的一面，然后重复上面步骤。</li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 魔方 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔方 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宇宙</title>
      <link href="/archives/5eac2c2b.html"/>
      <url>/archives/5eac2c2b.html</url>
      
        <content type="html"><![CDATA[<p><strong>宇宙爆炸了一百三十七亿年，才等到你。<br>当恒星被撕裂的时候<br>它会将自己生命过程中创造的所有元素炸入空中，<br>然后死去，这些元素将在宇宙中铺开形成星云，<br>在星云的中心将会有一团小小的光，<br>新的恒星重生于消亡恒星的残余，<br>在这个死亡又重生于消亡恒星的残余，<br>在这个死亡又重生的宇宙循环中，我们出现了。<br>宇宙初生时，元素大概只有氢氘氦锂而已。<br>碳基生命所需的碳氧等元素，都是恒星煅烧出来的。<br>恒星死后，这些元素被释出成为宇宙尘埃<br>宇宙尘埃又凝成行星，行星再逐渐演化出生命。<br>我们确实都来自已逝的恒星<br>仰望星河，是在凝视未死的同伴<br>从宇宙起源到最后一个黑洞的消失达个过程中，<br>生命正如我们所言之有百分之千亿分之，<br>千亿分之十分之一的可能性,<br>所以对我来说，宇宙中最惊人的奇迹不是恒星，不是行星，也不是星系，甚至根本就不是一个物质，<br>而是时间里的一瞬间，那个瞬间，就是现在。<br>当我们仰望天空，望向遥远的恒星和星系时,<br>我们其实是在仰望过去，<br>因为光从那些遥远天体到达地球需要时间，<br>而光从那个红点处传播到我们这里，<br>差不多经历了整个宇宙史。<br>我们看到的是一百三十亿年前发生的事情,<br>我们看到的是宇宙初期的一颗恒星爆炸灭亡的景象。<br>我刚用相机捕捉到的，<br>这个光点二百五十万年前踏上了旅程。<br>那时地球上还没有人类，<br>远古的祖先能人正在非洲广表的平原上漫步,<br>就是在那些光线穿行于无垠宇宙的同时，<br>人类不断进化，一代又一代的生老病死周而复始，旅途开始的二百五十万年后，这些远道而来的信使,<br>穿越漫长的时间，映入现在我们的眼帘。<br>我感激我们的光锥曾彼此重叠<br>而你永远改变了我的星轨。<br>纵使再不能相见，<br>你仍是我所在的星系未曾分崩离析的原因，<br>是我宇宙之网的永恒组成。<br>其实分别也没有那么可怕，<br>65万个小时后，当我们氧化成风，<br>就能变成同一杯啤酒上两朵相邻的泡沫，<br>就能变成同一盏路灯下两粒依偎的尘埃。<br>宇宙中的原子并不会湮灭，而我们，也终究会在一起。<br>在广表的空间和无限的时间中,<br>能够与你共享一颗行星和一段时光，是我的荣幸。<br>我们的故事就是宇宙的故事，因为我们是恒星的孩子。<br>我们与那些遥远星系息息相关，无论它们是如何与我们天各一方，那些经过数十亿年旅行到达地球的光线，<br>终究会把我们联系在一起。<br>地球正一点点的疏离月亮。<br>据说，每一百万年就会陌生一杪，早在25亿年前,<br>我们便开始了漫长的别离</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的青春恋爱物语果然有问题之大老师的语录</title>
      <link href="/archives/e3fdebf2.html"/>
      <url>/archives/e3fdebf2.html</url>
      
        <content type="html"><![CDATA[<h1 id="大老师"><a href="#大老师" class="headerlink" title="大老师"></a>大老师</h1><p><strong>【1】：温柔正确的人总是难以生存，因为这世界既不温柔，也不正确 –大老师</strong></p><p><strong>【2】：努力是不会背叛自己的，虽然梦想会背叛。 努力不一定能实现梦想，但是曾经努力过的事实却足以安慰自己。 –大老师</strong></p><p><strong>【3】：要让一群人团结起来，需要的不是英明的领导，而是共同的敌人 –大老师</strong></p><p><strong>【4】：没有期待就没有失望，没有羁绊就不会受伤。 –大老师</strong></p><p><strong>【5】：我讨厌温柔的女孩子。温柔的女孩子其实对所有人都温柔，我却会误以为只对我温柔， 然后就沾沾自喜得意忘形，最后闹得不欢而散，双方都受到伤害。–所以我才讨厌温柔的女孩子。 –大老师</strong></p><p><strong>【6】：孤独的人不会伤害别人，只会不断地伤害自己罢了。 –大老师</strong></p><p><strong>【7】：这世上真正的好人和坏人都很少，大部分都是普通人。平时随波逐流，关键时刻则会出于自我保护 而露出獠牙–然而正是因为这样才可怕。 –大老师</strong></p><p><strong>【8】：大家互相帮助，一起成功，一起幸福什么的，不过是种理想。 现实中，有人幸福，就必定有人被抛弃 有人光鲜，就必须有人满身泥泞。 –大老师</strong></p><p><strong>【9】：只有弱者才喜欢扎堆，问题是绝大部分人都是弱者。 –大老师</strong></p><p><strong>【10】：只要稍微打个招呼就会胡思乱想，要是互相发短信，心中还会起波澜，接到对方来电的那一整天，都会对着来电记录傻笑，可是我知道，那只是温柔，对我温柔的人对别人也同样温柔，这种事差点就忘记了,如果说真相是残酷的，谎言肯定是温柔的，所以温柔是谎言，一次又一次期待，一次又一次落空，不知从何时开始，便不再怀抱希望。 –大老师</strong></p><p><strong>【11】：真正重要的东西，肉眼是看不到的。 –大老师</strong></p><p><strong>【12】：孤独的人其实非常擅于思考。诚如「人是一根有思想的芦苇」所言，我们无时无刻不在思考，而孤独者不需要跟人分享思考内容，所以能想得更深入，因此，我们这群孤独的人拥有不同于凡人的思维，不时会出现超乎常人的想法。 –大老师</strong></p><p><strong>【13】：女生口中的「好人」首先百分之百是「怎样都好的人」的意思，再好也不过止于「方便好使的人」。也就是说，不管怎样都是没戏了 –大老师</strong></p><p><strong>【14】：所谓孤零零指的不是周围的人口密度，而是指个人的精神层面了。就算别人离你再近，要是不能感觉和自己是同一种生物，那么干涸的心也得不到满足。 –大老师</strong></p><p><strong>【15】：真正的强者才不会群居的。孤独者永远都是和这个世界的全部相对立的。 –大老师</strong></p><p><strong>【16】：所谓的「改变自己，世界就会随之改变」这种事，是不可能的。 不论是已经成型的对自己的评价，还是既存的人际关系，都不可能轻易地朝积极的方向变化。 人对人的评价既不是加分也不是减分。 只不过是固定观念和既存印象而已。 人看不到现实的本来面目。只能看到想看的、想拥有的现实。 –大老师</strong></p><p><strong>【17】：因为重要，因为不想失去。 隐藏着，伪装着。 正因如此才一定会失去。 于是，就会悲叹起失去。悲叹起比起失去还是不要得到会更好。悲叹起如果离手之时会后悔到死的话，还是打一开始就放弃会更好。 在变化的世界之中，不得不改变的关系大概是存在的。会破坏到无法再次取回的事物，也肯定是存在的。 所以，无论谁都在说谎。 –大老师</strong></p><p><strong>【18】：行动被评价和人格被评价完全是两码事。就像不能根据仅仅一次的善行就把那个人判定为善人 –大老师</strong></p><p><strong>【19】：不能逃避”什么的只是强者的思考方式，强求这种事情的世界才是有问题的 –大老师</strong></p><p><strong>【20】：有自知之明的人才能理解讽刺…没有自知之明的人说多了也是白费力气…不懂和不存在是同义的. –大老师</strong></p><p><strong>【21】：让某个人承受痛苦，再把那个人除掉，这就是我为人人 –大老师</strong></p><p><strong>【22】：一个个的声音肯定有各自的意义，可无数个一齐聚集起来就无意义了。 –大老师</strong></p><p><strong>【23】：看谁的脸色，讨谁的欢心，保持联络，迎合话题，不得不做那么多才能维系的友情，那种东西根本就不是友情。如果那么繁琐的东西才能被称为青春的话，我根本不需要。靠这种无聊的交流而装做很快乐的行为根本就是自我满足。那根本就是欺瞒。是应该唾弃的邪恶。 –大老师</strong></p><p><strong>【24】：人类要是遇到真心害怕的事，完全不会在意别人，就算牺牲周围的人也要获救 –大老师</strong></p><p><strong>【25】：为什么要称赞他人？那是为了把对方捧到更高的地方更容易绊他的脚，为了把他从高处摔下来。这就叫做称赞杀人法。 –大老师</strong></p><p><strong>【26】：因为无理当道，所以正理去死吧！ –大老师</strong></p><p><strong>【27】：我宁愿孤零零地被撒手不管，以往的孤独环境还让我内心自在得多。 –大老师</strong></p><p><strong>【28】：世界会随自己而改变这种事，根本不可能，评价他人是靠固定观念与印象而已，孤独的人会被迫孤独下去，要是因努力而引人关注的话，只会成为攻击的素材罢了，这就是孩子们的王国中腐朽的规则 –大老师</strong></p><p><strong>【29】：世界上的男人 80%都抱有“她是不是喜欢我？”这样的想法而活 正因为如此 我才需要告诫自己 「永远都不要以为妹子喜欢你」 –大老师</strong></p><p><strong>【30】：误会不过是误会，并不是真实。那么只要我自己明白就好了。不管被谁怎么觉得了都无所谓。每次想要解开误会的时候都会向着不好的方向前进。我已经放弃解释了。 –大老师</strong></p><p><strong>【31】：语言是误解的源泉..误解是解不开的..人生无论何时都无法重新来过…错误的答案一定永远都是错误的… –大老师</strong></p><p><strong>【32】：孤零零可以自傲的便是自己的深思。正常而言，原本用于对人关系的资源仅仅被用来面向自身的话，在自我检查与反省与后悔与妄想与想象与幻想的不断交替反复之后，最终达到思想与哲学程度的，毫无意义的强大思考能力。然后将其尽数消耗，对一切的可能性进行摸索，对考虑后得出的结论反向证明后进行否定。 把在其中无法否定的结论，就如同为自我辩护一般的全力证明。 批判他人与自我辩护才是我比企谷八幡的真正能力。 只要不停地重复着这些，自然可以得出答案。 如此简单罢了。 –大老师</strong></p><p><strong>【33】：氛围和气氛是无法违抗的。人只能被迫采取违背本意的行动。因为“大家”都这么说，因为“大家”都这么做，不这么做的话，就无法融入“大家”之中。 –大老师</strong></p><p><strong>【34】：孤高所以至高。所谓真正的英雄就是一个人。 因为孤高所以强大。没有持有羁绊也就是说没有必须守护的东西。必须守护的东西换言之就是弱点。希腊的英雄阿基里斯、或者是最强的僧兵武藏坊弁庆，就是因为有弱点才会失败。肯定只要他们没有弱点，就会作为胜利者在历史上刻下自己的名字的。 因此没有弱点、没有必须守护的东西、和别人没有联系的人才是最强的。 –大老师</strong></p><p><strong>【35】：要是烦恼于人际关系的话，只要将其本身摧毁的话就没有可烦恼的事了，大家都变孤独的话，就不会有争吵与纷争了 –大老师</strong></p><p><strong>【36】：我是想被包养，但不会接受施舍 –大老师</strong></p><p><strong>【37】：“人”字经常被解释为人和人互相支持 但写起来不是往一边倒么 我觉得容忍他人的牺牲才是“人”这个概念 –大老师</strong></p><p><strong>【38】：尽管扭曲幼稚失败，但是只要坚持下去就是正义。如果只是被人否定就要改变的话，那种东西既不是梦想也不是自我。 –大老师</strong></p><p><strong>【39】：不能逃避只是强者的想法，错的并不会总是自己，社会上，人世间，身边总会有人做错，自己可以改变它，这只是顺应了这个垃圾一般的冷淡且残酷的世界，承认自己的失败并顺从的行为，只是用漂亮话装饰起来连自己都要欺骗罢了 –大老师</strong></p><p><strong>【40】：制造出话题，附和话题，表现出对对方回答的同感。在这个过程中缩小对方的进攻区域，同时也是不着痕迹的告诉对方自己的守备范围。 所谓的和人好好应对的行为，不过就是欺骗自己，欺骗对方，对方知道自己被骗，自己也被对方所骗，这样的连锁循环而已。说到底也不过是虚伪、猜疑和欺瞒而已。 –大老师</strong></p><p><strong>【41】：来吧，从现在开始就是我的时间了。从现在开始的十分钟间只是属于我一人的时间。 照满聚光灯的舞台并不是我的归处。 从灰暗的出口延展开的无人的小道才是我该站立的舞台。 比企谷八幡的一人舞台。 –大老师</strong></p><p><strong>【42】：猫是可爱的，狼是很帅的。就是说，孤独又可爱又帅。 –大老师</strong></p><p><strong>【43】：即使努力也不一定能实现梦想。不如说实现不了的还比较多。但是曾经努力过的事实却足以安慰自己。整个社会对我都很苛刻。所以至少让我自己宽容一下我自己吧。如果大家都对自己更宽容一点的话。大家都变成废柴就没有废柴了。 –大老师</strong></p><p><strong>【44】：她们像夜空中的月亮，不论你走到哪里，她们就跟到哪里，但你无法触碰她们，也无法掌握距离感。光是打个招呼，就开始胡思乱想；彼此传封邮件，便感到心神不宁；接到对方来电的那一整天，都会对着来电纪录傻笑。不过我很清楚，那只是一种温柔。对我温柔的人也会对其他人温柔，我几乎要忘记这个道理。我并不迟钝，其实满敏感的，甚至到了过敏的地步。因为这个缘故，我才会出现过敏反应。我早已有过一次教训，训练有素的独行侠是不会重复被骗的。不管是别人猜拳猜输，玩处罚游戏来跟我告白；还是由女生代笔，让男生交给我的假情书，对我来说通通没用！我可是身经百战的强者！如果要比输，我肯定是最厉害的！ 一次又一次期待，一次又一次落空……不知道从什么时候开始，我已经不再抱持 –大老师</strong></p><p><strong>【45】：妹妹是种奇妙的生物，无论多么可爱也不会对她有想法。她的内衣也不过是块布。现实中的妹妹就是这样的东西。 –大老师</strong></p><p><strong>【46】：我所熟知的她 总是美丽 正直 诚实 就算无依无靠 也靠自己的力量坚强地站着 我一定是憧憬着 那样完美的她 擅自去期待 擅自把她理想化 擅自认为自己理解她 然后擅自地失望 告诫过自己无数次 结果却还是没有改 她也会撒谎 连这种理所当然的事都无法容忍的自己 我很厌恶这样的自己 –大老师</strong></p><p><strong>【48】：何为自由意志？没有，思来想去，所谓的自由意志，人的个体性，根本是不存在的，人是多么的相似，即是是表面千差万别，追其本原，依旧是一样的。根本，还是为活而活，人所谓的自由意志到底也不过如此。 –大老师</strong></p><p><strong>【49】：认为说了对方就能明白 这是一种傲慢 说者本人的自我满足 听者的狂妄自大 当中会有各种情况 并非说出来就一定能够相互理解 所以 我并不渴求用语言来表达 是啊 不说就能明白 根本是不切实际的 但是……我…… 我不渴求语言 我想要的东西 确实存在 那一定不是希望互相了解 希望友好相处 希望待在一起之类的事情 我并不想让别人来理解我 而是想要去了解 想了解 想明白 想弄明白之后安心度日 想得到一份平静 因为一无所知这一点让我极其畏惧 想要完全理解什么的 是个及其自以为是 独断专行且傲慢的愿望 真的很卑鄙 令人厌烦 怀有那种愿望的自己简直恶心到无可救药 –大老师</strong></p><p><strong>【50】：说时间可以解决一切那不过是骗人的 那不过是被逼到只能将一切都忘却都断送 将问题本身放置直至风化而已 –大老师</strong></p><p><strong>【51】：孤高所以至高，所谓真正的英雄就是一个人。因为孤高所以强大。没有持有羁绊也就是说没有必须守护的东西。必需守护的东西换言之就是弱点。就是因为有弱点才会失败。因此没有弱点，没有必须守护的东西，和别人没有联系的人才是最强的。 也就是说，我是最强的。 –大老师</strong></p><p><strong>【52】：不要以为抹消过去，重新来过，即可发生什么改变 –大老师</strong></p><p><strong>【53】：这只是谁也不会伤害到的，温柔的谎言。虽然听上去不时闪现着希望，实际上却是迂回地饱含着绝望的说法。可能做不到 这件事本身说话人自己也了然于心，而向众人留有回旋的余地。 –大老师</strong></p><p><strong>【54】：拥有朋友，就意味着要承受与此有关的一切，甚至于混乱。因此，我不会无条件地认为【有很多朋友真棒】之类 –大老师</strong></p><p><strong>【55】：既然存在拥有朋友才能学到的东西，没有朋友才能学到东西肯定也是有的。这两方面应该是表里一体拥有同等价值的。 –大老师</strong></p><p><strong>【56】：也没法违背「气氛」，因此就算理解到了别人当下的痛苦也是无能为力。 氛围和气氛是无法违抗的。人只能被迫采取违背本意的行动。因为“大家”都这么说，因为“大家”都这么做， 不这么做的话，就无法融入“大家”之中。不过，并不存在名叫什么“大家”的家伙。既没法与他说话也没法揍他一顿。 他也不会生气，不会笑，不过是集团的魔力制造出的幻想而已，是在不经意之间诞生出的魔物，是为了隐藏个人小小的 恶意所创造出的亡灵。是将不是同伴的人蚕食殆尽，只有成为同伴才能摆脱诅咒的妖魔鬼怪。曾几何时，他也好，她也好， 都是这家伙的被害者。所以我才憎恶着。这个强求着所谓“大家”的世界。 –大老师</strong></p><p><strong>【57】：自称理解了能教他人什么的都太狂妄了 自以为理解了是罪与恶 虽然如此 我们不得不自欺欺人地活下去 –大老师</strong></p><p><strong>【58】：然而，并不是说，仅仅那样就是正确的。 正确的做法就等于了不起，我认为那才是怠慢。 按照教科书完成既定的课程，达成计划的劳动定额…… 这不只是效法至今的传统和正攻法而已吗。凭借着过去的财产，依靠着权威，这难道不只是在加固着目前还毫无作为的自己而已吗。 把自己的一切全部委身给自己的正确性，这种做法哪里算得上正确。 –大老师</strong></p><p><strong>【59】：自己的过去会被当做笑话或者捏他的形式，被他人随随便便的共有化。最终只会被他和她们当做方便好用的交流素材， 快乐的使用着 –大老师</strong></p><p><strong>【60】：怎么办？没怎么办。只想就这件事随便说说而已。就好比，在电视里看到战争和贫困的场景，只能一边说着“真是可怜啊 ”“真是不得了啊”“这是我们无能为力的事情啊”，而同时我们在舒适的屋子里吃着好吃的晚饭的事情也没有改变。 我们无法在此之后着手做些什么，到最后不过只能想到“要对目前为止自己的幸福心怀感激”这种程度的事 –大老师</strong></p><p><strong>【61】：人看不到现实的本来面目。只能看到想看的、想拥有的现实。 不论身处底层心情恶劣的家伙做出什么样的努力，不过都会以被他人说成是“那家伙努力个什么劲啊？噗忽忽”而告终。 蹩脚的引人注目只能相反地成为被攻击的素材。 –大老师</strong></p><p><strong>【62】：世上没有像一个模子刻出来样的恶人哦 平时大家都是善人 至少大家都是普通人 但是 一到紧要关头 就会突然变成恶人 所以很 可怕 因为不能大意 人不可轻信 –大老师</strong></p><p><strong>【63】：人类要是遇到真心害怕的事 完全不会在意别人 就算牺牲周围的人也要获救 只要暴露出这份丑陋的嘴脸 就再也无法好好相处了  不能逃避只是强身的想法 错的并不会总是自己 社会上 人世间 身边 总会有人做错 自己可以改变它 这只是顺应了这个垃圾一 般的冷酷且残酷的世界 承认自己的失败并顺从的行为 只是用漂亮话装饰起来 连自己都要欺骗罢了 –大老师</strong></p><p><strong>【64】：因为重要，因为不想失去。隐藏着，伪装着。正因如此才一定会失去。 于是，就会悲叹起失去。悲叹起比起失去还是不要得到会更好。悲叹起如果离手之时会后悔到死的话，还是放弃会更好 –大老师</strong></p><p><strong>【65】：我，讨厌人群。还有，温柔的女孩子也，讨厌。 犹如在夜间抬头看到的月亮，即使到哪都跟着也够不到。那份距离感无法把握。打一句招呼便会在意，互发邮件便会心中小鹿乱撞。在打电话来的日子一看见来信履历表情会不由得舒缓下来。但是，我知道。这叫做温柔。对我温柔的人也会对其他人温柔，这件事好像不知不觉就忘了。并不是迟钝。不如说是敏感。岂止如此甚至是过敏。所以产生了过敏反应。那个模式已经体会过一次了。久经沙场的孤独者是不会第二次中招的。不 管是输掉猜拳做为惩罚游戏的告白，还是由女生代笔却 来自男人的伪造情书，我都免疫了。因为是百战磨练过的强者。有关于败北的事我是最强的。总是期待着，总是出差错，从何时开始就不再抱有希望。所以，我永远，讨厌温柔的女孩子 –大老师</strong></p><p><strong>【66】：这样强行掩饰，将与平常不同的自己，与独处时的自己相异的一面展示着，难道不就是虚伪吗。 通过这样种种努力赢得的爱情，能够称作是可以真正地对自己、对真实的自己的爱情吗？ 为了被喜欢为了被爱而改变的自己，是否可以称作自己–我不清楚。若这是伪装出来的， 总有一天会破裂的吧，若在本质上变化了那就不是原来的自己 –大老师</strong></p><p><strong>【67】：至始至终顶着头衔，一旦得到他人的认可就沾沾自喜，继而醉心于自己的处境，高呼自己为重要人士，最后却被自己定下的 规则所束缚，一旦没有获得他人的指点便无法寻找到属于自己的世界，这种状态才不能被称作成长。 –大老师</strong></p><p><strong>【68】：话语是误会的源泉 –大老师</strong></p><p><strong>【69】：话说回来，现充还真是麻烦啊。所谓的朋友也不光只有好事，大概就连负面的东西也不得不共有吧。对了，这种情况下为 了维持关系就需要献上所谓的牺牲品了吧。 只是这种关系本身变成了问题滋生的温床。 这样的话，就必须在这个关系本身上做文章了。 –大老师</strong></p><p><strong>【70】：不过，这是温柔也好同情也好，仅仅是义务而已。然而却会让经验值低的男生“啊、啊？某非……这家伙喜欢我？”这样误会 这一点上实在令人困扰。明明还是更加简单易懂一点的好，我说真的。 如果有着能将女孩子发来的邮件自动转换成带敬语的软件就好了。这样也就不会有奇怪的期待什么的了。阿类，这玩意卖得动吗？ –大老师</strong></p><p><strong>【71】：所谓的和人好好应对的行为，不过就是欺骗自己，欺骗对方，对方知道自己被骗，自己也被对方所骗，这样的连锁循环而已。说到底也不过是虚伪、猜疑和欺瞒而已。 –大老师</strong></p><p><strong>【72】：–不管是结婚还是将来，之后的事情都是不得而知的。一难之后还有一难是这世间的常理。不过，谁都拥有追求幸福的权力。为了机会降临人应不懈努力。 –大老师</strong></p><p><strong>【73】：只有在必需时才去做，不必须就不会去做。人生也是如此。活着就会遇到讨厌的事，也就是说活着本身就是让人讨厌的，但不能因此就放弃活着。 –大老师</strong></p><p><strong>【74】：讨厌还勉强的话彼此只会变得更不幸而已 –大老师</strong></p><p><strong>【75】：假设。 假设的话。 假设说，选择了像游戏一样仅可返回上一个存档的选项重新来过的话，人生是否会改变呢？ 答案是否。 那是只有拥有选项的人才可以选择的道路。对于从一开始就没有选项的人来说，那个假设完全无意义。 因此没有后悔。更确切的说对这个人生的大部分事情都在后悔着。 –大老师</strong></p><p><strong>【76】：在一点点长大成人，逐渐看清现实的未来的过程中，会一点点的变得无法一味追寻梦的物语。虽然大家都开玩笑地说着工作就输了的什么，却是绝对不会搞错这件事。人们对于这个世界上一味的追寻着梦的生活是多么懊悔，只是想一想就唉声叹气了。 –大老师</strong></p><p><strong>【77】：如果说真实是残酷的，谎言绝对是温柔的吧。 –大老师</strong></p><p><strong>【78】：所谓难得糊涂，太正确太清醒记性太好的人，都是活得很辛苦的。 –大老师</strong></p><p><strong>【79】：愤怒是一种持续时间很短的感情。所以一旦给一段时间冷却下来，就能做出正确的判断。但是，即便愤怒不再持续，憎恨也会持续下去。他们会在心灵深处继续燃烧，如炽热的火苗般静静地、缓慢地一直燃烧下去。而更加恶劣的是，嘲笑、玩弄和蔑视的感情会更长时间地持续下去。贬低别人总是比夸奖别人要简单，在其中混入一些俏皮话甚至会更让人快乐。正因为让人觉得轻快，于是能够以戏说的感觉继续这么做下去。于是这种做法与憎恶及怨恨有别，在没有犯罪意识的情况下长期而反复地进行下去。 –大老师</strong></p><p><strong>【80】：谁都不受伤的世界是不存在的。如果有的话，那是谁都平等的受伤的世界。尽管知道谁都不受伤的世界就不会成立这种事，却依旧讨厌谁受伤的事的话，只有创造出替罪羊。不是选出既存的谁，只是创造出将伤口、憎恶在那身体之中一心接受的存在。 –大老师</strong></p><p><strong>【81】：属于我们的样子总是会在某个地方产生分歧… 那么真心…真正的我们又在哪里呢？ –大老师</strong></p><p><strong>【82】：在痛苦的时候得到的温柔只能忍耐。因为自己的悲惨遭遇已经被大家亲眼目睹了，因为已经证明了自己是个多么可怜的卑微存在，因为他注意到了自己是一个只能被别人的温柔所拯救，一事无成的人。比起自己辛苦地承担一切，不如将一切责任推卸给别人的不理解，让人更能够轻松一些吧 –大老师</strong></p><p><strong>【83】：属于她的样子 属于我的样子 我们肯定一直怀揣着别人为你规定好的战绩 然而却总是偏离那个规定 ！ –大老师</strong></p><p><strong>【84】：早已明晰事物终将逝去却延续其生命的行为有什么意义吗？ 总有一天所有都会消失，这是真理。 只是，尽管如此。 也存在正因为失去才美丽的东西。 正因为知道有一天会结束，意义才随之产生。不管是停滞还是闭塞，也就是说安息也一样，一定不是可以忽视或者享受的东西。 应该意识到必将消逝。 时不时轻轻回首看不知何时会失去的东西，犹如宝物般怀念、珍视，一个人静静的独自举杯般的幸福，也一定存在。 –大老师</strong></p><p><strong>【85】：因为会一回想起过去，会让人后悔得想去死:而展望未来又会让人担心的得愁眉不展，所以用消除法，就能得出现在才是最幸福的结论啊。 –大老师</strong></p><p><strong>【86】：人只会看到自己想看到的、听到自己想听到的。我也并不例外。 –大老师</strong></p><p><strong>【87】：你怎么可能明白。想确认考试范围都找不到人能问一下，默默地用功，担惊受怕地直面自己的成果。而你们却聚在一起对答案比分数互相骂笨蛋互相鼓励以此逃避现实，而我却要一个人正面接受现实啊。 –大老师</strong></p><p><strong>【88】：这世上，有些事物悔之不尽。也有句话叫做往日无法重来。明明直到昨天还在普通的交谈，突然之间就拉开了距离，从此不再说话。频繁交换的邮件也就此断绝。这还算是好的情况。就连互相之间强颜欢笑，互相展露仿佛在确认“不要在意哦，我们还是在好好地扮演着朋友的哦”一般的笑容都是有的。即便如此，由于盘踞在脑海一角的意识无论如何也无法消去，于是顾虑着，也不知从谁开始互相疏远，然后就此结束。 –大老师</strong></p><p><strong>【89】：并不是说只有传达心意，将一切挑明就是真正正确的。无法踏出一步的关系。不被允许跨越底线的关系。不能原谅被践踏的关系。电视剧或是漫画总是描绘在着越线之后的happy-end。然而，现实并非如此。是更加的残酷，和冷淡。重要的事物，是无法替代的。失去了无可替代的事物，就无法再次取得。 –大老师</strong></p><p><strong>【90】：我只是单单的想证明一件事而已。孤独的人并不是可怜的家伙，并不是因为孤独所以这家伙就是糟糕的家伙。这些只是我一个人独断的想法这种事情我是知道的。但是，现在的我不会去否定过去的我。一个人过的时间是罪恶的，一个人呆着是不好的，我绝不会说。 –大老师</strong></p><p><strong>【91】：虽然是和自己没有关系的事情，在看到了之后就再也不能说自己不知道了。不过，还是什么都办不到。所以至少要怜悯一下。这种感情虽然美丽而崇高，同时也只看到过于丑陋的借口。这不过是我所憎恶的，存在与谎言满载的青春的延长线上的东西而已。 –大老师</strong></p><p><strong>【92】：结婚 这是人生的坟墓 已婚者都毫不例外的炫耀着结婚的好处 虽然说有能说我回来了的对象很高兴之类的 看着孩子的睡颜第二天就能加油之类的 但是等等 在老家的话也能、说我回来了 而且 能看见孩子的睡颜就意味着刚加完班 这真的算的上是幸福吗 本已经找到幸福的他们的双眼却都和我一样是已经腐朽的了 简直是在大街上活蹦乱跳的僵尸！ –大老师</strong></p><p><strong>【93】：自称理解了能教他人什么的都太狂妄了。自以为理解了是罪与恶。虽然如此，我们不得不自欺欺人地活下去。理解了，和被理解了，凭借云里雾里的相互认识随时重新定义我们的存在，或者对方的存在，只得一边鼓噪一边继续生活。万一不这样做自己这一存在就会烟消云散。 –大老师</strong></p><p><strong>【94】：有些失败忘记了，有些失败习惯了，有些失败已经挽回了，但是却不能因此而将失败的印记抹去。或许应该说，失败才是我们活着的证明。 –大老师</strong></p><p><strong>【95】：你能明白吗，像白痴一样在大热天里，或者手指都冻僵了的大雪天里一个人骑车上学回家的辛苦。你们在那喊着好热啊好冷啊受不了啊之类的互相欺骗唬弄掩饰的时候我全靠一个人坚持过来。 –大老师</strong></p><p><strong>【96】：我觉得对于人类、以及对于生物来说，逃避讨厌的事是理所当然的，而这一点并不被认可也让我感觉有些疑惑。我觉得不应该去责备从现状中离开的人。应该责备的，是责备离去的人的风潮。 –大老师</strong></p><p><strong>【97】：眷恋感念过去，往昔。或是叹惋懊悔已改变，被改变的事物。那么，归根结底所谓变化，是应该悲伤的事情吗。成长与进化还有变迁，真是可喜正确而又极好的东西吗。即使自己不改变，世界，周围还是在不断变化。因为不想被抛下只得拼命紧随其后不是吗。假使不改变，悲伤就不会产生。哪怕都不产生，负面要素不会出现就是一大好处。 所以我不否定一成不变。毫无否定过去的我，和现在的我的打算。改变什么的，结果只是为了逃避现状。要是不选择逃避就该不变地在那坚持到底。也有正因为不变才能获得之物。 –大老师</strong></p><p><strong>【98】：什么模棱两可的答案串通一气的关系…..这些都不需要 明明知道没有那种事 明明知道要是钻牛角尖的话就会落得一 无 所 有的下场 即便如此还是左思右想 痛苦不堪 不断挣扎… –大老师</strong></p><p><strong>【99】：只要不把问题当成问题，那就不是个问题。–大老师</strong></p><p><strong>【100】：事事都要回顾的话，仅仅这一项，人生就会漆黑一片吧。–大老师</strong></p><p><strong>【101】：爱与友情以及勇气改变不了一个人，只有受伤才能让人成长。–大老师</strong></p><p><strong>【102】：不能逃避只是强者的想法，错的并不会总是自己，社会上、人世间、我们身边，也会有很多人犯错，自己能够改变它，这只是顺应了这个如垃圾一般，冷淡又残酷的世界。承认自己的失败并顺从的行为，只是用漂亮话装饰起来，连自己都要欺骗罢了。–大老师</strong></p><p><strong>【103】：女孩是一种只对帅哥产生兴趣 并妄图与其发展为不纯洁男女关系的种族 换句话说，就是我的敌人。–大老师</strong></p><p><strong>【104】:努力是不会背叛自己的,虽然梦想有时会背叛自己,就算努力，也不见得一定能实梦想 ,不如说，多数是实现不了的 .不过，只要有努力过的事实就可以慰籍自己。–大老师</strong></p><p><strong>【105】：因为说了，所以会明白，这是一种傲慢，是说话本人的自我满足，听话人的自以为是。–大老师</strong></p><p><strong>【106】：我没有错，错的是这个社会。–大老师</strong></p><p><strong>【107】：如果失败也能称为是青春的象征的话那么交友失败的人也可谓是尽享青春也不为过了吧。–大老师</strong></p><p><strong>【108】：尽管去思考，挣扎， 痛苦，煎熬，烦恼吧！不然的话就称不上是真物–大老师</strong></p><p><strong>【109】：属于我们的样子总是会在某个地方产生分歧。那么真物…真正的我们又在哪里呢？–大老师</strong></p><p><strong>【110】：明明讨厌却还要勉强自己，只会令双方都不幸–大老师</strong></p><p><strong>【111】：如果能从别人那里得到自己期盼的东西，能够收获自己想要的东西的话，那我还是不作任何期盼和渴望了。因为不管是别人给予的东西，还是能够轻易收到的东西，那一定都是伪物，总有一天会失去···所以肯定会让人不断地追求下去。–大老师</strong></p><p><strong>【112】：自认为能够办到 所以自己做错了也不愿意承认是想把自己的失败敷衍过去 为此玩弄计策 玩文字游戏想要取得诺言图个安心 因为这样一来等到出错的时候就能推卸责任非常轻松啊.–大老师</strong></p><p><strong>【113】：如果失败也能称为是青春的象征的话，那么交友失败的人可谓是充满青春也不为过了吧。但是，他们却不会这么认为。 没有什么不可思议的。因为他们就是些利己主义的人。 那么，这应该算是欺瞒吧。谎言欺瞒秘密诈骗全都被如此差别对待。他们是邪恶。<br>总而言之，反过来说不讴歌青春的人才是真正的正义所在。我的结论就是–现充爆炸吧。–大老师</strong></p><h1 id="雪之下雪乃"><a href="#雪之下雪乃" class="headerlink" title="雪之下雪乃"></a><strong>雪之下雪乃</strong></h1><p><strong>【1】：只要亲密的人理解我就好了，别人怎么想我无所谓。–雪之下雪乃</strong></p><p><strong>【2】：最低限度都没有做到的人，没资格去羡慕有才能的人。 无法成功的人正是因为想不到成功的人花费了多少心血，才无法成功的啊。–雪之下雪乃</strong></p><p><strong>【3】：只是为了剷除敌人而努力，那努力并非能提升自我，所以不能解决问题。–雪之下雪乃</strong></p><p><strong>【4】：人无完人。弱小丑陋会因为妒忌立刻去排挤别人，令人惊异的是，越优秀的人却活得越艰辛呢。–雪之下雪乃</strong></p><p><strong>【5】：人只要有容身之处，就不必化作星星，迎来燃烧殆尽的悲惨结局。–雪之下雪乃</strong></p><p><strong>【6】：什么都创造不出来，什么都得不到，什么都给予不了，只不过是伪物。–雪之下雪乃</strong></p><p><strong>【7】：如果你只会吸气吐气的话，旁边的空调都比你有用多了。–雪之下雪乃</strong></p><p><strong>【8】：只有努力才能想出解决之道哦。–雪之下雪乃</strong></p><p><strong>【9】：我认为，要提高自我就应该挑战极限。–雪之下雪乃</strong></p><p><strong>【10】：本来，我们就搞不懂对方在想什么。因为即使互相认识，也不见得就一定能相互理解。–雪之下雪乃</strong></p><p><strong>【11】：什么都倾听和帮忙并不能解决问题。–雪之下雪乃</strong></p><p><strong>【12】：人会把太过痛苦的记忆封印起来呢。–雪之下雪乃</strong></p><p><strong>【13】：没有依靠的话，也就找不到自己的容身之处。只好四处躲藏，被水冲走，随波逐流，撞向无形的墙壁。–雪之下雪乃</strong></p><p><strong>【14】：我虽然会妄言和失言，但我绝不虚言。–雪之下雪乃</strong></p><p><strong>【15】：正因为察觉到自己劣于别人，才会有错觉被人看不起吧.–雪之下雪乃</strong></p><p><strong>【16】：用考试的分数和名次来衡量一个人的价值才是愚蠢的行为。 就算成绩再好，人品方面有缺陷的人也是有的。–雪之下雪乃</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何将Typora中的图片通过PicGo上传到Gitee上</title>
      <link href="/archives/f40e5a3f.html"/>
      <url>/archives/f40e5a3f.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-下载注册"><a href="#1-下载注册" class="headerlink" title="1.下载注册"></a>1.下载注册</h2><ul><li><strong>下载Typora</strong></li><li><strong>下载PicGo</strong></li><li><strong>在Gitee上注册账户</strong></li></ul><h2 id="2-开始使用"><a href="#2-开始使用" class="headerlink" title="2.开始使用"></a>2.开始使用</h2><h3 id="2-1创建仓库"><a href="#2-1创建仓库" class="headerlink" title="2.1创建仓库"></a>2.1创建仓库</h3><p><strong>在Gitee上创建存放图片的仓库</strong></p><p>==<strong>注意：在创建仓库时必须选择开源且选择单分支，否作PicGo将无法上传图片到Gitee</strong>==</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271747023.png" alt="image-20220302094305266"></p><h3 id="2-2配置PicGo"><a href="#2-2配置PicGo" class="headerlink" title="2.2配置PicGo"></a>2.2配置PicGo</h3><h4 id="2-2-1安装插件"><a href="#2-2-1安装插件" class="headerlink" title="2.2.1安装插件"></a>2.2.1安装插件</h4><p><strong>首先在PicGo的插件设置中搜索gitee，安装gitee-uploader</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271747039.png" alt="image-20220302094457544"></p><h4 id="2-2-2配置插件"><a href="#2-2-2配置插件" class="headerlink" title="2.2.2配置插件"></a>2.2.2配置插件</h4><p><strong>在<code>repo</code>处填写你的仓库位置，在<code>gitee</code>中仓库对应的网址为<code>gitee.com/仓库位置</code>,例如下图中方框部分即为仓库位置：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271747672.png" alt="image-20220302094823613"></p><p><strong>在<code>token</code>处填写你申请的个人令牌。</strong></p><h4 id="2-2-3申请Token"><a href="#2-2-3申请Token" class="headerlink" title="2.2.3申请Token"></a>2.2.3申请Token</h4><p><strong>在<code>gitee</code>中点击<code>头像</code>-&gt;<code>设置</code>在<code>安全设置</code>处<code>私人令牌</code>处申请<code>token</code></strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271748630.png" alt="image-20220302095043136"></p><p><strong>填写完成单击<code>确定</code>并<code>设为默认图床</code>即可</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271748398.png" alt="image-20220302094848725"></p><h3 id="2-3配置Typora"><a href="#2-3配置Typora" class="headerlink" title="2.3配置Typora"></a>2.3配置Typora</h3><p><strong>在Typora软件中依次打开<code>文件</code>-&gt;<code>偏好设置</code>-&gt;<code>图像</code></strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271748736.png" alt="image-20220302095304779"></p><p><strong>使用HEXO写博客的读者在开启了HEXO的资源文件夹时建议将Typora的图像设置中的<code>插入图片时</code>选项更改为<code>复制到指定路径</code>,并勾选<code>对本地位置上的图片应用上述规则</code>和<code>对网络位置的图片应用上述规则</code>以及<code>允许根据YAML设置自动上传图片</code>,在<code>上传服务设定</code>中选择<code>PicGo(app)</code>选项，<code>PicGo路径</code>选择<code>PicGo</code>的安装目录，可以通过验证图片上传选项来验证是否配置成功。配置成功之后在整篇文章写完之后可以在<code>Typora</code>中依次点击<code>格式</code>-&gt;<code>图像</code>-&gt;<code>上传所有本地图像</code>进行上传。</strong></p><p><strong>至此，所有的配置都完成了</strong></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> typora </tag>
            
            <tag> picgo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蛮神歌</title>
      <link href="/archives/be483b3f.html"/>
      <url>/archives/be483b3f.html</url>
      
        <content type="html"><![CDATA[<h1 id="蛮神歌"><a href="#蛮神歌" class="headerlink" title="蛮神歌"></a>蛮神歌</h1><p><strong>我出生之初尚无为，<br>我出生之后蛮已衰!<br>天不仁兮降乱离，<br>地不仁兮使我乌山殇!<br>干戈起兮月碎纷非,<br>陌于南兮家路哀悲!<br>若天有眼兮何不见我永世沉沦黑？<br>若神有灵兮何事分我天南海北离？<br>我不负天兮天何让我不见夜之黑？<br>我不负神兮神何殛我血肉忆纷飞！<br>无日无夜兮思我乡土,<br>流离路芒兮难见苍天苦!<br>我思亲兮魂众何有,<br>魂思我兮阴死路心断愁!<br>真假难辨兮乌山在天荒!<br>生死天地兮我身何方!<br>泣血仰头兮何惜一命逆沧桑!<br>天无眼兮我踏天以目自封苍！<br>神无灵兮我誓言屠神立帝方！<br>气运加身兮我定去手刃帝天桑!<br>蛮魂归凝兮此生血染仙苍千万亡！<br>散尽此生歌蛮殇，<br>凭此意灭尽仙族又何妨！</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>将Hexo部署到Gitee上</title>
      <link href="/archives/c01f3c7.html"/>
      <url>/archives/c01f3c7.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-注册码云"><a href="#1-注册码云" class="headerlink" title="1.注册码云"></a>1.注册码云</h2><h2 id="2-新建仓库"><a href="#2-新建仓库" class="headerlink" title="2.新建仓库"></a>2.新建仓库</h2><p><strong>填写相关信息。注意的是仓库名称一定要填写为你登录码云账户的那个用户名。其他的都不行。<br>重要的事说三遍：</strong></p><ul><li><strong>仓库名称一定要填写为你登录码云账户的那个用户名。</strong></li><li><strong>仓库名称一定要填写为你登录码云账户的那个用户名。</strong></li><li><strong>仓库名称一定要填写为你登录码云账户的那个用户名。</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271745152.png" alt="image-20220303212257569"></p><p><img src="https://gitee.com/luo-cheng49/images/raw/master/202203032123729.png" alt="image-20220303212328666"></p><h2 id="3-添加公钥"><a href="#3-添加公钥" class="headerlink" title="3.添加公钥"></a>3.添加公钥</h2><p><strong>点击<code>管理</code>—&gt;<code>部署公钥管理</code>—&gt;<code>新增部署公钥</code>，添加公钥的内容也是之前部署到<a href="https://so.csdn.net/so/search?q=GitHub&spm=1001.2101.3001.7020">GitHub</a>上添加的公钥</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271745686.png" alt="image-20220303212437420"></p><p><img src="https://gitee.com/luo-cheng49/images/raw/master/202203032124474.png" alt="image-20220303212457421"></p><ul><li>公钥标题：自定义</li><li>公钥内容：可以使用之前连接GitHub的公钥，在本地的C:\Users\你的电脑账户名.ssh，我的为<code>C:\Users\LEGION\.ssh</code>，用文本编辑器打开<code>id_rsa.pub</code>，将里面的内容复制粘贴到此处即可。</li></ul><h2 id="4-部署到码云"><a href="#4-部署到码云" class="headerlink" title="4.部署到码云"></a>4.部署到码云</h2><p><strong>将项目地址复制粘贴到配置文件_config.yml上，如下图所示：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271746185.png" alt="image-20220303212641610"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271746216.png" alt="image-20220303212731066"></p><p><strong>在blog根目录点击Git Bash Here，执行代码：</strong><code>hexo clean &amp;&amp; g -d</code></p><p><strong>部署成功后，点击<code>服务</code>—&gt;<code>Gitee Pages</code>，进入下面的页面：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271746129.png" alt="image-20220303213041661"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271746460.png" alt="image-20220303213104230"></p><p><strong>启动之后就可以点击网址访问了。需要注意的是码云支持的自定义域名一年是99块。没钱，只能用分配的域名了。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271746665.png" alt="image-20220303213213913"></p><p><strong>这里再安装一个hexo的插件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save            # 安装git插件</span><br><span class="line">git config --global user.email *********@qq.com # 设置gitee邮箱（gitee的注册邮箱）</span><br><span class="line">git config --global user.name &#x27;****&#x27;            # 设置用户名（git的注册昵称）</span><br><span class="line">hexo deploy                                     # 上传到gitee</span><br><span class="line"># 在上传时，需要再次输入gitee的注册邮箱作为username，账户密码作为password</span><br></pre></td></tr></table></figure><p><strong>这样，博客就部署到Gitee上了</strong></p><h2 id="5-更新博客"><a href="#5-更新博客" class="headerlink" title="5.更新博客"></a>5.更新博客</h2><p><strong>每次修改了博客，不仅要在Git Bash Here里面上传，还需要在<code>Git Page</code>里面更新一下</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271746864.png" alt="image-20220303224703032"></p><p><strong>解决hexo博客网页无法使用图片问题</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save  # 安装hexo插件</span><br><span class="line"># 这里还要注意修改_config.yml中的一个点</span><br><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora书写方法</title>
      <link href="/archives/f918e375.html"/>
      <url>/archives/f918e375.html</url>
      
        <content type="html"><![CDATA[<p>==（1）标题==</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>==（2）字体==</p><p><strong>加粗</strong></p><p><em>斜体</em></p><p><em><strong>斜体加粗</strong></em></p><p><del>删除线</del></p><p>==高亮==</p><p>我是^上标^</p><p>我是<del>下标</del></p><p>==（3）列表==</p><ul><li><p>一二三四五</p><ul><li><p>上山打老虎</p><ul><li><p>老虎没打到</p><ul><li>打到小松鼠</li></ul></li></ul></li></ul></li></ul><ol><li><p>一二三四五</p></li><li><p>上山打老虎</p></li><li><p>老虎没打到</p></li><li><p>打到小松鼠</p></li></ol><p>==（4）表格==</p><table><thead><tr><th>Mon</th><th>TUE</th><th>WEN</th><th>THU</th><th>FRI</th></tr></thead><tbody><tr><td>上山</td><td>上山</td><td>上山</td><td>上山</td><td>上山</td></tr><tr><td>打老虎</td><td>打老虎</td><td>打老虎</td><td>打老虎</td><td>打老虎</td></tr></tbody></table><p>==（5）引用==</p><blockquote><p>一二三四五</p></blockquote><blockquote><blockquote><p>上山打老虎</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>老虎没打到</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><blockquote><p>打到小松鼠</p></blockquote></blockquote></blockquote></blockquote><p>==（6）分割线==</p><hr><p>==（7）代码==</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271745593.png" alt="image-20220228210641593"></p><p><code>我是代码</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">我是代码框</span><br><span class="line"></span><br><span class="line"> 作者：你的乖女儿不乖 https://www.bilibili.com/read/cv6491991?spm_id_from=333.788.b_636f6d6d656e74.7 出处：bilibili</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> typora </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js安装</title>
      <link href="/archives/b5446670.html"/>
      <url>/archives/b5446670.html</url>
      
        <content type="html"><![CDATA[<h1 id="Node-js安装"><a href="#Node-js安装" class="headerlink" title="Node.js安装"></a>Node.js安装</h1><ol><li><p>node官网下载安装包<br><a href="https://nodejs.org/en/">https://nodejs.org/en/</a><br><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271744209.png" alt="image-20230126115430733"></p></li><li><p>直接进行下载安装</p></li><li><p>环境变量配置</p><ul><li>右键电脑，点击属性</li><li>点击高级系统设置</li><li>点击环境变量</li><li>点击系统变量的新建变量，创建变量名为NODE_PATH，值为node.js安装路径</li><li><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271744943.png" alt="image-20230126120015330"></li><li>点击系统变量中的path</li><li>新建%NODE_PATH%</li><li><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271744474.png" alt="image-20230126120203519" style="zoom:67%;" /></li></ul></li></ol><h3 id="注意：如果不配置环境变量，可能会导致使用在git中使用hexo命令出现如下错误"><a href="#注意：如果不配置环境变量，可能会导致使用在git中使用hexo命令出现如下错误" class="headerlink" title="注意：如果不配置环境变量，可能会导致使用在git中使用hexo命令出现如下错误"></a>注意：如果不配置环境变量，可能会导致使用在git中使用hexo命令出现如下错误</h3><h3 id="bash-hexo-command-not-found"><a href="#bash-hexo-command-not-found" class="headerlink" title="bash: hexo: command not found"></a>bash: hexo: command not found</h3><p>依次输入命令 <code>node -v</code> 和 <code>npm -v</code> 看看是否有相关版本信息</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271744116.png" alt="image-20230126120420419" style="zoom:67%;" /><p>出现了版本信息就证明 nodejs 和 npm 是没有问题的，那么就应该是环境变量的配置问题了</p><p>按照上述方法进行环境变量配置</p><p>环境变量添加好了之后重新打开 git 即可运行 hexo 命令，如果此时仍然无法执行 hexo 命令，那就只能拿出终极绝招了，运行命令 <code>npm install hexo-cli -g</code> 重新安装 hexo 即可！</p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node.js </tag>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA中web项目DefaultServlet标红怎么解决?</title>
      <link href="/archives/8a5f9afd.html"/>
      <url>/archives/8a5f9afd.html</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA中web项目Servlet标红怎么解决"><a href="#IDEA中web项目Servlet标红怎么解决" class="headerlink" title="IDEA中web项目Servlet标红怎么解决?"></a>IDEA中web项目Servlet标红怎么解决?</h1><h2 id="导入tomcat依赖"><a href="#导入tomcat依赖" class="headerlink" title="导入tomcat依赖"></a>导入tomcat依赖</h2><p><strong>直接将tomcat的jar包导入即可。如下图所示：</strong></p><ul><li><p><strong>选择Project Structure（快捷键Ctrl+Alt+Shift+S）</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271744556.png" alt="image-20220322152416732"></p></li><li><p><strong>选中工程或对应的Module，选中Dependencies标签，点右上角小加号，选中第二项“Library”，添加依赖，选中Tomcat进行添加</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271744165.png" alt="image-20220322152514354"></p></li></ul><p><strong>大功告成！！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Intellij IDEA创建Java web项目</title>
      <link href="/archives/9f187caa.html"/>
      <url>/archives/9f187caa.html</url>
      
        <content type="html"><![CDATA[<h1 id="Intellij-IDEA2021-1创建Java-web项目"><a href="#Intellij-IDEA2021-1创建Java-web项目" class="headerlink" title="Intellij IDEA2021.1创建Java web项目"></a>Intellij IDEA2021.1创建Java web项目</h1><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271738321.png" alt="image-20220320215618426"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271738977.png" alt="image-20220320215733776"></p><p>==记住不要选择java Enterprise，否则创建的web工程会带有maven，就不是我们想要的javaweb项目了==</p><p><strong>点击next</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271738410.png" alt="image-20220320215816806"></p><p><strong>填写项目的名称以及位置，finish</strong></p><p><img src="https://gitee.com/luo-cheng49/images/raw/master/202203202159592.png" alt="image-20220320215903531"></p><p><strong>右键项目，选择add framework support</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739802.png" alt="image-20220320215948715"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739386.png" alt="image-20220320220011340"></p><p><strong>完成之后，项目结构变成了这样</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739121.png" alt="image-20220320220046480"></p><p><strong>接下来，我们在WEB-INF下创建classes,lib文件夹</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739578.png"></p><p><strong>编辑项目结构</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739644.png" alt="image-20220320220220408"></p><p><strong>将output path的路径改成classes文件夹的路径</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739633.png" alt="image-20220320220300538"></p><p><strong>接下来点击dependencies，选择加号，选择jars or directories</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739355.png" alt="image-20220320220337725"></p><p><strong>点击后，他会弹出一个文件选择框，这里选择lib文件所在位置，之后按照下面这张图</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739436.png" alt="image-20220320220403078"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739966.png" alt="image-20220320220422935"></p><p><strong>完成以上这些，我们配置web容器（注意：这里是</strong>tomcat Server**,不是tomcatEE Server）**</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739781.png" alt="image-20220320220508959"></p><p><strong>第一步配置tomcat所在路径，第二步配置jre/jdk,第三步填写web容器名字，这里可以写tomcat+版本号</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271739920.png" alt="image-20220320220541886"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271740083.png" alt="image-20220320220558589"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271740921.png" alt="image-20220320220617653"></p><p><strong>完成后，点击OK即可<br>最后点击右上角的绿色三角形启动容器</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271740138.png" alt="image-20220320220643510"></p><p><strong>大功告成！！</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271740059.png" alt="QQ图片20220320194759"></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA右键新建new没有servlet选项</title>
      <link href="/archives/4ab8c20d.html"/>
      <url>/archives/4ab8c20d.html</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA右键新建new没有servlet选项"><a href="#IDEA右键新建new没有servlet选项" class="headerlink" title="IDEA右键新建new没有servlet选项"></a>IDEA右键新建new没有servlet选项</h1><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271736754.png" alt="image-20220323110335588"></p><h2 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h2><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271736929.png" alt="image-20220323110424627"></p><h2 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h2><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271736650.png" alt="image-20220323110456629"></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Intellij IDEA编写数据库对应的JavaBean对象</title>
      <link href="/archives/ffb33e90.html"/>
      <url>/archives/ffb33e90.html</url>
      
        <content type="html"><![CDATA[<h1 id="Intellij-IDEA编写数据库对应的JavaBean对象"><a href="#Intellij-IDEA编写数据库对应的JavaBean对象" class="headerlink" title="Intellij IDEA编写数据库对应的JavaBean对象"></a>Intellij IDEA编写数据库对应的JavaBean对象</h1><h3 id="新建一个Java文件"><a href="#新建一个Java文件" class="headerlink" title="新建一个Java文件"></a>新建一个Java文件</h3><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271734850.png" alt="image-20220322225755963"></p><h3 id="写我们需要的属性"><a href="#写我们需要的属性" class="headerlink" title="写我们需要的属性"></a>写我们需要的属性</h3><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271734538.png" alt="image-20220322225900496"></p><h3 id="生成set和get方法"><a href="#生成set和get方法" class="headerlink" title="生成set和get方法"></a>生成set和get方法</h3><p><strong>笔记本：Fn+Alt+F12</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271734794.png" alt="image-20220322230043374"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271734851.png" alt="image-20220322230126179"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271734255.png" alt="image-20220322230818867"></p><h3 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString()"></a>toString()</h3><p><strong>笔记本：Fn+Alt+F12</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271735366.png" alt="image-20220322230522421"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271735180.png" alt="image-20220322230629398"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271735631.png" alt="image-20220322230802031"></p><h3 id="有参和无参构造"><a href="#有参和无参构造" class="headerlink" title="有参和无参构造"></a>有参和无参构造</h3><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271735562.png" alt="image-20220322230924490"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271735020.png" alt="image-20220322230943078"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271735308.png" alt="image-20220322231003199"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271735313.png" alt="image-20220322231034699"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271735326.png" alt="image-20220322231053597"></p><p><strong>大功告成！！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> JavaBean </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常见错误</title>
      <link href="/archives/9d3ff6cd.html"/>
      <url>/archives/9d3ff6cd.html</url>
      
        <content type="html"><![CDATA[<h2 id="hexo常见错误"><a href="#hexo常见错误" class="headerlink" title="hexo常见错误"></a>hexo常见错误</h2><ol><li><p>使用hexo s命令报错</p><p>ERROR {undefined<br>  err: YAMLException: end of the stream or a document separator is expected at line 6, column 1:</p><pre><code>  - 博客  ^</code></pre><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271733528.png" alt="image-20220301091033227"></p><p>解决方法：</p><p>新写的md文件不是由命令生成的，而是复制进去的，首部有语法错误，可以按照以下格式修改：</p></li></ol><hr><p>   title:    Hello World<br>   date:   2013/7/13 20:46:25<br>   你的内容</p><p><strong>==注意，冒号后面必须有空格==</strong></p><hr><p>   <img src="https://gitee.com/luo-cheng49/images/raw/master/image-20220301091239426.png" alt="image-20220301091239426"></p><p>   然后成功了</p><p>   <img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271734201.png" alt="image-20220301091305778"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git安装</title>
      <link href="/archives/703a2c62.html"/>
      <url>/archives/703a2c62.html</url>
      
        <content type="html"><![CDATA[<h1 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h1><p><strong>下载地址为 <a href="https://git-scm.com/">git-scm.com</a>或者<a href="http://gitforwindows.org/">gitforwindows.org</a></strong></p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271723306.png" alt="image-20230126113350908" style="zoom:50%;" /><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271723742.png" alt="image-20230126113418206" style="zoom:50%;" /><p>双击下载后的 <code>Git-2.39.1-64-bit.exe</code>，开始安装，这个界面主要展示了 GPL 第 2 版协议<a href="https://blog.csdn.net/mukes/article/details/115693833#fn1">1</a>的内容，点击 [next] 到第二步。</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271723479.png" alt="image-20230126113657765" style="zoom: 67%;" /><h4 id="选择安装目录"><a href="#选择安装目录" class="headerlink" title="选择安装目录"></a>选择安装目录</h4><p>可点击 “Browse…” 更换目录，也可直接在方框里面改，我一般直接将 “C” 改为 “F:Program Files”，这样就直接安装在 F 盘的ProGram Files里了。点击 [next] 到第三步。</p><h4 id="选择安装组件"><a href="#选择安装组件" class="headerlink" title="选择安装组件"></a>选择安装组件</h4><p>图中这些英文都比较简单，我已经把大概意思翻译出来了，大家根据自己的需要选择勾选。点击 [next] 到第四步。</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271723088.png" alt="image-20230126113839830" style="zoom:67%;" /><h4 id="选择开始菜单文件夹"><a href="#选择开始菜单文件夹" class="headerlink" title="选择开始菜单文件夹"></a>选择开始菜单文件夹</h4><p>方框内 Git 可改为其他名字，也可点击 “<code>Browse...</code>” 选择其他文件夹或者给”<code>Don&#39;t create a Start Menu folder</code>“ 打勾不要文件夹，点击 [next] 到第五步。</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724208.png" alt="image-20230126113927613" style="zoom:67%;" /><p>安装成功后在开始菜单里的图如下：</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724467.png" alt="image-20230126113950902" style="zoom:50%;" /><h4 id="选择-Git-默认编辑器"><a href="#选择-Git-默认编辑器" class="headerlink" title="选择 Git 默认编辑器"></a>选择 Git 默认编辑器</h4><p>Git 安装程序里面内置了 10 种编辑器供你挑选，比如 Atom、Notepad、Notepad++、Sublime Text、Visual Studio Code、Vim 等等，默认的是 Vim ，选择 Vim 后可以直接进行到下一步，但是 Vim 是纯命令行，操作有点难度，需要学习。如果选其他编辑器，则还需要去其官网安装后才能进行下一步。</p><p>下图为默认编辑器 Vim.<strong>我选择的Visual studio code</strong>可直接点击 [next] 到第六步。</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724991.png" alt="image-20230126114043376" style="zoom:67%;" /><h4 id="决定初始化新项目-仓库-的主干名字"><a href="#决定初始化新项目-仓库-的主干名字" class="headerlink" title="决定初始化新项目(仓库)的主干名字"></a>决定初始化新项目(仓库)的主干名字</h4><p>第一种是让 Git 自己选择，名字是 master ，但是未来也有可能会改为其他名字；第二种是我们自行决定，默认是 main，当然，你也可以改为其他的名字。一般默认第一种，点击 [next] 到第七步。</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724261.png" alt="image-20230126114212502" style="zoom: 67%;" /><h4 id="调整你的-path-环境变量"><a href="#调整你的-path-环境变量" class="headerlink" title="调整你的 path 环境变量"></a>调整你的 path 环境变量</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724837.png" alt="image-20230126114239230" style="zoom:67%;" /><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Use Git from Git Bash only </span><br><span class="line">This is the most cautious choice as your PATH will not be modified at all. You w only be able to use the Git command line tools from Git Bash.</span><br><span class="line">仅从 Git Bash 使用 Git</span><br><span class="line">这是最谨慎的选择，因为您的 PATH 根本不会被修改。您将只能使用 Git Bash 中的 Git 命令行工具。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Git from the command line and also from 3rd-party software</span><br><span class="line">(Recommended) This option adds only some minimal Git wrappers to your PATH to avoid cluttering your environment with optional Unix tools.</span><br><span class="line">You will be able to use Git from Git Bash, the Command Prompt and the Windov PowerShell as well as any third-party software looking for Git in PATH.</span><br><span class="line">从命令行以及第三方软件进行 Git</span><br><span class="line">（推荐）此选项仅将一些最小的 Git 包装器添加到PATH中，以避免使用可选的 Unix 工具使环境混乱。</span><br><span class="line">您将能够使用 Git Bash 中的 Git，命令提示符和 Windov PowerShell 以及在 PATH 中寻找 Git 的任何第三方软件。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Use Git and optional Unix tools from the Command Prompt </span><br><span class="line">Both Git and the optional Unix tools will be added to your PATH.</span><br><span class="line">Warning: This will override Windows tools like &quot;find&quot;and &quot;sort&quot;. Only use this option if you understand the implications.</span><br><span class="line">使用命令提示符中的 Git 和可选的 Unix 工具</span><br><span class="line">Git 和可选的 Unix 工具都将添加到您的 PATH 中。</span><br><span class="line">警告：这将覆盖 Windows 工具，例如 &quot;find&quot; and &quot;sort&quot;. 仅在了解其含义后使用此选项。</span><br></pre></td></tr></table></figure><p>第一种是仅从 Git Bash 使用 Git。这个的意思就是你只能通过 Git 安装后的 Git Bash 来使用 Git ，其他的什么命令提示符啊等第三方软件都不行。</p><p>第二种是从命令行以及第三方软件进行 Git。这个就是在第一种基础上进行第三方支持，你将能够从 Git Bash，命令提示符(cmd) 和 Windows PowerShell 以及可以从 Windows 系统环境变量中寻找 Git 的任何第三方软件中使用 Git。<strong>推荐使用这个。</strong></p><p>第三种是从命令提示符使用 Git 和可选的 Unix 工具。选择这种将覆盖 Windows 工具，如 “ find 和 sort ”。只有在了解其含义后才使用此选项。<strong>一句话，适合比较懂的人折腾。</strong></p><h4 id="选择-SSH-执行文件"><a href="#选择-SSH-执行文件" class="headerlink" title="选择 SSH 执行文件"></a>选择 SSH 执行文件</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724100.png" alt="image-20230126114345805" style="zoom:67%;" /><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Use bundled OpenSSH </span><br><span class="line">This uses ssh. exe that comes with Git.</span><br><span class="line">使用捆绑的 OpenSSH</span><br><span class="line">这使用的 ssh.exe 是 Git 自带的 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Use (Tortoise) Plink </span><br><span class="line">To use PuTTY, specify the path to an existing copy of (Tortoise) Plink.exe</span><br><span class="line">Set ssh. variant for Tortoise Plink </span><br><span class="line">使用 TortoisePlink (注，这是一个软件)</span><br><span class="line">要使用 PuTTY，请指定 TortoisePlink.exe 的现有副本的路径</span><br><span class="line">为 TortoisePlink 设置 ssh.variant</span><br><span class="line"></span><br><span class="line">Use external OpenSSH </span><br><span class="line">NEW! This uses an external ssh. exe. Git will not install its own OpenSSH</span><br><span class="line">(and related) binaries but use them as found on the PATH.</span><br><span class="line">使用外部 OpenSSH</span><br><span class="line">新！这使用外部 ssh.exe 文件。 </span><br><span class="line">Git 不会安装自己的 OpenSSH（和相关）二进制文件，而是使用在环境变量 PATH 中找到的它们。</span><br></pre></td></tr></table></figure><blockquote><p>注：这是一个新功能，我 2021-4-17 安装的 2.31.1 版本并没有这个选项，先按默认的来吧，先填个坑，有机会再补充</p></blockquote><h4 id="选择HTTPS后端传输"><a href="#选择HTTPS后端传输" class="headerlink" title="选择HTTPS后端传输"></a>选择HTTPS后端传输</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724380.png" alt="image-20230126114427521" style="zoom:67%;" /><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">use the OpenSSL library </span><br><span class="line">Server certificates will be validated using the ca-bundle. crt file.</span><br><span class="line">使用 OpenSSL 库</span><br><span class="line">服务器证书将使用 ca-bundle.crt 文件进行验证。</span><br><span class="line"></span><br><span class="line">Use the native Windows Secure Channel library </span><br><span class="line">Server certificates will be validated using Windows Certificate Stores.</span><br><span class="line">This option also allows you to use your company&#x27;s internal Root CA certificates distributed e.g. via Active Directory Domain Services.</span><br><span class="line">使用本机 Windows 安全通道库</span><br><span class="line">服务器证书将使用 Windows 证书存储进行验证。</span><br><span class="line">此选项还允许您使用公司内部分发的内部根 CA 证书，例如通过 Active Directory 域服务。</span><br></pre></td></tr></table></figure><p>点击 [next] 到第十步。</p><h4 id="配置行尾符号转换"><a href="#配置行尾符号转换" class="headerlink" title="配置行尾符号转换"></a>配置行尾符号转换</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724681.png" alt="image-20230126114525711" style="zoom:67%;" /><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Checkout Windows-style, commit Unix-style line endings </span><br><span class="line">Git will convert LF to CRLF when checking out text files. </span><br><span class="line">When committing text files, CRLF will be converted to LF. For cross-platform projects, this is the recommended setting on Windows(&quot;core. autocrif&quot;is set to &quot;true&quot;).</span><br><span class="line">签出 Windows 样式，提交 Unix 样式的行结尾</span><br><span class="line">Git 签出文本文件时，会将 LF 转换为 CRLF。</span><br><span class="line">提交文本文件时，CRLF 将转换为 LF。</span><br><span class="line">对于跨平台项目，这是 Windows 上的建议设置（&quot;core.autocrif&quot; 设置为 &quot;true&quot;）。</span><br><span class="line"></span><br><span class="line">Checkout as-is, commit Unix-style line endings </span><br><span class="line">Git will not perform any conversion when checking out text files. </span><br><span class="line">When committing text files, CRLF will be converted to LF. For cross-platform projects, this is the recommended setting on Unix(&quot;core.autocrif&quot; is set to &quot;input&quot;).</span><br><span class="line">按原样签出，提交 Unix 样式的行结尾</span><br><span class="line">Git 在签出文本文件时不会执行任何转换。提交文本文件时，CRLF 将转换为 LF。</span><br><span class="line">对于跨平台项目，这是在 Unix 上的建议设置（&quot;core.autocrif&quot; 设置为 &quot;input&quot;）。</span><br><span class="line"></span><br><span class="line">Checkout as-is, commit as-is </span><br><span class="line">Git will not perform any conversions when checking out or committing text files. </span><br><span class="line">Choosing this option is not recommended for cross-platform projects(&quot;core. autocrif&quot;is set to &quot;false&quot;).</span><br><span class="line">按原样签出，按原样提交</span><br><span class="line">Git 在签出或提交文本文件时不会执行任何转换。</span><br><span class="line">不建议跨平台项目选择此选项（&quot;core.autocrif&quot; 设置为 &quot;false&quot;）。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这三种选择分别是：<br><code>签出 Windows 样式，提交 Unix 样式的行结尾。</code><br><code>按原样签出，提交Unix样式的行结尾。</code><br><code>按原样签出，按原样提交。</code></p><p>选择第一种即可。</p><p>点击 [next] 到第十一步。</p><h4 id="配置终端模拟器以与-Git-Bash-一起使用"><a href="#配置终端模拟器以与-Git-Bash-一起使用" class="headerlink" title="配置终端模拟器以与 Git Bash 一起使用"></a>配置终端模拟器以与 Git Bash 一起使用</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724001.png" alt="image-20230126114647586" style="zoom:67%;" /><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Use MinTTY(the default terminal of MSYS2) </span><br><span class="line">Git Bash will use MinTTY as terminal emulator, which sports a resizable window</span><br><span class="line">non-rectangular selections and a Unicode font.Windows console programs(such</span><br><span class="line">as interactive Python) must be launched via &#x27;winpty&#x27; to work in MinTTY.</span><br><span class="line">使用 MinTTY（MSYS2的默认终端）</span><br><span class="line">Git Bash 将使用 MinTTY 作为终端仿真器，该仿真器具有可调整大小的窗口非矩形选择和 Unicode 字体。</span><br><span class="line">Windows 控制台程序（例如交互式 Python）必须通过 &quot;winpty&quot; 启动才能在 MinTTY 中运行。</span><br><span class="line"></span><br><span class="line">Use Windows&#x27; default console </span><br><span class="line">window Git will use the default console window of Windows(&quot;cmd.exe&quot;), which works v</span><br><span class="line">with Win32 console programs such as interactive Python or node. js, but has a</span><br><span class="line">very limited default scroll-back,needs to be configured to use a Unicode font in </span><br><span class="line">order to display non-ASCII characters correctly, and prior to Windows 10 its </span><br><span class="line">window was not freely resizable and it only allowed rectangular text selections.&lt;br&gt;</span><br><span class="line">使用 Windows 的默认控制台窗口</span><br><span class="line">Git 将使用 Windows 的默认控制台窗口（&quot;cmd.exe&quot;），该窗口可与 Win32 控制台程序（例如交互式Python 或 </span><br><span class="line">node.js）一起使用，但默认回滚非常有限，需要将其配置为使用 Unicode 字体才能正确显示非 ASCII 字符，并且在 </span><br><span class="line">Windows 10 之前，其窗口不可随意调整大小，并且仅允许选择矩形文本。</span><br></pre></td></tr></table></figure><p>建议选择第一种，MinTTY 3功能比 cmd 多，cmd 只不过 比 MinTTY 更适合处理 Windows 的一些接口问题，这个对 Git 用处不大，除此之外 Windows 的默认控制台窗口（cmd）有很多劣势，比如 cmd 具有非常有限的默认历史记录回滚堆栈和糟糕的字体编码等等。<br>相比之下，MinTTY 具有可调整大小的窗口和其他有用的可配置选项，可以通过右键单击的工具栏来打开它们 git-bash 。点击 [next] 到第十二步。</p><h4 id="选择默认的-“git-pull”-行为"><a href="#选择默认的-“git-pull”-行为" class="headerlink" title="选择默认的 “git pull” 行为"></a>选择默认的 “git pull” 行为</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724878.png" alt="image-20230126114747255" style="zoom:67%;" /><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ODefault(fast-forward or merge)</span><br><span class="line">This is the standard behavior ofgit pull&quot;: fast-forward the current branch to </span><br><span class="line">the fetched branch when possible, otherwise create a merge commit.</span><br><span class="line">默认（快进或合并）</span><br><span class="line">这是 &quot;git pull&quot; 的标准行为：在可能的情况下将 当前分支 快进到 获取的分支，否则创建合并提交。</span><br><span class="line"></span><br><span class="line">ORebase Rebase the current branch onto the fetched branch. If there are no local </span><br><span class="line">commits to rebase, this is equivalent to a fast-forward.</span><br><span class="line">变基将当前分支变基到获取的分支上。如果没有本地提交要变基，则等同于快进。</span><br><span class="line"></span><br><span class="line">Oonly ever fast-forward </span><br><span class="line">Fast-forward to the fetched branch. Fail if that is not possible.</span><br><span class="line">只能快进快进到获取的分支。如果不可能，则失败。</span><br></pre></td></tr></table></figure><h4 id="选择一个凭证帮助程序"><a href="#选择一个凭证帮助程序" class="headerlink" title="选择一个凭证帮助程序"></a>选择一个凭证帮助程序</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271724365.png" alt="image-20230126114822875" style="zoom:67%;" /><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Git Credential Manager </span><br><span class="line">Use the cross-platform Git Credential Manager.</span><br><span class="line">See more information about the future of Git Credential Manager here.</span><br><span class="line">Git 凭证管理</span><br><span class="line">使用跨平台的 Git  凭证管理。</span><br><span class="line">在此处查看有关 Git 凭证管理未来的更多信息。</span><br><span class="line"></span><br><span class="line">None </span><br><span class="line">Do not use a credential helper.</span><br><span class="line">不使用凭证助手。</span><br></pre></td></tr></table></figure><p>一共两个选项：<br><code>Git 凭证管理</code><br><code>不使用凭证助手</code></p><p>第一个选项是提供<code>登录凭证</code>帮助的，Git 有时需要用户的凭据才能执行操作；例如，可能需要输入<code>用户名</code>和<code>密码</code>才能通过 HTTP 访问远程存储库（GitHub，GItLab 等等）。</p><p>登录图如下(属于第一个选项的，老图了)</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271725325.png" alt="image-20230126114905274" style="zoom:67%;" /><p>点击 [next] 进到十四步。</p><h4 id="配置额外的选项"><a href="#配置额外的选项" class="headerlink" title="配置额外的选项"></a>配置额外的选项</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271725621.png" alt="image-20230126114940723" style="zoom:67%;" /><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Enable file system caching </span><br><span class="line">File system data will be read in bulk and cached in memory for certain operations(&quot;core.fscache&quot; is set to &quot;true&quot;). </span><br><span class="line">This provides a significant performance boost.</span><br><span class="line">启用文件系统缓存</span><br><span class="line">将批量读取文件系统数据并将其缓存在内存中以进行某些操作（&quot;core.fscache” 设置为 &quot;true&quot;）。</span><br><span class="line">这可以显着提高性能。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enable symbolic links </span><br><span class="line">Enable symbolic links(requires the SeCreateSymbolicLink permission).</span><br><span class="line">Please note that existing repositories are unaffected by this setting.</span><br><span class="line">启用符号链接</span><br><span class="line">启用符号链接（需要SeCreateSymbolicLink权限）。</span><br><span class="line">请注意，现有存储库不受此设置的影响。</span><br></pre></td></tr></table></figure><p>有两个选项：<br>启用文件系统缓存<br>启用符号链接</p><p>启用文件系统缓存就是将批量读取文件系统数据并将其缓存在内存中以进行某些操作，可以显著提升性能。这个选项默认开启。<br>启用符号链接 ，符号链接是一类特殊的文件， 其包含有一条以绝对路径或者相对路径的形式指向其它文件或者目录的引用，类似于 Windows 的快捷方式，不完全等同 类Unix（如 Linux） 下的 符号链接。因为该功能的支持需要一些条件，所以默认不开启。</p><p>点击 [next] 到第十五步。</p><h4 id="配置实验性选项"><a href="#配置实验性选项" class="headerlink" title="配置实验性选项"></a>配置实验性选项</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271725024.png" alt="image-20230126115028548" style="zoom:67%;" /><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Enable experimental support for pseudo consoles.</span><br><span class="line">(NEW!) This allows running native console programs like Node or Python in a Git Bash window without using winpty, </span><br><span class="line">but it still has known bugs.</span><br><span class="line">启用对伪控制台的实验性支持。</span><br><span class="line">(新功能!) 这允许在不使用 winpty 的情况下在 Git Bash 窗口中运行诸如 Node 或 Python 之类的本机控制台程序，</span><br><span class="line">但是它仍然存在已知的 bug。</span><br><span class="line"></span><br><span class="line">Enable experimental built-in file system monitor</span><br><span class="line">(NEW!) Automatically run a built-in file system watcher, to speed up common operations such as &#x27; git status&#x27;, &#x27; git add&#x27;, &#x27; git commit&#x27;, etc in worktrees containing many files.</span><br><span class="line">启用实验性内置文件系统监视器</span><br><span class="line">（新！）自动运行内置文件系统监视器，以加快包含许多文件的工作树中的常见操作，例如 &#x27;git status&#x27;、&#x27;git add&#x27;、&#x27;git commit&#x27; 等.</span><br></pre></td></tr></table></figure><p>这是实验性功能，可能会有一些小错误之类的，建议不用开启。<br>点击 [install] 进行安装。</p><p>安装成功</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271725451.png" alt="image-20230126115102780" style="zoom:67%;" />]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件安装 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipes的配置</title>
      <link href="/archives/dbbe0d0f.html"/>
      <url>/archives/dbbe0d0f.html</url>
      
        <content type="html"><![CDATA[<h2 id="Eclipes的首次配置"><a href="#Eclipes的首次配置" class="headerlink" title="Eclipes的首次配置"></a>Eclipes的首次配置</h2><ul><li><p><strong>在桌面创建一个workplace，将之后所有eclipse创建的java文件放到这个文件夹中</strong></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271057739.png" alt="image-20220303162058165"></p><p><strong>双击eclipse，出现上图，点击Browse，选中你刚刚创建的文件夹，不要勾选红框按钮，不勾选可以多次点击eclipse显示多个eclipse页面，点击Launch</strong></p></li><li><p><strong>进入welcome界面，叉掉welcome界面，开始正式设置eclipse</strong>                                                                                    </p><p> ==<strong>需要注意的是，这次配置只能适用于当前工作文件夹，如果选择其他文件夹，则会需要重新配置</strong>==</p></li><li><p><strong>1.</strong><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271057587.png" alt="image-20220303163104018"></p></li><li><p><strong>2.在搜索框中搜索package，点击，会出现在下方，将其拖到左侧栏中</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271057242.png" alt="image-20220303163221441"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271716774.png" alt="image-20220303163341113"></p><p><strong>再搜索nav，出现Navigator，点击，会自动出现在左侧栏中</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271716787.png" alt="image-20220303163434145"></p><p><strong>将左侧栏中的Project Explore叉掉</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271057874.png" alt="image-20220303163551619"></p><p><strong>将右侧的outline拖到左侧栏中</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271057784.png" alt="image-20220303163637828"></p><p><strong>搜索console控制台，点击</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271057653.png" alt="image-20220303163719744"></p><p><strong>将下方的除了console之外的全部叉掉，也可以保留server</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271057913.png" alt="image-20220303163819982"></p></li><li><p><strong>3.点击window-&gt;preferences</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271057841.png" alt="image-20220303162800338"></p><p><strong>General-&gt;Workspace-&gt;选择UTF-8</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271058949.png" alt="image-20220303164002133"></p><p><strong>General-&gt;Appearance-&gt;Colors and Fonts-&gt;Basic-&gt;Text font-&gt;Edit    来设置字体</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271058881.png" alt="image-20220303164158422"></p><p><strong>window—&gt;perspective-&gt;Customize Perspective…</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271058105.png" alt="image-20220303164427643"></p><p><strong>点击Menu Visibility，出现如下图所示</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271058416.png" alt="image-20220303164611721"></p><p><strong>如下图所示，New里面十分混乱，所以需要我们自己对上图出现的New进行勾选</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271058725.png" alt="image-20220303164753848"></p><p><strong>先将New清理掉</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271058147.png" alt="image-20220303164950684"></p><p><strong>再勾选出我们需要的，比如   Java Project , Package , Class , Interface , Enum , Annotation ,                        JUnit Test Case , Folder ,   FileJSP File ,   Dynamic Web Project  ,   Servlet  ,  Filter  ,   Listener               Html File   ,   CSS File ,   XML File</strong></p></li><li><p><strong>4.最后，点击window-&gt;Perspective-&gt;Save Perspective As…，可以将我们刚刚设置好的配置保存下来，如果我们不小心将现有布局打乱，可以点击window-&gt;Perspective-&gt;Reset Perspective…重新还原成现有布局</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271058299.png" alt="image-20220303165611717"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> eclipse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA整合码云(gitee)或GitHub代码托管平台将本地项目上传</title>
      <link href="/archives/703a2c62.html"/>
      <url>/archives/703a2c62.html</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA整合码云-gitee-代码托管平台将本地项目上传"><a href="#IDEA整合码云-gitee-代码托管平台将本地项目上传" class="headerlink" title="IDEA整合码云(gitee)代码托管平台将本地项目上传"></a>IDEA整合码云(gitee)代码托管平台将本地项目上传</h1><h2 id="1-上传"><a href="#1-上传" class="headerlink" title="1.上传"></a>1.上传</h2><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271737843.png" alt="image-20220323191736642"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271737318.png" alt="image-20220323191824018"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271737740.png" alt="image-20220323191856720"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271737476.png" alt="image-20220323192021692"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271737038.png" alt="image-20220323192030918"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271737756.png" alt="image-20220323192223151"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271737874.png" alt="image-20220323192244753"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271737142.png" alt="image-20220323192308105"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271737930.png" alt="image-20220323192331161"></p><p> <img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271738362.png" alt="image-20220323192357062"></p><h2 id="2-下载"><a href="#2-下载" class="headerlink" title="2.下载"></a>2.下载</h2><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271738917.png" alt="image-20220323192511915"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271738127.png" alt="image-20220323192614284"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271738575.png" alt="image-20220323192654945"></p><p><strong>即可克隆到idea上</strong></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码上传 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitee代码克隆以及上传</title>
      <link href="/archives/4b45517f.html"/>
      <url>/archives/4b45517f.html</url>
      
        <content type="html"><![CDATA[<h1 id="Gitee代码克隆以及上传"><a href="#Gitee代码克隆以及上传" class="headerlink" title="Gitee代码克隆以及上传"></a>Gitee代码克隆以及上传</h1><h2 id="1-配置"><a href="#1-配置" class="headerlink" title="1.配置"></a>1.配置</h2><ul><li><p><strong>在桌面新建一个文件夹，右键Git Bash Here，配置git操作的用户名，邮箱</strong></p><p><code>git config --global user.name &quot;你的名字或者昵称&quot;</code></p><p><code>git config --global user.email &quot;你的邮箱&quot;</code></p></li><li><p><strong>配置ssh公钥</strong></p><p><strong>在Git Bash Here输入如下命令，生成SSH key</strong></p><p><code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code></p></li><li><p><strong>输入如下命令，复制刚才生成的SSH key</strong></p><p><code>cat ~/.ssh/id_rea.pub</code></p></li><li><p><strong>Gitee右上角个人设置-&gt;安全设置-&gt;SSH公钥-&gt;添加公钥，复制生成的public key，添加到当前账户中</strong></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271711562.png" alt="image-20220302211648111"></p></li><li><p><strong>测试SSH key是否配置成功</strong></p><p><code>$ssh -T git@gitee.com</code></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271712336.png" alt="image-20220302211850823"></p><p><strong>配置成功</strong></p></li></ul><h2 id="2-上传代码到Gitee"><a href="#2-上传代码到Gitee" class="headerlink" title="2.上传代码到Gitee"></a>2.上传代码到Gitee</h2><p><strong>在代码文件夹点击右键Git Bash Here</strong><br>输入如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;my commit&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p><strong>代码上传成功</strong></p><h2 id="3-克隆代码到本地"><a href="#3-克隆代码到本地" class="headerlink" title="3.克隆代码到本地"></a>3.克隆代码到本地</h2><p><strong>在Gitee所需要克隆的项目中找到克隆/下载，复制地址</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271712280.png" alt="image-20220302212552543"></p><p><strong>在桌面点击右键Git Bash Here,输入如下代码:</strong></p><p><code>git clone https://gitee.com/luo-cheng49/gitee-code-upload-and-download.git</code></p><p><strong>项目就克隆到桌面了</strong></p>]]></content>
      
      
      <categories>
          
          <category> gitee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> 代码上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse自动补全代码</title>
      <link href="/archives/95e15736.html"/>
      <url>/archives/95e15736.html</url>
      
        <content type="html"><![CDATA[<h1 id="Eclipse自动补全代码"><a href="#Eclipse自动补全代码" class="headerlink" title="Eclipse自动补全代码"></a>Eclipse自动补全代码</h1><h2 id="Java代码自动补全"><a href="#Java代码自动补全" class="headerlink" title="Java代码自动补全"></a>Java代码自动补全</h2><p><strong>依次点击Window –&gt; Perferences（选项设置） –&gt; Java –&gt; Editor（编辑） –&gt; Content Assist</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271710028.png" alt="image-20220328151930860"></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271710339.png" alt="image-20220328152120439"></p><h2 id="HTML代码自动补全"><a href="#HTML代码自动补全" class="headerlink" title="HTML代码自动补全"></a>HTML代码自动补全</h2><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271710929.png" alt="image-20220328152311252"></p><h2 id="XML代码自动补全"><a href="#XML代码自动补全" class="headerlink" title="XML代码自动补全"></a>XML代码自动补全</h2><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271710660.png" alt="image-20220328152408218"></p>]]></content>
      
      
      <categories>
          
          <category> eclipse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建（hexo篇）</title>
      <link href="/archives/78d13f96.html"/>
      <url>/archives/78d13f96.html</url>
      
        <content type="html"><![CDATA[<h1 id="个人博客搭建（Hexo-Github）"><a href="#个人博客搭建（Hexo-Github）" class="headerlink" title="个人博客搭建（Hexo+Github）"></a>个人博客搭建（Hexo+Github）</h1><h3 id="1、环境"><a href="#1、环境" class="headerlink" title="1、环境"></a>1、环境</h3><ul><li><p><strong>git安装</strong></p></li><li><p><strong>node.js安装</strong></p></li></ul><h3 id="2、hexo安装"><a href="#2、hexo安装" class="headerlink" title="2、hexo安装"></a>2、hexo安装</h3><p>在桌面右键点击Git Bash Here</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure><p>下载完成，输入hexo version</p><p>出现下图所示便代表下载成功</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742983.png" alt="image-20230126121520871" style="zoom:67%;" /><p>在桌面创建文件夹，用于设置博客，我取名叫MyBlog</p><p>在MyBlog文件夹中右键点击Git Bash Here</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>初始化完毕</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742848.png" alt="image-20230126121829039" style="zoom:67%;" /><p>安装依赖，继续输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>可以开始使用博客</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="3、hexo配置"><a href="#3、hexo配置" class="headerlink" title="3、hexo配置"></a>3、hexo配置</h3><h4 id="1、在GitHub中创建仓库"><a href="#1、在GitHub中创建仓库" class="headerlink" title="1、在GitHub中创建仓库"></a>1、在GitHub中创建仓库</h4><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742544.png" alt="image-20230126122242561" style="zoom:67%;" /><h4 id="2、在git中设置用户名密码"><a href="#2、在git中设置用户名密码" class="headerlink" title="2、在git中设置用户名密码"></a>2、在git中设置用户名密码</h4><p>在桌面右键Git Bash Here</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;luocheng49&quot;</span><br><span class="line">//这是github里你的名字</span><br><span class="line">git config --global user.email &quot;2855037844@qq.com&quot;</span><br><span class="line">//这是创建GitHub使用的邮箱</span><br></pre></td></tr></table></figure><h4 id="3、在visual-studio-code中打开MyBLog文件夹"><a href="#3、在visual-studio-code中打开MyBLog文件夹" class="headerlink" title="3、在visual studio code中打开MyBLog文件夹"></a>3、在visual studio code中打开MyBLog文件夹</h4><p>打开_config.yml</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742378.png" alt="image-20230126122731392" style="zoom: 50%;" /><p>修改参数</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742762.png" alt="image-20230126122811544" style="zoom:67%;" /><blockquote><p>repo: <a href="mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#x68;&#x75;&#x62;&#x2e;&#x63;&#x6f;&#x6d;">&#x67;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#x68;&#x75;&#x62;&#x2e;&#x63;&#x6f;&#x6d;</a>:luocheng49/luocheng49.github.io.git</p><p>初次使用上面网址作为repo，会报错</p></blockquote><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742487.png" alt="image-20230126123058662" style="zoom:67%;" /><p>原因是没有设置ssh密钥</p><p>解决办法：</p><ol><li><p>删除.SSH文件下的known_hosts(.SSH在C:\Users\Windows用户名目录下)</p></li><li><p>生成ssh公钥认证所需的公钥和私钥文件</p><p>ssh-keygen -t rsa -C “你的名字/你的邮箱”</p><ul><li><p>然后会出现以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Users/Administrator/.ssh/id_rsa):</span><br><span class="line">/c/Users/Administrator/.ssh/id_rsa already exists.</span><br><span class="line">Overwrite (y/n)? y（输入y）</span><br><span class="line">Enter passphrase (empty for no passphrase):（回车）</span><br><span class="line"></span><br><span class="line">Enter same passphrase again:（回车）</span><br></pre></td></tr></table></figure><p>然后系统会自动在.ssh文件夹下生成两个文件，id_rsa和id_rsa.pub，用记事本打开id_rsa.pub，将里面的内容复制到下面这里</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742249.png" alt="image-20230126123302674"></p><p>在Git中输入ssh -T <a href="mailto:&#x67;&#105;&#x74;&#x40;&#x67;&#x69;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#111;&#109;">&#x67;&#105;&#x74;&#x40;&#x67;&#x69;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#111;&#109;</a>验证与github连接是否成功时</p><p>The authenticity of host ‘github.com (13.250.177.223)’ can’t be established.<br>RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.<br>Are you sure you want to continue connecting (yes/no)? yes（输入yes）<br>Warning: Permanently added ‘github.com,13.250.177.223’ (RSA) to the list of known hosts.</p><p>Hi XXX! You’ve successfully authenticated, but GitHub does not provide shell access.</p><p>最后再试着拉取一下项目，就成了。。</p></li><li><p>但也会出现这种情况</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742032.png" alt="image-20230126123549265"></p><p>解决办法</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C &quot;2855037844@qq.com&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742244.png" alt="image-20230126123748997"></p><p>这样就成功了</p><p>然后再执行上面步骤</p></li></ul></li></ol><h4 id="4、设置主题"><a href="#4、设置主题" class="headerlink" title="4、设置主题"></a>4、设置主题</h4><p>在GitHub中搜索butterfly</p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271742893.png" alt="image-20230126130100913" style="zoom:80%;" /><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271743586.png" alt="image-20230126130142335" style="zoom:80%;" /><p>在MyBlog文件夹中右键点击Git Bash Here</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p><strong>下载完成后，在MyBlog文件夹中的_config.yml中将theme主题修改为butterfly</strong></p><p>然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>即可在localhost:4000中看到主题已经生成</p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271743608.png" alt="image-20230126130513043"></p><p>如果报错</p><p>extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</p><p>说明你沒有 pug 以及 stylus 的渲染器</p><p>解决方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-deployer-git --save / yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure><p>再然后继续执行下面命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>即可成功</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Gitee搭建个人博客</title>
      <link href="/archives/8fe2b6a8.html"/>
      <url>/archives/8fe2b6a8.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Gitee-搭建个人博客"><a href="#Hexo-Gitee-搭建个人博客" class="headerlink" title="Hexo + Gitee 搭建个人博客"></a>Hexo + Gitee 搭建个人博客</h1><h2 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h2><ul><li>安装Git</li><li>安装node.js</li><li>npm</li></ul><h3 id="官网地址"><a href="#官网地址" class="headerlink" title="官网地址"></a>官网地址</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://nodejs.org/en/</span><br><span class="line">https://git-scm.com/</span><br></pre></td></tr></table></figure><h3 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h3><ul><li>node -v</li><li>npm -v</li></ul><h2 id="二-开始搭建"><a href="#二-开始搭建" class="headerlink" title="二.开始搭建"></a>二.开始搭建</h2><h3 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1. 安装hexo"></a>1. 安装hexo</h3><p><strong>在桌面点击鼠标右键，有git bash here,点击</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271741379.png" alt="image-20220301093302576"></p><p>输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo    #通过npm安装hexo</span><br><span class="line">#-g指定全局安装，可以使用hexo命令</span><br></pre></td></tr></table></figure><h3 id="2-初始化hexo"><a href="#2-初始化hexo" class="headerlink" title="2.初始化hexo"></a>2.初始化hexo</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog   # 初始化创建，会再桌面创建blog文件夹</span><br><span class="line">cd blog              # 进入blog目录 </span><br><span class="line">npm install       # 进一步安装hexo所需文件</span><br></pre></td></tr></table></figure><p><strong>初始化后，文件夹目录如下</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271741259.png" alt="image-20220301093828945"></p><h3 id="3-启动hexo"><a href="#3-启动hexo" class="headerlink" title="3.启动hexo"></a>3.启动hexo</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   # 清除所有记录 /hexo c</span><br><span class="line">hexo generate  # 生成静态网页 /hexo g</span><br><span class="line">hexo server    # 启动服务 /hexo s</span><br></pre></td></tr></table></figure><p><strong>显示如下图，则运行成功</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271741480.png" alt="image-20220301094113737"></p><p><strong>然后使用浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></strong></p><h2 id="三-将博客部署到Gitee上"><a href="#三-将博客部署到Gitee上" class="headerlink" title="三.将博客部署到Gitee上"></a>三.将博客部署到Gitee上</h2><h3 id="1-注册码云，创建仓库"><a href="#1-注册码云，创建仓库" class="headerlink" title="1.注册码云，创建仓库"></a>1.注册码云，创建仓库</h3><p><strong>我们需要在 gitee 创建自己的账户（</strong>如果没有<strong>），然后再创建一个自己仓库</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271741411.png" alt="image-20220301092836530"></p><h3 id="2-生成-添加SSH公钥"><a href="#2-生成-添加SSH公钥" class="headerlink" title="2. 生成/添加SSH公钥"></a>2. 生成/添加SSH公钥</h3><p><strong>配置ssh账户和邮箱</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email *********@qq.com # 设置邮箱</span><br><span class="line">git config --global user.name &#x27;****&#x27;   # 设置用户名</span><br></pre></td></tr></table></figure><p><strong>查看账户和邮箱</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name </span><br><span class="line">git config --global user.email</span><br></pre></td></tr></table></figure><p><strong>本地生成ssh公钥</strong><br><strong>邮箱为刚配置好的邮箱</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxxxx@qq.com&quot;</span><br></pre></td></tr></table></figure><p><strong>按照提示完成三次回车，即可生成 ssh key</strong><br><strong>复制公钥去 Gitee 粘贴，添加</strong></p><ul><li>说明一下：<strong>GitHub、gitlab、码云</strong>三个平台可以使用一个公钥</li></ul><p><strong>测试是否连接成功</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure><h3 id="3-配置连接Gitee"><a href="#3-配置连接Gitee" class="headerlink" title="3. 配置连接Gitee"></a>3. 配置连接Gitee</h3><p>进入我们先建的仓库，复制项目地址<br>到hexo的配置文件_config.yml，相应位置修改成如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git                        # type为git</span><br><span class="line">  repo: git@gitee.com:XXXXXX/blog.git  # 仓库的 URL,只需要到blog的上一层，不是完整的URL</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><strong>注意：冒号后面一定要有空格，否则不能正确识别。</strong></p><h3 id="4-部署博客"><a href="#4-部署博客" class="headerlink" title="4.部署博客"></a>4.部署博客</h3><p><strong>安装自动部署发布工具，不然部署会报错</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><strong>创建一个博客文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;我的第一个博客&quot;</span><br><span class="line">hexo clean</span><br><span class="line">hexo g # 生成部署</span><br></pre></td></tr></table></figure><p><strong>如下图所示表示成功</strong></p><p><img src="https://cdn.jsdelivr.net/gh/luocheng49/MyBlogImage/img/202301271741412.png" alt="image-20220301100039397"></p><p><strong>再使用hexo s 启动hexo查看</strong></p><h3 id="5-其他问题"><a href="#5-其他问题" class="headerlink" title="5.其他问题"></a>5.其他问题</h3><p><strong>如果手动写了一篇博客，想要部署到网页上，则需要在文件开头加上</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title:    Hello World</span><br><span class="line">date:   2013/7/13 20:46:25</span><br><span class="line">你的内容</span><br></pre></td></tr></table></figure><p><strong>==注意，冒号后面必须有空格==</strong></p><p><strong>否则会报错</strong></p><figure class="highlight plaintext"><figcaption><span>&#123;undefined</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">err: YAMLException: end of the stream or a document separator is expected at line 6, column 1:</span><br></pre></td></tr></table></figure><p><strong>然后再将文件复制到blog/source/-posts下面</strong></p><p><strong>在该文件夹下点击鼠标右键Git Bash Here，输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g   #将新的文件夹重新部署到hexo上</span><br><span class="line">hexo s   #启动hexo</span><br></pre></td></tr></table></figure><p><strong>这样博客就部署完成了</strong></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
